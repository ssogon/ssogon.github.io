<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://your-docusaurus-test-site.com/blog</id>
    <title>ssogon's devlog Blog</title>
    <updated>2022-05-16T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://your-docusaurus-test-site.com/blog"/>
    <subtitle>ssogon's devlog Blog</subtitle>
    <icon>https://your-docusaurus-test-site.com/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[API별 DTO와 보일러플레이트 코드]]></title>
        <id>/2022/05/16/API별-DTO와-보일러플레이트-코드</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/05/16/API별-DTO와-보일러플레이트-코드"/>
        <updated>2022-05-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[아래처럼 유저를 표현하는 immutable DTO가 있다고 가정해보자.]]></summary>
        <content type="html"><![CDATA[<p>아래처럼 유저를 표현하는 immutable DTO가 있다고 가정해보자.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@Getter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">UserDto</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">long</span><span class="token plain"> id</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> name</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> password</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">LocalDateTime</span><span class="token plain"> createdAt</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>여기서 유저를 생성하기 위해 필요한 프로퍼티는 <code>name</code>과 <code>password</code>뿐이다.<br>
<!-- -->이때 우리는 API별로 필요한 프로퍼티를 명확히해두기 위해 API별 DTO를 따로 정의해두곤 한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@Getter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">UserCreationDto</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> name</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> password</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>하지만 이렇게 하나하나 만들다보면 클래스 파일이 많아져 관리가 힘들어지기 마련이다.<br>
<!-- -->그래서 아래처럼 내부 클래스를 활용하는 곳도 많이 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@Getter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">UserDto</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">long</span><span class="token plain"> id</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> name</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> password</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">LocalDateTime</span><span class="token plain"> createdAt</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Getter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Creation</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> name</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> password</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>그런데 이래나 저래나 보일러플레이트 코드가 남아있어 불편한 느낌이 가시지 않는다.<br>
<!-- -->(<em><code>UserDTO</code>의 <code>name</code>이 <code>email</code>로 바뀌면 각 DTO의 <code>name</code>을 일일이 <code>email</code>로 수정해야하고, 컴파일러단에서는 이러한 규칙을 알지 못하기 때문에 올바르게 수정되었는지 검증할 수 없다.</em>)</p><p>사실 이에 대해 매번 고민해왔지만 명쾌한 해답은 나오지 않았다.<br>
<!-- -->그러다 나와 비슷한 고민을 한 듯한 글을 발견해 소개해보자 한다.</p><blockquote><p><a href="https://blog.scottlogic.com/2020/01/03/rethinking-the-java-dto.html" target="_blank" rel="noopener noreferrer">https://blog.scottlogic.com/2020/01/03/rethinking-the-java-dto.html</a></p></blockquote><p>해당 글에서 솔루션으로 제시하고 있는 DTO의 설계는 이렇다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">enum</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ProductDTO</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Id</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#8dc891">@Positive</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Long</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">getId</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Name</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#8dc891">@NotBlank</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">getName</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Price</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#8dc891">@Positive</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Double</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">getPrice</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Cost</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#8dc891">@Positive</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Double</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">getCost</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">enum</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Request</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#8dc891">@Value</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Create</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Name</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Price</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Cost</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> name</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Double</span><span class="token plain"> price</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Double</span><span class="token plain"> cost</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">enum</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Response</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#8dc891">@Value</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Id</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Name</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Price</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Long</span><span class="token plain"> id</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> name</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Double</span><span class="token plain"> price</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#8dc891">@Value</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Id</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Name</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Price</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Cost</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Long</span><span class="token plain"> id</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> name</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Double</span><span class="token plain"> price</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Double</span><span class="token plain"> cost</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>다음 사항을 주의 깊게 살펴보자.</p><ul><li>네임스페이스를 위해 <code>enum</code>을 사용했다.<br>검색 용이성(<em>자동 완성</em>) 및 인스턴스 생성 방지를 위해 <code>enum</code>을 사용했다고 하는데 이는 개인 취향이며 <code>class</code>로 대체해도 문제없다고 한다.<br>열거형 상수가 없어 세미콜론만 달랑있는게 좀 거슬려보이긴 한다.</li><li>프로퍼티마다 gettable 인터페이스를 정의하고 각 DTO가 이를 구현하게 했다.<br>인터페이스를 변경하면 각 DTO는 컴파일 에러가 발생할 것이고 이에 따라 필드 수정을 강제하게 된다. (<em>DTO의 getter 메서드는 Lombok의 <code>@Value</code> 어노테이션에 의해 생성되고 있기 때문에</em>)<br>본문에서는 자바 인터페이스에 정적이지 않은 필드를 정의할 수 있었다면 보일러플레이트 코드를 더 줄일 수 있을 것이라며 아쉬움을 표했다.</li></ul><p>유지보수적인 측면만 본다면 더 나은 방법일지 모르겠다.<br>
<!-- -->하지만 코드가 너무 난잡하고 읽기 힘든 것은 외면할 수 없는 사실이다.</p><p>레딧에도 같은 글이 올라왔었는데, 부정적인 의견이 대다수였다.</p><blockquote><p><a href="https://www.reddit.com/r/programming/comments/icy4g7/rethinking_the_java_dto/" target="_blank" rel="noopener noreferrer">https://www.reddit.com/r/programming/comments/icy4g7/rethinking_the_java_dto/</a></p></blockquote><p>그래서 나는 일단 기존 안을 유지한채 또 다른 솔루션이 나오길 기다려볼 생각이다.<br>
<!-- -->더 많은 이들이 이 문제에 대해 같이 공감하고 고민해주면 더 나은 솔루션이 나오지 않을까.</p>]]></content>
        <category label="java" term="java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[에러 메시지를 상수 필드로 선언해두는 것이 유의미한가]]></title>
        <id>/2022/04/28/에러-메시지를-상수-필드로-선언해두는-것이-유의미한가</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/04/28/에러-메시지를-상수-필드로-선언해두는-것이-유의미한가"/>
        <updated>2022-04-28T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>에러 메시지 리터럴(<em>literal</em>)을 아래와 같이 상수 필드로 빼두는 것이 좋은가에 대한 고찰이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@NoArgsConstructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">access </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AccessLevel</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">PRIVATE</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">LocalDates</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> BIRTHDAY_MUST_NOT_BE_NULL </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"birthday must not be null"</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> BIRTHDAY_MUST_BE_ON_OR_BEFORE_TODAY </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"birthday must be on or before today"</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">calculateInternationalAge</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">LocalDate</span><span class="token plain"> birthday</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">birthday</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> BIRTHDAY_MUST_NOT_BE_NULL</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">LocalDate</span><span class="token plain"> now </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">LocalDate</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">now</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Preconditions</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">checkArgument</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">birthday</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">isBefore</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">now</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> BIRTHDAY_MUST_BE_ON_OR_BEFORE_TODAY</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Period</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">between</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">birthday</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> now</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getYears</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">calculateKoreanAge</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">LocalDate</span><span class="token plain"> birthday</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">birthday</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> BIRTHDAY_MUST_NOT_BE_NULL</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">LocalDate</span><span class="token plain"> now </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">LocalDate</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">now</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Preconditions</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">checkArgument</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">birthday</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">isBefore</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">now</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> BIRTHDAY_MUST_BE_ON_OR_BEFORE_TODAY</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> now</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getYear</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-</span><span class="token plain"> birthday</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getYear</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">+</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>만약 에러 메시지를 <strong>상수 필드로 선언하게 되면 문자열은 static 영역에 저장</strong>되어 프로그램 수행 내내 메모리에 남아 있을 것이고, <strong>상수 필드로 선언하지 않는다면 String Pool에 의해 관리</strong>될 것이다.  </p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>String Pool이란 똑같은 문자열 리터럴에 대해 메모리를 중복해서 할당하는 일이 없도록 하기 위해 JVM이 관리하고 운용하는 풀이다.<br>
<!-- -->이 String Pool은 JDK 8부터 heap 영역에 위치하기 때문에 가비지 컬렉팅의 대상이 된다.</p><blockquote><p><a href="https://www.baeldung.com/java-string-pool" target="_blank" rel="noopener noreferrer">Baeldung: Guide to Java String Pool</a></p></blockquote></div></div><p>즉, static 영역에 저장할 것이냐 heap 영역에 저장할 것이냐의 선택이다.<br>
<!-- -->에러가 자주 발생하는 것도 아닌데 굳이 static 영역을 상시로 잡아먹어야 하나 싶어진다.</p><p>그러나 같은 문자열 리터럴이 여러 군데 산재해 있다면 이를 상수 필드로 선언해두는 것이 유지보수 측면에선 더 나은 선택일 것이다.<br>
<!-- -->실제로, 정적 분석 도구인 SonarLint에서는 같은 문자열이 3번 반복됐을 때 이슈를 제기한다.</p><blockquote><p><a href="https://rules.sonarsource.com/java/RSPEC-1192" target="_blank" rel="noopener noreferrer">SonarSource: String literals should not be duplicated</a></p></blockquote>]]></content>
        <category label="java" term="java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[cjs, mjs 확장자의 등장 배경]]></title>
        <id>/2022/04/21/cjs-mjs-확장자의-등장-배경</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/04/21/cjs-mjs-확장자의-등장-배경"/>
        <updated>2022-04-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[본래 자바스크립트는 웹 사이트의 간단한 동적 처리를 위해 고안된 언어로, 초기에는 `` 태그로 필요한 모듈을 전역에 불러와 사용하는 것만으로도 충분했다.]]></summary>
        <content type="html"><![CDATA[<p>본래 자바스크립트는 웹 사이트의 간단한 동적 처리를 위해 고안된 언어로, 초기에는 <code>&lt;script&gt;</code> 태그로 필요한 모듈을 전역에 불러와 사용하는 것만으로도 충분했다.</p><div class="language-html codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-html codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag" style="color:#fc929e"> </span><span class="token tag attr-name" style="color:#c5a5c5">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#8dc891">=</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag attr-value" style="color:#8dc891">https://code.jquery.com/jquery-3.6.0.slim.min.js</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>그러나 점점 자바스크립트 생태계가 커지고 필요한 모듈들이 많아지자, 전역 네임스페이스(<em>window</em>)는 대책없이 더럽혀져갔고 모듈간에 충돌될 가능성은 점차 높아져갔다.</p><div class="language-html codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-html codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag" style="color:#fc929e"> </span><span class="token tag attr-name" style="color:#c5a5c5">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#8dc891">=</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag attr-value" style="color:#8dc891">https://code.jquery.com/jquery-3.6.0.slim.min.js</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag" style="color:#fc929e"> </span><span class="token tag attr-name" style="color:#c5a5c5">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#8dc891">=</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag attr-value" style="color:#8dc891">https://cdnjs.cloudflare.com/ajax/libs/cash/8.1.1/cash.min.js</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword" style="color:#c5a5c5">const</span><span class="token script language-javascript"> isJquery </span><span class="token script language-javascript operator" style="color:#d7deea">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript function" style="color:#79b6f2">$</span><span class="token script language-javascript punctuation" style="color:#8dc891">(</span><span class="token script language-javascript string" style="color:#8dc891">'body'</span><span class="token script language-javascript punctuation" style="color:#8dc891">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword" style="color:#c5a5c5">instanceof</span><span class="token script language-javascript"> </span><span class="token script language-javascript class-name" style="color:#FAC863">jQuery</span><span class="token script language-javascript punctuation" style="color:#8dc891">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">  </span><span class="token script language-javascript console class-name" style="color:#FAC863">console</span><span class="token script language-javascript punctuation" style="color:#8dc891">.</span><span class="token script language-javascript method function property-access" style="color:#79b6f2">log</span><span class="token script language-javascript punctuation" style="color:#8dc891">(</span><span class="token script language-javascript">isJquery</span><span class="token script language-javascript punctuation" style="color:#8dc891">)</span><span class="token script language-javascript punctuation" style="color:#8dc891">;</span><span class="token script language-javascript"> </span><span class="token script language-javascript comment" style="color:#999999">// false: jquery의 $가 cash의 $에게 덮어씌워진다.</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript"></span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>다들 모듈화의 필요성은 느끼고 있었으나 마땅한 표준이 없는 상황이었다.<br>
<!-- -->이러한 배경 속에서 모듈화 표준을 자칭하는 명세들이 우후죽순 등장하기 시작한다.</p><ul><li><strong>CJS(<em>CommonJS</em>)</strong>: Node.js에서 채택한 방식으로, <strong>서버 사이드 환경을 전제</strong>로 한다.<br><strong>모듈을 동기로 로드</strong>하기 때문에 반응성이 중요한 브라우저에서 구동하기엔 적합하지 않다.</li></ul><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token comment" style="color:#999999">// dependency.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">exports</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method-variable function-variable method function property-access" style="color:#79b6f2">sum</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color:#8dc891">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> a </span><span class="token operator" style="color:#d7deea">+</span><span class="token plain"> b</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token comment" style="color:#999999">// app.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> moduleA </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">require</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'dependency'</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token console class-name" style="color:#FAC863">console</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">log</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">moduleA</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">sum</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><strong>AMD(<em>Asynchronous Module Definition</em>)</strong>: <strong>브라우저에서 모듈 시스템을 이용하기 위한 방식</strong>이다.<br>콜백을 이용한 <strong>비동기적 모듈 로드</strong>를 지원하며, <a href="https://requirejs.org/" target="_blank" rel="noopener noreferrer">require.js</a>가 대표적인 AMD의 구현체다.</li></ul><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token comment" style="color:#999999">// dependencyA.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">define</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function-variable function" style="color:#79b6f2">sum</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color:#8dc891">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> a </span><span class="token operator" style="color:#d7deea">+</span><span class="token plain"> b</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token comment" style="color:#999999">// dependencyB.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">define</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token string" style="color:#8dc891">'dependencyA'</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token parameter">dependencyA</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function-variable function" style="color:#79b6f2">sum</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color:#8dc891">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> dependencyA</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">sum</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token comment" style="color:#999999">// app.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">require</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token string" style="color:#8dc891">'dependencyB'</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token parameter">dependencyB</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token console class-name" style="color:#FAC863">console</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">log</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">dependencyB</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">sum</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><strong>UMD(<em>Univarsal Module Definition</em>)</strong>: 현재 환경에 따라 CJS와 AMD로 분기하는 패턴을 말한다.</li></ul><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">function</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token parameter">root</span><span class="token parameter punctuation" style="color:#8dc891">,</span><span class="token parameter"> factory</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">typeof</span><span class="token plain"> module </span><span class="token operator" style="color:#d7deea">===</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'object'</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">&amp;&amp;</span><span class="token plain"> module</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">exports</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    module</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">factory</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token function" style="color:#79b6f2">require</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'dependency'</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// CJS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">typeof</span><span class="token plain"> define </span><span class="token operator" style="color:#d7deea">===</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'function'</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">&amp;&amp;</span><span class="token plain"> define</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">amd</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token function" style="color:#79b6f2">define</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token string" style="color:#8dc891">'dependency'</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> factory</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// AMD</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    root</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">dependency</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">factory</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">root</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">dependency</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// window</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token parameter">dependency</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token console class-name" style="color:#FAC863">console</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">log</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">dependency</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">sum</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이러한 판국에서 ECMA가 뒤늦게 표준 모듈안 <strong>ESM(<em>ECMAScript Module</em>)</strong>을 내놓았다.</p><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token comment" style="color:#999999">// dependency.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">export</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">function</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">sum</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color:#8dc891">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#c5a5c5">return</span><span class="token plain"> a </span><span class="token operator" style="color:#d7deea">+</span><span class="token plain"> b</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token comment" style="color:#999999">// app.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports operator" style="color:#d7deea">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:#c5a5c5">as</span><span class="token imports"> dependency</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'dependency'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token console class-name" style="color:#FAC863">console</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">log</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">dependency</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">sum</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>제목의 본론으로 돌아와 cjs와 mjs 확장자가 등장한 이유는 바로 이러한 배경과 관련이 있다.<br>
<strong>기존에 CJS를 사용하던 Node.js는 13.2 버전부터 ECMA가 제시한 ESM도 지원하게 되었고 이 때문에 CJS와 ESM 간의 구분이 필요해진 것이다.</strong><br>
<!-- -->그래서 임시방편으로 CJS를 나타내는 cjs와 ESM을 나타내는 mjs 확장자가 등장하게 되었다.</p><p>만약 개별 확장자가 아닌 프로젝트 단위로 모듈 명세를 설정하고 싶다면 <code>package.json</code>의 <code>type</code>을 commonjs 또는 module로 주면 된다. (<em>기본 값은 commonjs다.</em>)</p><div class="language-json codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-json codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"type"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"module"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  ...</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="javascript" term="javascript"/>
        <category label="node-js" term="node-js"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[SvelteKit에 Tailwindcss 끼얹기]]></title>
        <id>/2022/04/03/SvelteKit에-Tailwindcss-끼얹기</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/04/03/SvelteKit에-Tailwindcss-끼얹기"/>
        <updated>2022-04-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Svelte는 React나 Vue와는 달리 Virtual DOM을 사용하지 않고 빌드 시점에 Vanilla JS로 컴파일으로써 성능 상의 이점을 가져가는 차세대 프론트엔드 프레임워크다. (아래 살펴볼 SvelteKit은 Svelte에 SSR, hot reload 등을 접목시킨 것이다.)]]></summary>
        <content type="html"><![CDATA[<p><strong><a href="https://svelte.dev/" target="_blank" rel="noopener noreferrer">Svelte</a></strong>는 React나 Vue와는 달리 <strong>Virtual DOM을 사용하지 않고 빌드 시점에 Vanilla JS로 컴파일으로써 성능 상의 이점을 가져가는 차세대 프론트엔드 프레임워크</strong>다. (<em>아래 살펴볼 <a href="https://kit.svelte.dev/" target="_blank" rel="noopener noreferrer">SvelteKit</a>은 Svelte에 SSR, hot reload 등을 접목시킨 것이다.</em>)<br>
<!-- -->여기에 <a href="https://tailwindcss.com/docs/utility-first" target="_blank" rel="noopener noreferrer">utility-first</a>라는 매력적인 컨셉을 밀고 있는 CSS 프레임워크, <a href="https://tailwindcss.com/" target="_blank" rel="noopener noreferrer">Tailwindcss</a>를 적용시켜보자.</p><hr><p>아직 SvelteKit 프로젝트가 없다면 새로 생성해준다.</p><div class="language-shell codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-shell codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> init svelte@next </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain">생성할 프로젝트명</span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">√ Which Svelte app template? » Skeleton project</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">√ Use TypeScript? </span><span class="token punctuation" style="color:#8dc891">..</span><span class="token plain">. Yes</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">√ Add ESLint </span><span class="token keyword" style="color:#c5a5c5">for</span><span class="token plain"> code linting? </span><span class="token punctuation" style="color:#8dc891">..</span><span class="token plain">. Yes</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">√ Add Prettier </span><span class="token keyword" style="color:#c5a5c5">for</span><span class="token plain"> code formatting? </span><span class="token punctuation" style="color:#8dc891">..</span><span class="token plain">. Yes</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">√ Add Playwright </span><span class="token keyword" style="color:#c5a5c5">for</span><span class="token plain"> browser testing? </span><span class="token punctuation" style="color:#8dc891">..</span><span class="token plain">. Yes</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>프로젝트 생성 직후의 디렉터리 구조는 다음과 같다.</p><div class="language-md codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-md codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token plain">project</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── .svelte-kit</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── node_modules</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── src</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    ├── routes</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        ├── __layout.svelte</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        └── index.svelte</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    ├── app.d.ts</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    └── app.html</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>생성한 프로젝트에 <code>tailwindcss</code>, <code>postcss</code>, <code>autoprefixer</code> 종속성을 추가해준다.</p><div class="language-shell codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-shell codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token builtin class-name" style="color:#FAC863">cd</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain">생성한 프로젝트명</span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> -D tailwindcss postcss autoprefixer</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>tailwindcss</code>: <a href="https://tailwindcss.com/docs/utility-first" target="_blank" rel="noopener noreferrer">utility-first</a>라는 컨셉을 밀고 있는 CSS 프레임워크다.</li><li><code>postcss</code>: 여러 플러그인을 연결해 CSS를 변환할 수 있는 CSS 후처리기(<em>post processor</em>)다.</li><li><code>autoprefixer</code>: -webkit-, -moz-, -ms-와 같은 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix" target="_blank" rel="noopener noreferrer">vendor prefix</a>를 추가해주는 postcss 플러그인이다.</li></ul><p>그 다음 tailwindcss를 초기화하여 <code>tailwind.config.cjs</code> 파일을 생성해준다.</p><div class="language-shell codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-shell codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token plain">npx tailwindcss init tailwind.config.cjs -p</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>postcss.config.js</code>의 확장자는 cjs로 변경해주자.<br>
<!-- -->이는 단순히 <a href="https://ko.wikipedia.org/wiki/CommonJS" target="_blank" rel="noopener noreferrer">CommonJS</a>를 사용한다는 것을 명시하기 위함이다.</p><div class="language-shell codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-shell codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token function" style="color:#79b6f2">mv</span><span class="token plain"> postcss.config.js postcss.config.cjs</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>tailwind.config.cjs</code>의 content에는 svelte를 추가하여 같이 읽힐 수 있도록 한다.</p><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token plain">module</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token literal-property property" style="color:#5a9bcf">content</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token string" style="color:#8dc891">'./src/**/*.{html,js,svelte,ts}'</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token literal-property property" style="color:#5a9bcf">theme</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token literal-property property" style="color:#5a9bcf">extend</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token literal-property property" style="color:#5a9bcf">plugins</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>/src/app.css</code>을 생성한 뒤, 사용할 <a href="https://tailwindcss.com/docs/functions-and-directives" target="_blank" rel="noopener noreferrer">tailwind directive</a>를 추가한다.</p><div class="language-css codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-css codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token atrule rule">@tailwind</span><span class="token atrule"> base</span><span class="token atrule punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token atrule rule">@tailwind</span><span class="token atrule"> components</span><span class="token atrule punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token atrule rule">@tailwind</span><span class="token atrule"> utilities</span><span class="token atrule punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>그 후 <code>/src/routes/__layout.svelte</code>를 생성하고 방금 만든 <code>/src/app.css</code>을 import해준다.</p><div class="language-html codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-html codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword module" style="color:#c5a5c5">import</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#8dc891">"../app.css"</span><span class="token script language-javascript punctuation" style="color:#8dc891">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript"></span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">slot</span><span class="token tag" style="color:#fc929e"> </span><span class="token tag punctuation" style="color:#8dc891">/&gt;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이제 초기 설정은 끝났다. 🎉<br>
<!-- -->바로 실행시켜보자.</p><div class="language-shell codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-shell codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> run dev</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>/src/routes/index.svelte</code>에 Tailwindcss의 class를 적용시키면 hot reload되며 스타일이 변경되는 것을 확인할 수 있을 것이다.</p><div class="language-html codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-html codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">h1</span><span class="token tag" style="color:#fc929e"> </span><span class="token tag attr-name" style="color:#c5a5c5">class</span><span class="token tag attr-value punctuation attr-equals" style="color:#8dc891">=</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag attr-value" style="color:#8dc891">text-3xl font-bold underline</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  Hello world!</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">h1</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><a href="https://kit.svelte.dev/docs/introduction#getting-started" target="_blank" rel="noopener noreferrer">SvelteKit: Getting started</a><br>
<a href="https://tailwindcss.com/docs/guides/sveltekit" target="_blank" rel="noopener noreferrer">Tailwindcss: Install Tailwind CSS with SvelteKit</a></p></blockquote><hr><p>Svelte에 라이브러리를 추가하는 예도 살펴보자.<br>
<!-- -->마이크로소프트의 VisualStudio Code와 유사하게 동작하는 <a href="https://microsoft.github.io/monaco-editor/index.html" target="_blank" rel="noopener noreferrer">Monaco Editor</a>를 추가해보겠다.</p><div class="language-shell codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-shell codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> monaco-editor</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>DOM이 렌더링된 후에 실행되는 Svelte의 <code>onMount</code>에서 Monaco Editor를 초기화해준다.</p><div class="language-html codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-html codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag" style="color:#fc929e"> </span><span class="token tag attr-name" style="color:#c5a5c5">lang</span><span class="token tag attr-value punctuation attr-equals" style="color:#8dc891">=</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag attr-value" style="color:#8dc891">ts</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword module" style="color:#c5a5c5">import</span><span class="token script language-javascript"> </span><span class="token script language-javascript imports punctuation" style="color:#8dc891">{</span><span class="token script language-javascript imports"> onMount </span><span class="token script language-javascript imports punctuation" style="color:#8dc891">}</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword module" style="color:#c5a5c5">from</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#8dc891">'svelte'</span><span class="token script language-javascript punctuation" style="color:#8dc891">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword module" style="color:#c5a5c5">import</span><span class="token script language-javascript"> </span><span class="token script language-javascript imports punctuation" style="color:#8dc891">{</span><span class="token script language-javascript imports"> editor </span><span class="token script language-javascript imports punctuation" style="color:#8dc891">}</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword module" style="color:#c5a5c5">from</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#8dc891">'monaco-editor'</span><span class="token script language-javascript punctuation" style="color:#8dc891">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">  </span><span class="token script language-javascript function" style="color:#79b6f2">onMount</span><span class="token script language-javascript punctuation" style="color:#8dc891">(</span><span class="token script language-javascript keyword" style="color:#c5a5c5">async</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#8dc891">(</span><span class="token script language-javascript punctuation" style="color:#8dc891">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript arrow operator" style="color:#d7deea">=&gt;</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#8dc891">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">    </span><span class="token script language-javascript keyword" style="color:#c5a5c5">const</span><span class="token script language-javascript"> </span><span class="token script language-javascript literal-property property" style="color:#5a9bcf">monacoEditor</span><span class="token script language-javascript operator" style="color:#d7deea">:</span><span class="token script language-javascript"> editor</span><span class="token script language-javascript punctuation" style="color:#8dc891">.</span><span class="token script language-javascript property-access maybe-class-name">IStandaloneCodeEditor</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#d7deea">=</span><span class="token script language-javascript"> editor</span><span class="token script language-javascript punctuation" style="color:#8dc891">.</span><span class="token script language-javascript method function property-access" style="color:#79b6f2">create</span><span class="token script language-javascript punctuation" style="color:#8dc891">(</span><span class="token script language-javascript dom variable" style="color:#d7deea">document</span><span class="token script language-javascript punctuation" style="color:#8dc891">.</span><span class="token script language-javascript method function property-access" style="color:#79b6f2">getElementById</span><span class="token script language-javascript punctuation" style="color:#8dc891">(</span><span class="token script language-javascript string" style="color:#8dc891">'editor'</span><span class="token script language-javascript punctuation" style="color:#8dc891">)</span><span class="token script language-javascript punctuation" style="color:#8dc891">,</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#8dc891">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#5a9bcf">theme</span><span class="token script language-javascript operator" style="color:#d7deea">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#8dc891">'vs-dark'</span><span class="token script language-javascript punctuation" style="color:#8dc891">,</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#5a9bcf">language</span><span class="token script language-javascript operator" style="color:#d7deea">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#8dc891">'java'</span><span class="token script language-javascript punctuation" style="color:#8dc891">,</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#5a9bcf">value</span><span class="token script language-javascript operator" style="color:#d7deea">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript template-string template-punctuation string" style="color:#8dc891">`</span><span class="token script language-javascript template-string string" style="color:#8dc891">public class Main {</span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript template-string string" style="color:#8dc891">  public static void main(String... args) {</span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript template-string string" style="color:#8dc891">    System.out.println("hello, world!");</span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript template-string string" style="color:#8dc891">  }</span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript template-string string" style="color:#8dc891">}</span><span class="token script language-javascript template-string template-punctuation string" style="color:#8dc891">`</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#8dc891">}</span><span class="token script language-javascript punctuation" style="color:#8dc891">)</span><span class="token script language-javascript punctuation" style="color:#8dc891">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">    </span><span class="token script language-javascript keyword control-flow" style="color:#c5a5c5">return</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#8dc891">(</span><span class="token script language-javascript punctuation" style="color:#8dc891">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript arrow operator" style="color:#d7deea">=&gt;</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#8dc891">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">      monacoEditor</span><span class="token script language-javascript punctuation" style="color:#8dc891">.</span><span class="token script language-javascript method function property-access" style="color:#79b6f2">dispose</span><span class="token script language-javascript punctuation" style="color:#8dc891">(</span><span class="token script language-javascript punctuation" style="color:#8dc891">)</span><span class="token script language-javascript punctuation" style="color:#8dc891">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#8dc891">}</span><span class="token script language-javascript punctuation" style="color:#8dc891">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript">  </span><span class="token script language-javascript punctuation" style="color:#8dc891">}</span><span class="token script language-javascript punctuation" style="color:#8dc891">)</span><span class="token script language-javascript punctuation" style="color:#8dc891">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token script language-javascript"></span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">script</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">div</span><span class="token tag" style="color:#fc929e"> </span><span class="token tag attr-name" style="color:#c5a5c5">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#8dc891">=</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag attr-value" style="color:#8dc891">editor</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag" style="color:#fc929e"> </span><span class="token tag attr-name" style="color:#c5a5c5">class</span><span class="token tag attr-value punctuation attr-equals" style="color:#8dc891">=</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag attr-value" style="color:#8dc891">w-screen h-screen</span><span class="token tag attr-value punctuation" style="color:#8dc891">"</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">div</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>서버 사이드 렌더링(<em>SSR</em>) 때문에 Svelte의 컴포넌트가 DOM에 마운트된 후 실행되길 원하는 로직은 <code>&lt;script&gt;</code>의 최상위 레벨이 아닌 <code>onMount</code>에 위치해야 한다.  </p><p>위 코드에서 <code>onMount</code>가 반환하는 함수는 컴포넌트가 파괴될 때 호출될 콜백을 나타낸다.</p><blockquote><p><a href="https://svelte.dev/tutorial/onmount" target="_blank" rel="noopener noreferrer">SvelteKit: Lifecycle / onMount</a><br>
<a href="https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-esm.md" target="_blank" rel="noopener noreferrer">Monaco Editor: Integrating the ESM version of the Monaco Editor</a></p></blockquote>]]></content>
        <category label="javascript" term="javascript"/>
        <category label="typescript" term="typescript"/>
        <category label="node-js" term="node-js"/>
        <category label="svelte-kit" term="svelte-kit"/>
        <category label="tailwindcss" term="tailwindcss"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[에러 핸들링 스키마 벤치마킹]]></title>
        <id>/2022/03/31/에러-핸들링-스키마-벤치마킹</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/03/31/에러-핸들링-스키마-벤치마킹"/>
        <updated>2022-03-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[중구난방이었던 REST API 에러 핸들링 표준화를 위해 IETF에서 RFC 7807를 고안했다.]]></summary>
        <content type="html"><![CDATA[<p>중구난방이었던 REST API 에러 핸들링 표준화를 위해 IETF에서 <a href="https://datatracker.ietf.org/doc/html/rfc7807" target="_blank" rel="noopener noreferrer">RFC 7807</a>를 고안했다.<br>
<!-- -->RFC 7807은 <strong>type, title, status, detail, instance</strong> 총 다섯 파트로 구성된 에러 스키마를 제시한다.</p><div class="language-json codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-json codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"type"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"https://example.com/probs/out-of-credit"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"title"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"You do not have enough credit."</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"status"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">403</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"detail"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"Your current balance is 30, but that costs 50."</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"instance"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"/account/12345/msgs/abc"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"balance"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">30</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"accounts"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token string" style="color:#8dc891">"/account/12345"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"/account/67890"</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>type</code>: 에러에 대한 세부 정보를 제공하는 URI 식별자</li><li><code>title</code>: 요약된 에러 메시지</li><li><code>status</code>: 클라이언트의 편의를 위한 HTTP 상태 코드 (<em>실제 서버가 반환한 상태 코드와 동일</em>)</li><li><code>detail</code>: 클라이언트의 디버깅을 돕기 위한 에러 상세 메시지</li><li><code>instance</code>: 특정 에러 발생을 식별(<em>identify</em>)하기 위한 URI</li></ul><p>대부분의 REST API들은 RFC 7807에 기반한 스키마를 사용하지만 세부사항은 조금씩 다르다.<br>
<!-- -->각 메이저 기업들에서는 어떤 방식으로 에러 스키마를 디자인했는지 살펴보자.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="구글">구글<a class="hash-link" href="#구글" title="Direct link to heading">​</a></h2><p>먼저 구글 API 오류 응답의 예이다.</p><div class="language-json codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-json codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"error"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"code"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">400</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"message"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"API key not valid. Please pass a valid API key."</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"status"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"INVALID_ARGUMENT"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"details"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"@type"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"type.googleapis.com/google.rpc.ErrorInfo"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"reason"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"API_KEY_INVALID"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"domain"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"googleapis.com"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"metadata"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">          </span><span class="token property" style="color:#5a9bcf">"service"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"translate.googleapis.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>code</code>: 에러 코드 (<em>HTTP 상태 코드와 대응되는 에러 코드</em>)</li><li><code>message</code>: 에러 메시지</li><li><code>status</code>: 에러 코드의 열거형 버전 (<em><a href="https://cloud.google.com/tasks/docs/reference/rpc/google.rpc#code" target="_blank" rel="noopener noreferrer">google.rpc.Code</a></em>)</li><li><code>details</code>: 에러 상세 메시지</li></ul><blockquote><p><a href="https://cloud.google.com/apis/design/errors" target="_blank" rel="noopener noreferrer">https://cloud.google.com/apis/design/errors</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="마이크로소프트">마이크로소프트<a class="hash-link" href="#마이크로소프트" title="Direct link to heading">​</a></h2><p>다음은 마이크로소프트 API 오류 응답의 예이다.</p><ol><li>내부 에러를 중첩하여 나타내려는 경우</li></ol><div class="language-json codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-json codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"error"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"code"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"BadArgument"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"message"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"Previous passwords may not be reused"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"target"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"password"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"innererror"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token property" style="color:#5a9bcf">"code"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"PasswordError"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token property" style="color:#5a9bcf">"innererror"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"code"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"PasswordDoesNotMeetPolicy"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"minLength"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"6"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"maxLength"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"64"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"characterTypes"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token string" style="color:#8dc891">"lowerCase"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token string" style="color:#8dc891">"upperCase"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token string" style="color:#8dc891">"number"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token string" style="color:#8dc891">"symbol"</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"minDistinctCharacterTypes"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"2"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"innererror"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">          </span><span class="token property" style="color:#5a9bcf">"code"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"PasswordReuseNotAllowed"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>code</code>: 에러 코드</li><li><code>message</code>: 에러 메시지</li><li><code>target</code>: 에러 대상 (<em>ex: 잘못된 파라미터명</em>)</li><li><code>innererror</code>: 내부 에러</li></ul><ol start="2"><li>내부 에러를 배열하여 나타내려는 경우</li></ol><div class="language-json codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-json codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"error"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"code"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"BadArgument"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"message"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"Multiple errors in ContactInfo data"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"target"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"ContactInfo"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"details"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"code"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"NullValue"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"target"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"PhoneNumber"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"message"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"Phone number must not be null"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"code"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"NullValue"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"target"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"LastName"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"message"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"Last name must not be null"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"code"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"MalformedValue"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"target"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"Address"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"message"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"Address is not valid"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>code</code>: 에러 코드</li><li><code>message</code>: 에러 메시지</li><li><code>target</code>: 에러 대상 (<em>ex: 잘못된 파라미터명</em>)</li><li><code>details</code>: 내부 에러</li></ul><blockquote><p><a href="https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#7102-error-condition-responses" target="_blank" rel="noopener noreferrer">https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#7102-error-condition-responses</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="트위터">트위터<a class="hash-link" href="#트위터" title="Direct link to heading">​</a></h2><p>다음은 트위터 API 오류 응답의 예이다.</p><div class="language-json codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-json codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"errors"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token property" style="color:#5a9bcf">"parameters"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token property" style="color:#5a9bcf">"end_time"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">          </span><span class="token string" style="color:#8dc891">"2026-10-31T23:59Z"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token property" style="color:#5a9bcf">"message"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"Invalid 'end_time':'2026-10-31T23:59Z'. 'end_time' must be a minimum of 10 seconds prior to the request time."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"title"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"Invalid Request"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"detail"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"One or more parameters to your request was invalid."</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"type"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"https://api.twitter.com/2/problems/invalid-request"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>parameters</code>: 요청 파라미터</li><li><code>message</code>: 최종 사용자가 아닌 클라이언트 개발자가 받아 볼 에러 메시지</li><li><code>title</code>: 사용자 인터페이스에 표시될 수 있는 에러 제목 (<em>ex: 다이얼로그 제목</em>)</li><li><code>detail</code>: 사용자 인터페이스에 표시될 수 있는 에러 메시지 (<em>ex: 다이얼로그 내용</em>)</li><li><code>type</code>: 에러에 대한 세부 정보를 제공하는 URI 식별자</li></ul><blockquote><p><a href="https://developer.twitter.com/en/support/twitter-api/error-troubleshooting" target="_blank" rel="noopener noreferrer">https://developer.twitter.com/en/support/twitter-api/error-troubleshooting</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="페이스북">페이스북<a class="hash-link" href="#페이스북" title="Direct link to heading">​</a></h2><p>다음은 페이스북 API 오류 응답의 예이다. </p><div class="language-json codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-json codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"error"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"message"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"Message describing the error"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"type"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"OAuthException"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"code"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">190</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"error_subcode"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">460</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"error_user_title"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"A title"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"error_user_msg"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"A message"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"fbtrace_id"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"EJplcsCHuLu"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>message</code>: 최종 사용자가 아닌 클라이언트 개발자가 받아 볼 에러 메시지</li><li><code>type</code>: 에러 카테고리</li><li><code>code</code>: 에러 코드 (<em>HTTP 상태 코드가 아닌 자체 정의 에러 코드</em>)</li><li><code>error_subcode</code>: 에러 서브 코드</li><li><code>error_user_title</code>: 사용자 인터페이스에 표시될 수 있는 에러 제목 (<em>ex: 다이얼로그 제목</em>)</li><li><code>error_user_msg</code>: 사용자 인터페이스에 표시될 수 있는 에러 메시지 (<em>ex: 다이얼로그 내용</em>)</li><li><code>fbtrace_id</code>: 로그에서 오류를 추적하기 위한 식별 번호</li></ul><blockquote><p><a href="https://developers.facebook.com/docs/graph-api/guides/error-handling" target="_blank" rel="noopener noreferrer">https://developers.facebook.com/docs/graph-api/guides/error-handling</a></p></blockquote>]]></content>
        <category label="http" term="http"/>
        <category label="rest-api" term="rest-api"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[람다식 안에서 @SneakyThrows 사용하기]]></title>
        <id>/2022/03/19/람다식-안에서-@SneakyThrows-사용하기</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/03/19/람다식-안에서-@SneakyThrows-사용하기"/>
        <updated>2022-03-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@SneakyThrows는 Checked Exception을 throws절을 통해 명시적으로 처리하지 않아도 컴파일 에러가 발생하지 않도록 해주는 Lombok🌶의 어노테이션이다.]]></summary>
        <content type="html"><![CDATA[<p><code>@SneakyThrows</code>는 Checked Exception을 <code>throws</code>절을 통해 명시적으로 처리하지 않아도 컴파일 에러가 발생하지 않도록 해주는 Lombok🌶의 어노테이션이다.<br>
<!-- -->이 어노테이션은 <strong>Checked Exception의 제약이 컴파일러에 의해서만 강제되며, JVM은 어떤 예외든 상관없이 throw를 허용한다는 점을 이용</strong>해 컴파일러를 속이는 트릭을 사용한다.<br>
<!-- -->(<em>강타입인 타입스크립트가 런타임때는 약타입이 되는 것과 같은 이치다.</em>)</p><blockquote><p><a href="https://www.baeldung.com/java-sneaky-throws" target="_blank" rel="noopener noreferrer">Baeldung: “Sneaky Throws” in Java</a></p></blockquote><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>컴파일러의 규칙이 마음에 들지 않는다고 편법을 사용하는 것과 마찬가지기 때문에 이를 비판적으로 보는 시선도 있다.</p></div></div><p><a href="https://projectlombok.org/features/SneakyThrows" target="_blank" rel="noopener noreferrer">@SneakyThrows 소개 페이지</a>에 따르면 <code>@SneakyThrows</code>는 아래 경우에만 사용할 것을 권하고 있다.</p><ul><li><code>Runnable</code>의 <code>run()</code>처럼 Checked Exception을 외부로 전파할 수 없어 <code>try-catch</code>절로 잡은 후 Runtime Exception으로 래핑해야 하는 경우</li><li><code>UnsupportedEncodingException</code>처럼 발생할 수 없는 예외에 대한 처리를 피하고 싶은 경우</li></ul><p>그리고 이어서 이런 문장이 나온다.</p><blockquote><p>보통 람다식을 사용할 때 Checked Exception 처리에 대한 불편함을 많이 겪으나 <strong>람다식에는 어노테이션을 붙일 수 없어 <code>@SneakyThrows</code>를 사용하지 못한다.</strong></p></blockquote><p>람다식 안에서 Checked Exception을 처리하는 것은 정말 끔찍한 일이다.<br>
<!-- -->간단명료함이 장점인 람다식이 <code>try-catch</code>문 때문에 비대해지기 때문이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Thread</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    outputStream</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">write</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">IOException</span><span class="token plain"> ioException</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IllegalStateException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">ioException</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>다른 사람들은 람다식 안의 Checked Exception을 어떻게 처리하나 찾아보다 Runtime Exception을 던지는 Functional Interface로 래핑하여 해결하는 방법을 발견했다.</p><blockquote><p><a href="https://www.baeldung.com/java-lambda-exceptions" target="_blank" rel="noopener noreferrer">Baeldung: Exceptions in Java 8 Lambda Expressions</a></p></blockquote><p>나는 여기서 조금만 비틀어 Runtime Exception으로 래핑하는 대신 <code>@SneakyThrows</code>로 처리해봤다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@NoArgsConstructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">access </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AccessLevel</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">PRIVATE</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">SneakyThrower</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Runnable</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">wrap</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ThrowingRunnable</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Exception</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> throwingRunnable</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">throwingRunnable</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"throwingRunnable must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        throwingRunnable</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">run</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Exception</span><span class="token plain"> exception</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">        </span><span class="token function" style="color:#79b6f2">sneakyThrow</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">exception</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@SneakyThrows</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">sneakyThrow</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Exception</span><span class="token plain"> exception</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> exception</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@FunctionalInterface</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ThrowingRunnable</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">E</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">extends</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">Exception</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">run</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">throws</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">E</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Thread</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">SneakyThrower</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">wrap</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  outputStream</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">write</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Runtime Exception으로 래핑하는 단계가 없어져 stacktrace에 불필요한 depth가 들어가지 않게 되었다.</p><hr><p>사실 <code>Unsafe</code>를 이용한 방법도 있긴 한데 이것도 흑마법같긴 매한가지다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">Unsafe</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getUnsafe</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">throwException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IOException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><a href="https://www.baeldung.com/java-unsafe#throwing-an-exception" target="_blank" rel="noopener noreferrer">Baeldung: Guide to sun.misc.Unsafe</a></p></blockquote><hr><p>좀 더 찾아보니 <code>&lt;T extends Exception&gt;</code>의 구체적인 추론이 불가능할 때 <code>RuntimeException</code>으로 관대하게 평가된다는 점을 이용한 방법도 있었다.</p><blockquote><p><a href="https://4comprehension.com/sneakily-throwing-exceptions-in-lambda-expressions-in-java/" target="_blank" rel="noopener noreferrer">4Comprehension: Sneakily Throwing Exceptions in Lambda Expressions in Java</a></p></blockquote>]]></content>
        <category label="java" term="java"/>
        <category label="lombok" term="lombok"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[모든 switch (enum) 분기를 상정했음에도 default 케이스를 고려해야 하는 이유]]></title>
        <id>/2022/02/22/모든-switch-enum-분기를-상정했음에도-default-케이스를-고려해야-하는-이유</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/02/22/모든-switch-enum-분기를-상정했음에도-default-케이스를-고려해야-하는-이유"/>
        <updated>2022-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[switch문을 열거형으로 분기할 때는 항상 아래와 같이 default 케이스를 고려해주곤 한다.]]></summary>
        <content type="html"><![CDATA[<p>switch문을 열거형으로 분기할 때는 항상 아래와 같이 default 케이스를 고려해주곤 한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">enum</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">State</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  ON</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> OFF</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">isOn</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">State</span><span class="token plain"> state</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">switch</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">state</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">case</span><span class="token plain"> ON</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">true</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">case</span><span class="token plain"> OFF</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">false</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">default</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AssertionError</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"unreachable branch"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>위 코드에서 default 케이스는 언뜻 불필요해 보이지만 이를 지우게되면 마지막 라인에서 <strong>"Missing return statement"</strong>라는 컴파일 에러가 발생하게 된다.<br>
<!-- -->열거형의 모든 케이스를 고려했음에도 그 외의 경우를 상정해야 한다는 것은 상식적으로 이해가 되지 않는 부분이었다.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>switch문에 <code>null</code>이 넘겨지는 경우는 런타임에 <code>NullPointerException</code>이 발생할 일이지 default 케이스로 처리할 수 있는 사항은 아니다.</p></div></div><p>구글링을 해본 결과 구글의 정적 분석 도구인 Error Prone 문서에서 관련 내용을 찾을 수 있었다.  </p><blockquote><p><a href="https://errorprone.info/bugpattern/UnnecessaryDefaultInEnumSwitch" target="_blank" rel="noopener noreferrer">Error Prone: UnnecessaryDefaultInEnumSwitch</a></p></blockquote><p><strong>문제의 핵심은 자바의 이진 호환성(<em>binary compatibility</em>)</strong>이었다.<br>
<!-- -->이진 호환성이란 한 클래스를 수정하더라도 그 클래스를 사용하는 클래스는 재컴파일할 필요가 없어야 한다는 JLS(<em>Java Language Specification</em>) 명세 중 하나다.</p><blockquote><p><a href="https://docs.oracle.com/javase/specs/jls/se10/html/jls-13.html" target="_blank" rel="noopener noreferrer">JLS: Binary Compatibility</a></p></blockquote><p>현재 상황에 빗대어 보면 <code>State</code> 열거형을 수정하더라도 <code>isOn(State)</code> 메서드가 선언되어 있는 클래스는 재컴파일할 필요가 없어야 한다는 이야기가 된다.<br>
<!-- -->즉, <strong>컴파일된 switch문은 추후 열거형에 상수가 추가되어도 그에 맞춰 재컴파일을 할 필요가 없도록 현재 선언되어 있는 상수 이외의 케이스도 함께 고려해야만 했던 것</strong>이다.</p><hr><p>참고로 JDK 13의 <a href="https://www.baeldung.com/java-switch#1-the-new-switch-expression" target="_blank" rel="noopener noreferrer">enhanced switch</a>문을 사용하면 컴파일러가 알아서 default 케이스를 추가해주기 때문에 위와 같은 상황은 발생하지 않는다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">isOn</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">State</span><span class="token plain"> state</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">switch</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">state</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">case</span><span class="token plain"> ON </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">true</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">case</span><span class="token plain"> OFF </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">false</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>enhanced switch문을 사용한 코드를 컴파일한 후 다시 디컴파일해보면 default 케이스가 추가된 것을 확인해볼 수 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">isOn</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">State</span><span class="token plain"> state</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> var10000</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">switch</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">state</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">case</span><span class="token plain"> ON</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      var10000 </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">true</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">break</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">case</span><span class="token plain"> OFF</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      var10000 </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">false</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">break</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">default</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IncompatibleClassChangeError</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> var10000</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="java" term="java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[스프링 부트 JavaFX 어플리케이션 초기 설정]]></title>
        <id>/2022/02/13/스프링-부트-JavaFX-어플리케이션-초기-설정</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/02/13/스프링-부트-JavaFX-어플리케이션-초기-설정"/>
        <updated>2022-02-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[이 글은 아래 튜토리얼을 의역하여 작성된 것임을 밝힌다.]]></summary>
        <content type="html"><![CDATA[<p>이 글은 아래 튜토리얼을 의역하여 작성된 것임을 밝힌다.</p><blockquote><p><a href="https://blog.jetbrains.com/idea/2019/11/tutorial-reactive-spring-boot-a-javafx-spring-boot-application/" target="_blank" rel="noopener noreferrer">JetBrains Blog: A JavaFX Spring Boot Application</a><br>
<a href="https://www.youtube.com/watch?v=u0dEf-QN-90" target="_blank" rel="noopener noreferrer">Youtube: JavaFX Spring Boot Application</a></p><hr><p>JavaFX 어플리케이션이 스프링의 종속성 주입과 같은 기능을 사용할 수 있도록 만들어보자.</p></blockquote><p>우선 아무런 spring-boot-starter도 선택하지 않은 채 스프링 부트 프로젝트를 생성한다.<br>
<!-- -->프로젝트를 생성하면 기본 어플리케이션 클래스가 생성되었을 것이다.<br>
<!-- -->JavaFX 어플리케이션을 실행시키기 위해서는 이를 수정해야 하지만 지금은 그대로 두겠다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@SpringBootApplication</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StockUiApplication</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">main</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">String</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> args</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">SpringApplication</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">run</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">StockUiApplication</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> args</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>우리는 웹 어플리케이션이 아닌 JavaFX 어플리케이션을 만들 것이므로 <code>application.properties</code>에 <code>spring.main.web-application-type=none</code> 설정이 필요하다.  </p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p><code>spring.main.web-application-type=none</code> 설정은 전이 종속성(<em>transitive dependency</em>)으로 웹 서버 종속이 포함되어도 어플리케이션을 웹 서버로 인식하여 실행하는 일이 없도록 만들어준다.</p><blockquote><p><a href="https://www.baeldung.com/spring-boot-no-web-server" target="_blank" rel="noopener noreferrer">Baeldung: Spring Boot Without A Web Server</a></p></blockquote></div></div><p>다음으로는 JavaFX 종속성을 추가해주자.</p><div class="tabs-container tabList_uSqn"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LplD tabs__item--active">maven</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LplD">gradle</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_OmH5"><div class="language-xml codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-xml codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">dependency</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">groupId</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain">org.openjfx</span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">groupId</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">artifactId</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain">javafx-graphics</span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">artifactId</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">version</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain">${org.openjfx.version}</span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">version</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">dependency</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_OmH5" hidden=""><div class="language-groovy codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-groovy codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token plain">implementation </span><span class="token interpolation-string string" style="color:#8dc891">"org.openjfx:javafx-graphics:</span><span class="token interpolation-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token interpolation-string interpolation expression">org</span><span class="token interpolation-string interpolation expression punctuation" style="color:#8dc891">.</span><span class="token interpolation-string interpolation expression">openjfx</span><span class="token interpolation-string interpolation expression punctuation" style="color:#8dc891">.</span><span class="token interpolation-string interpolation expression">version</span><span class="token interpolation-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token interpolation-string string" style="color:#8dc891">"</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div><blockquote><p><a href="https://search.maven.org/artifact/org.openjfx/javafx-graphics" target="_blank" rel="noopener noreferrer">Maven Central Repository: javafx-graphics</a></p></blockquote><p>JavaFX 어플리케이션 클래스는 <code>javafx.application.Application</code>을 상속해 만들 수 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ChartApplication</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Application</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">start</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Stage</span><span class="token plain"> stage</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>진입점(<em>entry point</em>)에서는 스프링 부트 어플리케이션을 실행하는 대신 JavaFX 어플리케이션을 실행하도록 만들 것이다. 다음 줄을 수정해주자.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@SpringBootApplication</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StockUiApplication</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">main</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">String</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> args</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token comment" style="color:#999999">// SpringApplication.run(StockUiApplication.class, args);</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Application</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">launch</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">ChartApplication</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> args</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>JavaFX 어플리케이션이 실행되고 종료될 때 스프링 어플리케이션도 실행되고 종료될 수 있도록 작업해주면 기본적인 설정은 끝이 난다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ChartApplication</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Application</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ConfigurableApplicationContext</span><span class="token plain"> applicationContext</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">init</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    applicationContext </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">SpringApplicationBuilder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">StockUiApplication</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">run</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">start</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Stage</span><span class="token plain"> stage</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    applicationContext</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">publishEvent</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StageReadyEvent</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">stage</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">stop</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    applicationContext</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">close</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Platform</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">exit</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StageReadyEvent</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ApplicationEvent</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StageReadyEvent</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Stage</span><span class="token plain"> stage</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">super</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">stage</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Stage</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">getStage</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Stage</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">getSource</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>init()</code>: JavaFX 어플리케이션이 초기화될 때 호출되는 메서드다.</li><li><code>start(Stage)</code>: JavaFX 어플리케이션이 실행될 때 호출되는 메서드다.</li><li><code>stop()</code>: JavaFX 어플리케이션이 종료되어야 할 때 호출되는 메서드다.</li></ul><p>위의 <code>start(Stage)</code> 메서드에서 스프링 어플리케이션으로 보낸 <code>StageReadyEvent</code> 이벤트는 <code>ApplicationListener&lt;StageReadyEvent&gt;</code>를 구현한 클래스로 수신(<em>listening</em>)할 수 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@Component</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StageInitializer</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ApplicationListener</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">StageReadyEvent</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">onApplicationEvent</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">StageReadyEvent</span><span class="token plain"> event</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Stage</span><span class="token plain"> stage </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> event</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getStage</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>여기서 주목해야할 것은 <code>onApplicationEvent()</code> 메서드의 인자로 넘어온 <code>StageReadyEvent</code>를 통해 JavaFX 어플리케이션을 참조할 수 있다는 것이다.</p><p>이후 JavaFX 어플리케이션의 레이아웃을 디자인하는 작업은 아래 링크를 참조하자.</p><blockquote><p><a href="https://blog.jetbrains.com/idea/2019/11/tutorial-reactive-spring-boot-a-javafx-line-chart/" target="_blank" rel="noopener noreferrer">JetBrains Blog: A JavaFX Line Chart</a></p></blockquote>]]></content>
        <category label="java" term="java"/>
        <category label="spring-boot" term="spring-boot"/>
        <category label="java-fx" term="java-fx"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HikariCP의 max-lifetime에 대하여]]></title>
        <id>/2022/02/12/HikariCP의-max-lifetime에-대하여</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/02/12/HikariCP의-max-lifetime에-대하여"/>
        <updated>2022-02-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[스프링 부트 기반 프로젝트에서 데이터베이스 쿼리시 간혈적으로 실패하는 이슈가 있었다.]]></summary>
        <content type="html"><![CDATA[<p>스프링 부트 기반 프로젝트에서 데이터베이스 쿼리시 간혈적으로 실패하는 이슈가 있었다.
<strong>"HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@6fb43218 (This connection has been Closed). Possibly consider using a shorter maxLifetime value."</strong><br>
<!-- -->이는 스프링 부트 2.0부터 기본 connection 풀로 설정되는 HikariCP에서 출력하는 에러 로그로, <code>maxLifetime</code> 값을 더 짧게 조정할 것을 권하는 내용이다.</p><p>우선 <a href="https://github.com/brettwooldridge/HikariCP/blob/dev/README.md#frequently-used" target="_blank" rel="noopener noreferrer">HikariCP의 README.md</a>에서 <code>maxLifetime</code> 프로퍼티에 대해 알아봤다.</p><blockquote><p><strong><code>maxLifeTime</code> 프로퍼티는 connection 풀에 있는 connection들의 수명을 나타낸다.</strong><br>
<!-- -->사용 중인 connection은 절대 풀에서 제거되지 않으며, 해당 connection이 닫힐 때만 제거된다.<br>
<!-- -->풀에서 connection이 한꺼번에 제거되는 것을 방지하기 위해 <code>maxLifetime</code>은 connection마다 별도의 음의 감쇠(<em>negative attenuation</em>)가 적용된다.<br>
<strong><code>maxLifetime</code> 값은 데이터베이스 또는 인프라에 설정되어 있는 connection 수명보다 몇 초 정도 짧게 설정할 것을 권장한다.</strong><br>
<!-- -->만약 이 값을 0으로 설정한다면 connection의 수명이 무한으로 설정된다. (<em><code>idleTimeout</code>이 설정되어 있을 경우는 예외</em>)<br>
<!-- -->최소 값은 30000ms (<em>30초</em>)고, 기본 값은 1800000ms (<em>30분</em>)이다.</p></blockquote><p>위 설명을 읽어보니 데이터베이스쪽의 timeout 관련 설정들도 확인할 필요가 있어보인다.<br>
<!-- -->아래 쿼리를 실행해보자. (<em>PostgreSQL 11.12 환경에서 진행했다.</em>)</p><div class="language-sql codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-sql codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    name</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> setting</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> unit</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> short_desc</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">FROM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    pg_settings</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    name </span><span class="token operator" style="color:#d7deea">LIKE</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'%timeout%'</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>다음은 쿼리 수행 결과의 일부다.</p><table><thead><tr><th align="left">name</th><th align="left">setting</th><th align="left">unit</th><th align="left">short_desc</th></tr></thead><tbody><tr><td align="left">idle_in_transaction_session_timeout</td><td align="left">600000</td><td align="left">ms</td><td align="left">Sets the maximum allowed duration of any idling transaction.</td></tr><tr><td align="left">lock_timeout</td><td align="left">0</td><td align="left">ms</td><td align="left">Sets the maximum allowed duration of any wait for a lock.</td></tr><tr><td align="left">statement_timeout</td><td align="left">0</td><td align="left">ms</td><td align="left">Sets the maximum allowed duration of any statement.</td></tr></tbody></table><p>여기서 주목해야 할 설정 값은 유휴(<em>idle</em>) 상태 트랜잭션의 수명을 나타내는 <code>idle_in_transaction_session_timeout</code> 값이다.<br>
<!-- -->해당 값이 600000ms (<em>10분</em>)으로 설정되어 있는데 HikariCP의 <code>maxLifetime</code>은 기본 값인 1800000ms (<em>30분</em>)으로 설정되어 있던게 일의 발단이었다.<br>
<!-- -->이미 끊어진 connection이 HikariCP 풀에 남아 있다가 참조되니 문제가 터진 것이다.</p><p>HikariCP를 만든 Brett Wooldridge의 코멘트에 따르면 <strong><code>maxLifetime</code>은 데이터베이스 timeout 설정보다 2-3초 정도만 빠르게 주면 충분하다</strong>고 한다.</p><blockquote><p><a href="https://github.com/brettwooldridge/HikariCP/issues/709#issuecomment-384252344" target="_blank" rel="noopener noreferrer">https://github.com/brettwooldridge/HikariCP/issues/709#issuecomment-384252344</a></p></blockquote><p>이를 따라 <code>application.yml</code>에서 <code>spring.datasource.hikari.max-lifetime</code> 값을 597000ms (<em>9분 57초</em>)로 설정해주니 더 이상 문제가 발생하지 않았다.</p><div class="language-yaml codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-yaml codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token key atrule">spring</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token key atrule">config</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token key atrule">activate</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token key atrule">on-profile</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"> dev</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token key atrule">datasource</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token key atrule">url</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token key atrule">username</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token key atrule">password</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token key atrule">driver-class-name</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"> org.postgresql.Driver</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token key atrule">hikari</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token key atrule">max-lifetime</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">597000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token key atrule">jpa</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token key atrule">database-platform</span><span class="token punctuation" style="color:#8dc891">:</span><span class="token plain"> org.hibernate.dialect.PostgreSQL10Dialect</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p>여담으로 Brett Wooldridge의 깃허브 프로필 사진에 일본인 아내와 딸이 있길래 'Hikari'가 가족 이름인 줄 알았는데 그냥 빛✨처럼 빠르다는 뜻으로 썼다고 한다.</p><p><img loading="lazy" src="/assets/images/brett-wooldridge-dd2951a5650779f9c808137a825d53ca.png" width="244" height="244" class="img_E7b_"></p><blockquote><p><a href="https://blog.jooq.org/jooq-tuesdays-brett-wooldridge-shows-what-it-takes-to-write-the-fastest-java-connection-pool/" target="_blank" rel="noopener noreferrer">https://blog.jooq.org/jooq-tuesdays-brett-wooldridge-shows-what-it-takes-to-write-the-fastest-java-connection-pool/</a></p></blockquote>]]></content>
        <category label="java" term="java"/>
        <category label="spring-boot" term="spring-boot"/>
        <category label="hikari-cp" term="hikari-cp"/>
        <category label="postgre-sql" term="postgre-sql"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Puppeteer를 이용한 번역기 크롤링 예제]]></title>
        <id>/2022/01/17/Puppeteer를-이용한-번역기-크롤링-예제</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/01/17/Puppeteer를-이용한-번역기-크롤링-예제"/>
        <updated>2022-01-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Puppeteer는 Google Chrome 팀에서 만든 Node.js 라이브러리로, DevTools 프로토콜을 통해 Chrome 또는 Chromium을 제어할 수 있는 기능을 제공한다.]]></summary>
        <content type="html"><![CDATA[<p><strong><a href="https://github.com/puppeteer/puppeteer" target="_blank" rel="noopener noreferrer">Puppeteer</a></strong>는 Google Chrome 팀에서 만든 Node.js 라이브러리로, <a href="https://chromedevtools.github.io/devtools-protocol/" target="_blank" rel="noopener noreferrer">DevTools 프로토콜</a>을 통해 <strong>Chrome 또는 Chromium을 제어할 수 있는 기능을 제공</strong>한다.<br>
<!-- -->아무래도 자바스크립트로 element를 컨트롤할 수 있다는 점에서 <a href="https://en.wikipedia.org/wiki/Selenium_(software)" target="_blank" rel="noopener noreferrer">Selenium</a>이나 <a href="https://en.wikipedia.org/wiki/Beautiful_Soup_(HTML_parser)" target="_blank" rel="noopener noreferrer">Beautiful Soup</a>보다 쉽게 느껴졌고 덕분에 배우는 데 크게 오래걸리진 않았다.</p><p>여기서는 간단히 구글 번역기와 네이버 파파고의 번역 결과를 크롤링하는 스크립트를 만들어보겠다.  </p><p>우선 Puppeteer 종속성을 추가하자. (<em>타입스크립트를 사용할 것이기 때문에 타입 정의도 가져와준다.</em>)</p><div class="language-shell codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-shell codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> puppeteer</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> -D @types/puppeteer</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>소스 코드는 커맨드 라인으로 받은 문자를 번역하는 형태가 될 것이다. (<em>한글은 영어, 영어는 한글로</em>)<br>
<!-- -->구글, 파파고 두 번역 프로세스는 비동기로 동시에 실행하여 지체가 없도록 한다.</p><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">GoogleTranslator</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'./GoogleTranslator'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">PapagoTranslator</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'./PapagoTranslator'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports operator" style="color:#d7deea">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:#c5a5c5">as</span><span class="token imports"> puppeteer</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'puppeteer'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#8dc891">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Browser</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'puppeteer'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> sourceText</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> process</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">argv</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sourceText </span><span class="token operator" style="color:#d7deea">===</span><span class="token plain"> </span><span class="token keyword nil" style="color:#c5a5c5">undefined</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name known-class-name class-name" style="color:#FAC863">Error</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'sourceText must not be undefined'</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> browser</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">Browser</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> puppeteer</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">launch</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> googleTranslator</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">GoogleTranslator</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name maybe-class-name" style="color:#FAC863">GoogleTranslator</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">browser</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> papagoTranslator</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">PapagoTranslator</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name maybe-class-name" style="color:#FAC863">PapagoTranslator</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">browser</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token known-class-name class-name" style="color:#FAC863">Promise</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">all</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token plain">googleTranslator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">translate</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sourceText</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> papagoTranslator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">translate</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sourceText</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">then</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token plain">googleResult</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> papagoResult</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token console class-name" style="color:#FAC863">console</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">log</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token template-string string" style="color:#8dc891">google: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation">googleResult</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token console class-name" style="color:#FAC863">console</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">log</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token template-string string" style="color:#8dc891">papago: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation">papagoResult</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      browser</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">close</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>구글은 기본적으로 HTML의 id, class 값을 의미 없는 난수로 난독화하고, 매 요청마다 다른 값을 사용하기 때문에 이를 크롤링 기준으로 삼긴 어렵다.<br>
<!-- -->다행히 구글 번역기는 query string으로 대부분의 기능을 제어할 수 있어 구현에는 무리가 없었다.</p><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword module" style="color:#c5a5c5">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name maybe-class-name" style="color:#FAC863">Translatable</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">translate</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sourceText</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#FAC863">Promise</span><span class="token operator" style="color:#d7deea">&lt;</span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token operator" style="color:#d7deea">&gt;</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Translatable</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'./Translatable'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#8dc891">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Browser</span><span class="token imports punctuation" style="color:#8dc891">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Page</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'puppeteer'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name maybe-class-name" style="color:#FAC863">GoogleTranslator</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name maybe-class-name" style="color:#FAC863">Translatable</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">constructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> browser</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">Browser</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">async</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">translate</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sourceText</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#FAC863">Promise</span><span class="token operator" style="color:#d7deea">&lt;</span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token operator" style="color:#d7deea">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> hasKorean</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">boolean</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token regex regex-delimiter">/</span><span class="token regex regex-source language-regex">[가-힣]</span><span class="token regex regex-delimiter">/</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">test</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sourceText</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token plain">sourceLanguage</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> targetLanguage</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> hasKorean </span><span class="token operator" style="color:#d7deea">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token string" style="color:#8dc891">'ko'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'en'</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token string" style="color:#8dc891">'en'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'ko'</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> page</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">Page</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">browser</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">newPage</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> page</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">goto</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token template-string string" style="color:#8dc891">https://translate.google.com/?sl=</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation">sourceLanguage</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string string" style="color:#8dc891">&amp;tl=</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation">targetLanguage</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string string" style="color:#8dc891">&amp;text=</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation function" style="color:#79b6f2">encodeURIComponent</span><span class="token template-string interpolation punctuation" style="color:#8dc891">(</span><span class="token template-string interpolation">sourceText</span><span class="token template-string interpolation punctuation" style="color:#8dc891">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> targetSelector</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'div[data-language] &gt; div &gt; span[lang] &gt; span &gt; span'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> page</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">waitForSelector</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">targetSelector</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> targetText</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> page</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">$$eval</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">targetSelector</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">nodes</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">Element</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#c5a5c5">return</span><span class="token plain"> nodes</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">map</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">node</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">Element</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> node</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">textContent</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">join</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">' '</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> page</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">close</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#c5a5c5">return</span><span class="token plain"> targetText</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>page.goto(url)</code>: <code>url</code>로 이동한다.</li><li><code>page.waitForSelector(selector)</code>: <code>selector</code>와 일치하는 element가 감지될 때까지 대기한다.</li><li><code>page.$$eval(selector, pageFunction)</code>: <code>selector</code>와 일치하는 element들을 <code>pageFunction</code>으로 넘겨 실행한다.</li></ul><p>파파고도 query string을 이용할 수 있어 간단하게 작성할 수 있었다.</p><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Translatable</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'./Translatable'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#8dc891">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Browser</span><span class="token imports punctuation" style="color:#8dc891">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">ElementHandle</span><span class="token imports punctuation" style="color:#8dc891">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Page</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'puppeteer'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name maybe-class-name" style="color:#FAC863">PapagoTranslator</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name maybe-class-name" style="color:#FAC863">Translatable</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">constructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> browser</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">Browser</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">async</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">translate</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sourceText</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#FAC863">Promise</span><span class="token operator" style="color:#d7deea">&lt;</span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token operator" style="color:#d7deea">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> page</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">Page</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">browser</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">newPage</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> page</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">goto</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token template-string string" style="color:#8dc891">https://papago.naver.com?sk=auto&amp;st=</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation function" style="color:#79b6f2">encodeURIComponent</span><span class="token template-string interpolation punctuation" style="color:#8dc891">(</span><span class="token template-string interpolation">sourceText</span><span class="token template-string interpolation punctuation" style="color:#8dc891">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> submitButton</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">ElementHandle</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> page</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">waitForSelector</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'#btnTranslate'</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> submitButton</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">click</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> targetArea</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">ElementHandle</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> page</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">waitForSelector</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'#txtTarget &gt; span'</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> targetText</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> targetArea</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">evaluate</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">node</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> node</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">textContent</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> page</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">close</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#c5a5c5">return</span><span class="token plain"> targetText</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>submitButton?.click()</code>: 클릭 이벤트를 발생시킨다.</li><li><code>targetArea?.evaluate(pageFunction)</code>: 핸들의 element를 <code>pageFunction</code>으로 넘겨 실행한다.</li></ul><p>이제 <code>package.json</code>에 스크립트 하나만 등록해주고,</p><div class="language-json codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-json codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"dependencies"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"puppeteer"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"^13.5.1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"devDependencies"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"@types/puppeteer"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"^5.4.5"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"scripts"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"start"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"ts-node src/index.ts"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>실행해보면 잘 동작하는 것을 확인할 수 있다.</p><div class="language-shell codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-shell codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> start </span><span class="token string" style="color:#8dc891">'먼지쌓인 부츠'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">google: Dust stacked boots</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">papago: dusty boots</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> start </span><span class="token string" style="color:#8dc891">'the rabbit that hunts tigers'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">google: 호랑이를 사냥하는 토끼</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">papago: 호랑이를 사냥하는 토끼</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>Cannot find name 'Element'라는 에러가 뜬다면 <code>tsconfig.json</code>에 아래 항목을 추가해주자.</p><div class="language-json codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-json codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token property" style="color:#5a9bcf">"compilerOptions"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token property" style="color:#5a9bcf">"lib"</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token string" style="color:#8dc891">"dom"</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><a href="https://github.com/DefinitelyTyped/DefinitelyTyped/issues/46167#issuecomment-660487119" target="_blank" rel="noopener noreferrer">https://github.com/DefinitelyTyped/DefinitelyTyped/issues/46167#issuecomment-660487119</a></p></blockquote></div></div><hr><p>puppeteer가 동작하는 모습을 눈으로 직접 확인해보고 싶다면 headless 모드를 해제하면 된다.</p><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> </span><span class="token literal-property property" style="color:#5a9bcf">browser</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">Browser</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#c5a5c5">await</span><span class="token plain"> puppeteer</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">launch</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token literal-property property" style="color:#5a9bcf">headless</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">false</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token literal-property property" style="color:#5a9bcf">defaultViewport</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#c5a5c5">null</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token literal-property property" style="color:#5a9bcf">args</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token string" style="color:#8dc891">'--start-maximized'</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="javascript" term="javascript"/>
        <category label="typescript" term="typescript"/>
        <category label="node-js" term="node-js"/>
        <category label="puppeteer" term="puppeteer"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Stream API 뜯어보기]]></title>
        <id>/2022/01/09/Stream-API-뜯어보기</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/01/09/Stream-API-뜯어보기"/>
        <updated>2022-01-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Stream API의 대략적인 상속도를 그려보면 이렇다.]]></summary>
        <content type="html"><![CDATA[<p>Stream API의 대략적인 상속도를 그려보면 이렇다.</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token plain">AbstractPipeline</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">└── ReferencePipeline (implements Stream)</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    ├── Head</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    ├── StatefulOp</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    └── StatelessOp</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">TerminalOp</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── ForEachOp</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── ReduceOp</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── MatchOp</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">└── FindOp</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">Sink</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">└── ChainedReference</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이 글에서 소개할 것들만 추린 것으로 실제론 더 복잡하다.<br>
<!-- -->마크다운 헤딩(<em>heading</em>)을 상속도와 일치하게 구성해 놓았으니 참고하며 보면 좋을 것이다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="abstractpipeline">AbstractPipeline<a class="hash-link" href="#abstractpipeline" title="Direct link to heading">​</a></h2><p><code>AbstractPipeline</code>은 <strong>스트림을 구성하는 하나의 파이프라인</strong>을 나타낸다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">abstract</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AbstractPipeline</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> E_OUT</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">S</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">extends</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">BaseStream</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_OUT</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">S</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">PipelineHelper</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">BaseStream</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_OUT</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">S</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AbstractPipeline</span><span class="token plain"> sourceStage</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AbstractPipeline</span><span class="token plain"> previousStage</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AbstractPipeline</span><span class="token plain"> nextStage</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>sourceStage</code>: 첫 번째 파이프라인에 대한 참조다.</li><li><code>previousStage</code>: 이전 파이프라인에 대한 참조다.</li><li><code>nextStage</code>: 다음 파이프라인에 대한 참조다.</li></ul><p>이러한 파이프라인 참조들은 파이프라인을 연결하거나 순회하는 용도로 쓰인다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="referencepipeline">ReferencePipeline<a class="hash-link" href="#referencepipeline" title="Direct link to heading">​</a></h3><p><code>ReferencePipeline</code>는 <code>AbstractPipeline</code>를 상속하고 <strong><code>Stream</code>을 구현하는 클래스</strong>로, 우리가 잘 아는 중개 연산자(<em>intermediate operations</em>)와 종료 연산자(<em>terminal operations</em>)를 만나볼 수 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">abstract</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ReferencePipeline</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AbstractPipeline</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> P_OUT</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">Stream</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Stream</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>중개 연산자는 새로운 파이프라인을 만들어 현재 파이프라인과 연결한 뒤, 새로 만든 파이프라인을 반환하여 메서드 체이닝을 이어갈 수 있도록 유도한다.</li><li>종료 연산자는 <code>TerminalOp</code>를 통해 모든 파이프라인 연산을 수행하고 적절한 값을 반환한다.</li></ul><p>모든 중개 연산자들은 아래 코드에서 보이는 것처럼 <code>opWrapSink()</code> 메서드를 재정의한 파이프라인을 반환하는데, 이 <code>opWrapSink()</code> 메서드는 추후 <code>TerminalOp</code>에 의해 실행된다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Stream</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">filter</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Predicate</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics operator" style="color:#d7deea">?</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">super</span><span class="token generics"> P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> predicate</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">predicate</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StatelessOp</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_OUT</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StreamShape</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">REFERENCE</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StreamOpFlag</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">NOT_SIZED</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">opWrapSink</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> flags</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> sink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token class-name punctuation" style="color:#8dc891">.</span><span class="token class-name" style="color:#FAC863">ChainedReference</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_OUT</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">begin</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">long</span><span class="token plain"> size</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">          downstream</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">begin</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token operator" style="color:#d7deea">-</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">accept</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">P_OUT</span><span class="token plain"> u</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">          </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">predicate</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">test</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">u</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">            downstream</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">accept</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">u</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">          </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="head">Head<a class="hash-link" href="#head" title="Direct link to heading">​</a></h4><p><code>Head</code>는 <strong>첫 번째 파이프라인</strong>을 나타내는 클래스다.<br>
<!-- -->일반적으로 <code>Collection</code>의 default 메서드인 <code>stream()</code>에 의해 생성된다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Head</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ReferencePipeline</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">opIsStateful</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">UnsupportedOperationException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="statelessop">StatelessOp<a class="hash-link" href="#statelessop" title="Direct link to heading">​</a></h4><p><code>StatelessOp</code>는 <strong>이전 요소의 영향을 받지 않는 파이프라인 연산</strong>을 나타낸다.<br>
<code>filter()</code>, <code>map()</code>, <code>peek()</code> 연산이 이에 해당한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StatelessOp</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ReferencePipeline</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">opIsStateful</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">false</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="statefulop">StatefulOp<a class="hash-link" href="#statefulop" title="Direct link to heading">​</a></h4><p><code>StatefulOp</code>는 <strong>이전 요소의 영향을 받는 파이프라인 연산</strong>을 나타낸다.<br>
<!-- -->상태를 가지기 때문에 모든 요소를 처리하기 전까지는 결과를 알 수 없다는 특징이 있다.<br>
<code>sorted()</code>, <code>distinct()</code>, <code>limit()</code>, <code>skip()</code> 연산이 이에 해당한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StatefulOp</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ReferencePipeline</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">opIsStateful</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">true</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>opIsStateful()</code>은 병렬 처리를 해야하는 경우 <code>Spliterator</code>를 조정하기 위해 고려된다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="terminalop">TerminalOp<a class="hash-link" href="#terminalop" title="Direct link to heading">​</a></h2><p><code>TerminalOp</code>는 <strong>스트림을 구성하는 모든 파이프라인 연산들을 수행하는 역할</strong>을 한다.<br>
<!-- -->직렬 연산에는 <code>evaluateSequential()</code>이, 병렬 연산에는 <code>evaluateParallel()</code>이 호출된다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">TerminalOp</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">R</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">R</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">evaluateParallel</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">PipelineHelper</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> helper</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Spliterator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">evaluateSequential</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">helper</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">R</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">evaluateSequential</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">PipelineHelper</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> helper</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Spliterator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>helper</code>: 마지막 파이프라인이다.</li><li><code>spliterator</code>: 첫 번째 파이프라인의 <code>Spliterator</code>다.</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="foreachop-reduceop-matchop-findop">ForEachOp, ReduceOp, MatchOp, FindOp<a class="hash-link" href="#foreachop-reduceop-matchop-findop" title="Direct link to heading">​</a></h3><p><code>ForEachOp</code>, <code>ReduceOp</code>, <code>MatchOp</code>, <code>FindOp</code>는 모두 스트림의 종료 연산자에 의해 생성되는 파이프라인 연산 수행자다.<br>
<!-- -->한 예로, <code>forEach()</code> 종료 연산자는 <code>ForEachOp</code> 수행자를 통해 스트림을 구성하는 모든 파이프라인 연산들을 수행한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">abstract</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ForEachOp</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">TerminalOp</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">Void</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">TerminalSink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">Void</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">S</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">evaluateSequential</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">PipelineHelper</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> helper</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                                     </span><span class="token class-name" style="color:#FAC863">Spliterator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">S</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> helper</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">wrapAndCopyInto</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">S</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">evaluateParallel</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">PipelineHelper</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> helper</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                                   </span><span class="token class-name" style="color:#FAC863">Spliterator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">S</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">ordered</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ForEachOrderedTask</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">helper</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">invoke</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ForEachTask</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">helper</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> helper</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">wrapSink</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">invoke</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">null</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>wrapAndCopyInto()</code> 메서드의 구현은 <code>AbstractPipeline</code>에서 찾아볼 수 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">S</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">extends</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">S</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">wrapAndCopyInto</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">S</span><span class="token plain"> sink</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Spliterator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">copyInto</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token function" style="color:#79b6f2">wrapSink</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> sink</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>wrapSink()</code> 메서드에서는 파이프라인을 역순으로 순회하며 <code>opWrapSink()</code>를 호출한다.  </p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">wrapSink</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> sink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">AbstractPipeline</span><span class="token plain"> p </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AbstractPipeline</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> p</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">depth </span><span class="token operator" style="color:#d7deea">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> p </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">previousStage</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    sink </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">opWrapSink</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">previousStage</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">combinedFlags</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> sink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> sink</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>opWrapSink()</code>는 인자로 받은 <code>Sink</code>를 다음에 처리할 <code>Sink</code>로서 참조하고 있는 <code>ChainedReference</code>을 반환한다.<br>
<!-- -->결과적으로 <code>wrapSink()</code>는 모든 <code>Sink</code>를 연결한 하나의 단일 <code>ChainedReference</code>를 반환하게 된다.</p><p><code>copyInto()</code> 메서드에서는 모든 파이프라인 연산들을 수행한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">copyInto</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> wrappedSink</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Spliterator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">wrappedSink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token operator" style="color:#d7deea">!</span><span class="token class-name" style="color:#FAC863">StreamOpFlag</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">SHORT_CIRCUIT</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">isKnown</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token function" style="color:#79b6f2">getStreamAndOpFlags</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    wrappedSink</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">begin</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">spliterator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getExactSizeIfKnown</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    spliterator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">forEachRemaining</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">wrappedSink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    wrappedSink</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">end</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token function" style="color:#79b6f2">copyIntoWithCancel</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">wrappedSink</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>if 절에 보이는 <code>StreamOpFlag.SHORT_CIRCUIT</code>는 스트림에 <a href="https://en.wikipedia.org/wiki/Short-circuit_evaluation" target="_blank" rel="noopener noreferrer">단락 평가</a>(<em>short circuit evaluation</em>)가 포함되어 있는가를 나타내는 플래그다.<br>
<!-- -->만약 단락 평가가 포함되어 있다면 <code>Sink</code>의 <code>cancellationRequested()</code>를 이용해 필요한 만큼만 요소를 순회하게 된다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">copyIntoWithCancel</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> wrappedSink</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Spliterator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_IN</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">AbstractPipeline</span><span class="token plain"> p </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AbstractPipeline</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">depth </span><span class="token operator" style="color:#d7deea">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    p </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">previousStage</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  wrappedSink</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">begin</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">spliterator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getExactSizeIfKnown</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> cancelled </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">forEachWithCancel</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">spliterator</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> wrappedSink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  wrappedSink</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">end</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> cancelled</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">forEachWithCancel</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Spliterator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics">P_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> sink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> cancelled</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">do</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token operator" style="color:#d7deea">!</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">cancelled </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> sink</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">cancellationRequested</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">&amp;&amp;</span><span class="token plain"> spliterator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">tryAdvance</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sink</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> cancelled</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="sink">Sink<a class="hash-link" href="#sink" title="Direct link to heading">​</a></h2><p><code>Sink</code>는 <strong><code>Consumer</code>의 확장</strong> 개념으로, <code>accept(T)</code> 외에 몇 가지 메서드들을 추가로 정의하고 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Consumer</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">begin</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">long</span><span class="token plain"> size</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">end</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">cancellationRequested</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">false</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>void begin(long)</code>: 요소를 순회할 준비가 되었음을 알린다.<br>예상 크기를 인자로 받는다. (<em>알 수 없다면 -1</em>)</li><li><code>void accept(T)</code>: 요소를 처리한다.<br>이는 각 중개 연산자에서 구현해야 할 사항이다.</li><li><code>void end()</code>: 순회가 끝났음을 알린다.</li><li><code>boolean cancellationRequested()</code>: 현재 스텝에서 순회를 멈춰야 하는지를 반환한다.<br>이는 <code>limit()</code>, <code>findFirst()</code>처럼 단락 평가를 하는 메서드에서만 재정의하고 있다.</li></ul><p><code>begin(long)</code>과 <code>end()</code>는 보통 상태를 가지는 경우에만 재정의해서 사용한다.<br>
<!-- -->참고로, stateful 연산인 <code>sorted()</code>는 다음과 같이 구현되어 있다.</p><ul><li><code>void begin(long)</code>: 예상 크기 <code>long</code>만큼의 배열을 생성한다.</li><li><code>void accept(T)</code>: 배열에 <code>T</code>를 하나씩 채워넣는다.</li><li><code>void end()</code>: 배열을 정렬한다.</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="chainedreference">ChainedReference<a class="hash-link" href="#chainedreference" title="Direct link to heading">​</a></h3><p><code>ChainedReference</code>는 <strong>다음 <code>Sink</code>에 대한 참조를 가지고 있는 <code>Sink</code>다.</strong></p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">abstract</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ChainedReference</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">protected</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics operator" style="color:#d7deea">?</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">super</span><span class="token generics"> E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> downstream</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ChainedReference</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Sink</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics operator" style="color:#d7deea">?</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">super</span><span class="token generics"> E_OUT</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> downstream</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">downstream </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">downstream</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">begin</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">long</span><span class="token plain"> size</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    downstream</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">begin</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">size</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">end</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    downstream</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">end</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">cancellationRequested</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> downstream</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">cancellationRequested</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="spliterator">Spliterator<a class="hash-link" href="#spliterator" title="Direct link to heading">​</a></h2><p><code>Spliterator</code>는 스트림의 병렬 파이프라이닝 처리를 위해 고안된 클래스로, <code>Iterable</code>을 구성하는 요소들을 절반으로 나누는 기능을 제공한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">Spliterator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Integer</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> origin </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IntStream</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">rangeClosed</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">10</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">spliterator</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token class-name" style="color:#FAC863">Spliterator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Integer</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> dest </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> origin</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">trySplit</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">origin</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">forEachRemaining</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">System</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">out</span><span class="token operator" style="color:#d7deea">::</span><span class="token function" style="color:#79b6f2">println</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// [6, 7, 8, 9, 10]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">dest</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">forEachRemaining</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">System</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">out</span><span class="token operator" style="color:#d7deea">::</span><span class="token function" style="color:#79b6f2">println</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// [1, 2, 3, 4, 5]</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>Collection</code>의 <code>parallelStream()</code>을 통해 병렬 스트림을 생성한 것이 아니라면 쪼개질 일은 없다.</p>]]></content>
        <category label="java" term="java"/>
        <category label="stream-api" term="stream-api"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[읽기 쉬운 Comparable를 위한 간단한 아이디어]]></title>
        <id>/2022/01/03/읽기-쉬운-Comparable를-위한-간단한-아이디어</id>
        <link href="https://your-docusaurus-test-site.com/blog/2022/01/03/읽기-쉬운-Comparable를-위한-간단한-아이디어"/>
        <updated>2022-01-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[잘 알다시피 Comparable는 자신과 인자로 넘어온 객체를 비교할 수 있는 인터페이스다.]]></summary>
        <content type="html"><![CDATA[<p>잘 알다시피 <code>Comparable&lt;T&gt;</code>는 자신과 인자로 넘어온 객체를 비교할 수 있는 인터페이스다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Comparable</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">compareTo</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">T</span><span class="token plain"> o</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>문제는 <code>compareTo(T)</code>의 반환 값이 <code>int</code>라 한 눈에 파악하기 힘들다는 점에 있다.</p><ul><li><code>this</code> &gt; <code>o</code>: 양수</li><li><code>this</code> == <code>o</code>: 0</li><li><code>this</code> &lt; <code>o</code>: 음수</li></ul><p>그래서 좀 더 산문과 가까운 형식으로 쓰일 수 있도록 <code>Comparable&lt;T&gt;</code>의 확장 개념을 고안해봤다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FluentComparable</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Comparable</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">isGreaterThan</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">T</span><span class="token plain"> object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"object must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">&lt;</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">compareTo</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">isGreaterThanOrEqualTo</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">T</span><span class="token plain"> object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"object must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">&lt;=</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">compareTo</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">isLessThan</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">T</span><span class="token plain"> object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"object must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">compareTo</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">default</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">isLessThanOrEqualTo</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">T</span><span class="token plain"> object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"object must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">&gt;=</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">compareTo</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>다음은 사용 예다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">balloonA</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">isGreaterThan</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">balloonB</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">System</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">out</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">println</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"balloon A is greater than balloon B"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="java" term="java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[앞 낱말의 받침에 따라 바뀌는 한글의 조사 포맷팅 구현]]></title>
        <id>/2021/12/30/앞-낱말의-받침에-따라-바뀌는-한글의-조사-포맷팅-구현</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/12/30/앞-낱말의-받침에-따라-바뀌는-한글의-조사-포맷팅-구현"/>
        <updated>2021-12-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[한글에서 앞 낱말의 받침에 따라 형태가 바뀌는 조사(助詞)로는 '은/는, 이/가, 을/를, 과/와, 아/야, 이여/여, 이랑/랑, 으로/로'가 있다.]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" src="/assets/images/pokemon-e302588640e2b6b1431058f615999b2f.png" width="506" height="409" class="img_E7b_"></p><p>한글에서 앞 낱말의 받침에 따라 형태가 바뀌는 조사(<em>助詞</em>)로는 <strong>'은/는, 이/가, 을/를, 과/와, 아/야, 이여/여, 이랑/랑, 으로/로'</strong>가 있다.
앞의 낱말에 받침이 있으면 <strong>'은, 이, 을, 과, 아, 이여, 이랑'</strong>을 쓰고, 받침이 없으면 <strong>'는, 가, 를, 와, 야, 여, 랑'</strong>을 써야 한다.  </p><blockquote><p><a href="https://namu.wiki/w/%ED%95%9C%EA%B5%AD%EC%96%B4%EC%9D%98%20%EC%A1%B0%EC%82%AC#s-3" target="_blank" rel="noopener noreferrer">나무위키: 받침에 따라 바뀌는 조사</a></p></blockquote><p>유니코드 속 한글의 범위는 <strong>U+AC00(<em>가</em>)</strong>부터 <strong>U+D7AF(<em>힯, 쓰레기 문자</em>)</strong>로, 빈 공간을 채우기 위한 쓰레기 문자를 제외하면 <strong>U+AC00(<em>가</em>)</strong>부터 <strong>U+D7AC(<em>힣</em>)</strong>까지가 실질적인 범위다.<br>
<!-- -->받침 유무는 각 문자의 코드 포인트를 28로 나누었을 때 맞아 떨어지느냐로 쉽게 구분할 수 있다.<br>
<!-- -->(<em>표현 가능한 종성은 'ㄱㄲㄳㄴㄵㄶㄷㄹㄺㄻㄼㄽㄾㄿㅀㅁㅂㅄㅅㅆㅇㅈㅊㅋㅌㅍㅎ' 27개로, 종성이 없는 경우까지 포함하면 28가지다.</em>)</p><blockquote><p><a href="https://d2.naver.com/helloworld/76650" target="_blank" rel="noopener noreferrer">Naver D2: 유니코드와 Java를 이용한 한글 처리</a><br>
<a href="https://en.wikipedia.org/wiki/Hangul_Syllables" target="_blank" rel="noopener noreferrer">Wikipedia: Hangul Syllables</a></p></blockquote><p>다음은 앞 낱말의 받침에 따라 알맞은 조사를 선택하여 반환하도록 구현한 코드다.<br>
<!-- -->열거형의 네이밍은 마땅한게 안 떠올라 로마자 표기를 그대로 썼다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@RequiredArgsConstructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">access </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AccessLevel</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">PRIVATE</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">enum</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">HangulJosaSet</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">EUN_NEUN</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"은"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"는"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">I_GA</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"이"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"가"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">EUL_REUL</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"을"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"를"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">GWA_WA</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"과"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"와"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">A_YA</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"아"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"야"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">IYEO_YEO</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"이여"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"여"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">IRANG_RANG</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"이랑"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"랑"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">EURO_RO</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"으로"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"로"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Range</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Character</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> HANGUL_UNICODE_RANGE </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Range</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">closed</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token char" style="color:#D8DEE9">'가'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token char" style="color:#D8DEE9">'힣'</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> JONGSUNGLESS_CHARACTER_CYCLE </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">28</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> josaForVowel</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> josaForFinalConsonant</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">resolve</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">char</span><span class="token plain"> character</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token operator" style="color:#d7deea">!</span><span class="token plain">HANGUL_UNICODE_RANGE</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">contains</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">character</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IllegalArgumentException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">          </span><span class="token class-name" style="color:#FAC863">String</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">format</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"character '%s' is not contained in HANGUL_UNICODE_RANGE"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> character</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">hasJongsung</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">character</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">?</span><span class="token plain"> josaForVowel </span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> josaForFinalConsonant</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">resolve</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> string</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Strings</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">isNullOrEmpty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">string</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IllegalArgumentException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"string must not be null or empty"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">resolve</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">string</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">charAt</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">string</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">length</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">hasJongsung</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">char</span><span class="token plain"> character</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">character </span><span class="token operator" style="color:#d7deea">-</span><span class="token plain"> HANGUL_UNICODE_RANGE</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">lowerEndpoint</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">%</span><span class="token plain"> JONGSUNGLESS_CHARACTER_CYCLE </span><span class="token operator" style="color:#d7deea">!=</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>범위 개념을 직관적으로 다루기 위해 구글 구아바의 <a href="/docs/구글-구아바-레퍼런스/범위"><code>Range&lt;C&gt;</code></a>를 이용했다.</p></div></div><p>포맷팅을 도와주는 유틸리티도 만들어봤다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@NoArgsConstructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">access </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AccessLevel</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">PRIVATE</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">HangulJosaFormatter</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">format</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> template</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">HangulJosaSet</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> args</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">template</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"template must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"args must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> stringBuilder </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StringBuilder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">template</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">length</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">+</span><span class="token plain"> args</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">length </span><span class="token operator" style="color:#d7deea">*</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> templateStart </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> i </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">i </span><span class="token operator" style="color:#d7deea">&lt;</span><span class="token plain"> args</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> placeholderStart </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> template</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">indexOf</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"%s"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> templateStart</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">placeholderStart </span><span class="token operator" style="color:#d7deea">==</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token keyword" style="color:#c5a5c5">break</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      stringBuilder</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">append</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">template</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> templateStart</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> placeholderStart</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      stringBuilder</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">append</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token plain">i</span><span class="token operator" style="color:#d7deea">++</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">resolve</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">template</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">charAt</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">placeholderStart </span><span class="token operator" style="color:#d7deea">-</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      templateStart </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> placeholderStart </span><span class="token operator" style="color:#d7deea">+</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    stringBuilder</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">append</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">template</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> templateStart</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> template</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">length</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> stringBuilder</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">toString</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> text </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"구구%s 새로 마구찌르기%s 배웠다!"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> formattedText </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">HangulJosaFormatter</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">format</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">text</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">HangulJosaSet</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">EUN_NEUN</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">HangulJosaSet</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">EUL_REUL</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">assertEquals</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"구구는 새로 마구찌르기를 배웠다!"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> formattedText</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>마지막 <code>assertEquals(expected, actual)</code> 테스트의 결과는 성공이다. ✔️</p>]]></content>
        <category label="java" term="java"/>
        <category label="unicode" term="unicode"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[컴파일러의 경고 억제에 관하여]]></title>
        <id>/2021/12/26/컴파일러의-경고-억제에-관하여</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/12/26/컴파일러의-경고-억제에-관하여"/>
        <updated>2021-12-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[노란 줄이 그인 코드는 수정하는 것이 좋겠지만 상황이 여의치 않은 경우도 종종 있다.]]></summary>
        <content type="html"><![CDATA[<p>노란 줄이 그인 코드는 수정하는 것이 좋겠지만 상황이 여의치 않은 경우도 종종 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> stream </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Streams</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">stream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">iterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// 'stream(java.util.Iterator&lt;T&gt;)' is marked unstable with @Beta</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이럴 땐 해당 경고를 <code>@SuppressWarnings</code>로 억제해주는 것이 좋다.<br>
<!-- -->경고를 계속해서 방치해두면 매번 신경쓰일 뿐더러 다른 중요한 경고를 놓치게 될 수도 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@SuppressWarnings</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"UnstableApiUsage"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> stream </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Streams</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">stream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">iterator</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p><code>@SuppressWarnings</code>은 보통 IDE의 quickfix에 의해 작성되기 때문에 각 value를 외울 필요는 없다.</p></div></div><hr><p>정적 분석 도구인 <a href="https://www.sonarlint.org/" target="_blank" rel="noopener noreferrer">SonarLint</a>의 경고는 <code>squid:{일련번호}</code> 포맷으로 억제할 수 있다.<br>
<!-- -->(<em>여기서 squid🦑는 SonarQube Unique ID의 약자다.</em>)</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@SuppressWarnings</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"squid:S3329"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> ivParameterSpec </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IvParameterSpec</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>다만 이것만으로 경고를 유추하기에는 무리가 있으니 주석으로 설명을 달아주도록 하자.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@SuppressWarnings</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"squid:S3329"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// suppress SonarLint rule that 'Cipher Block Chaining IV's should be random and unique'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> ivParameterSpec </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IvParameterSpec</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="java" term="java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[PostgreSQL 임시 함수 선언]]></title>
        <id>/2021/12/11/PostgreSQL-임시-함수-선언</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/12/11/PostgreSQL-임시-함수-선언"/>
        <updated>2021-12-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[PostgreSQL에서 임시 함수는 임시 스키마(pg_temp)에 함수를 선언하는 것으로 만들 수 있다.]]></summary>
        <content type="html"><![CDATA[<p>PostgreSQL에서 임시 함수는 임시 스키마(<em>pg_temp</em>)에 함수를 선언하는 것으로 만들 수 있다.</p><div class="language-sql codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-sql codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">CREATE</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">OR</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">REPLACE</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">FUNCTION</span><span class="token plain"> pg_temp</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">calculate_age_from_birth_date</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">timestamp</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">RETURNS</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">numeric</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">AS</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'SELECT substring(extract(year from age(CURRENT_DATE, $1)) || '''', 1, 2)::numeric'</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">LANGUAGE</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">SQL</span><span class="token plain"> IMMUTABLE</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>만약 부수 효과가 없는 순수 함수라면 <code>IMMUTABLE</code> 옵션을 주는 것을 잊지 말자.<br>
<code>IMMUTABLE</code> 옵션은 한 입력 값에 대해 항상 같은 값을 반환하는 함수임을 최적화기에게 알려주는 역할을 한다.</p><blockquote><p><a href="https://postgresql.kr/docs/13/sql-createfunction.html" target="_blank" rel="noopener noreferrer">PostgreSQL.kr: CREATE FUNCTION</a></p></blockquote>]]></content>
        <category label="sql" term="sql"/>
        <category label="postgre-sql" term="postgre-sql"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache POI 래핑 대작전]]></title>
        <id>/2021/12/06/Apache-POI-래핑-대작전</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/12/06/Apache-POI-래핑-대작전"/>
        <updated>2021-12-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Apache POI는 마이크로소프트 오피스 파일, 그 중에서도 엑셀 파일을 읽고 쓸 수 있는 라이브러리로 잘 알려져있지만 레거시한 구조 때문에 종종 불쾌감을 주곤 한다.]]></summary>
        <content type="html"><![CDATA[<p>Apache POI는 마이크로소프트 오피스 파일, 그 중에서도 엑셀 파일을 읽고 쓸 수 있는 라이브러리로 잘 알려져있지만 레거시한 구조 때문에 종종 불쾌감을 주곤 한다.<br>
<!-- -->Apache POI를 사용하여 엑셀 파일을 작성하는 한 예를 살펴 보자.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> workbook </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">SXSSFWorkbook</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> sheet </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> workbook</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">createSheet</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> row </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> sheet</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">createRow</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> cell </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> row</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">createCell</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">cell</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">setCellValue</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"value"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>위와 같은 작성 방식은 구조를 한 눈에 파악하기 힘들뿐더러 장황하게 늘어논 코드를 양산시키는 주요 원인이 된다.  </p><p><strong>엑셀처럼 구조화된 문서를 작성하는 데에는 빌더 패턴이 더 어울려보인다.</strong><br>
<!-- -->빌더 패턴 특유의 들여쓰기는 계층 구조를 이해하는데 도움을 줄 것이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> member </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">builder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">id</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1L</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">name</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"scott"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">address</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Address</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">builder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">country</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"korea"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">city</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"seoul"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">build</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">build</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>하지만 빌더 패턴을 Apache POI에 곧바로 적용하기는 쉽지 않았다.<br>
<strong>Apache POI의 Sheet, Row, Cell는 상위 객체의 생성이 선행되어야만 비로서 생성할 수 있기 때문이다.</strong><br>
<!-- -->하위 객체부터 생성해 나가는 빌더 패턴과는 역순이라 할 수 있겠다.</p><p>이 때 가장 처음 떠오른 방식은 가상의 Sheet, Row, Cell을 만들어서 excelize를 최대한 뒤로 늦추는 것이었다.</p><p>모든 Sheet, Row, Cell에 대한 정보가 갖춰진 후에 excelize를 하여 Apache POI의 생성 흐름에 거스르지 않으면서도 빌더 패턴의 형태를 갖추겠다는 것이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">VirtualWorkbook</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">builder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">WorkbookType</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">SXSSF</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">sheets</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">VirtualSheet</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">builder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">title</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"title"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">rows</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">            </span><span class="token class-name" style="color:#FAC863">VirtualRow</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">of</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                </span><span class="token class-name" style="color:#FAC863">VirtualCell</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">from</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"value"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                </span><span class="token class-name" style="color:#FAC863">VirtualCell</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">empty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">            </span><span class="token class-name" style="color:#FAC863">VirtualRow</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">of</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                </span><span class="token class-name" style="color:#FAC863">VirtualCell</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">builder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"value"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">width</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">height</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">build</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">build</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">build</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">asFile</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Paths</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"C:\\Users\\scott\\Downloads\\test.xlsx"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>그러나 이 방식으로 대용량의 엑셀 파일을 생성하기에는 무리가 있었다.<br>
<strong>모든 Sheet, Row, Cell에 대한 정보가 갖춰진 후에 excelize를 한다는 것은 그 만큼 메모리를 점유하겠다는 말</strong>과 같으며, 이는 <code>OutOfMemoryError</code>로 부터 안전하지 못하다는 소리와 같았다.</p><p>그렇다면 하위 객체에 대한 생성을 각기 필요한 시점에 해주면 어떨까?<br>
<code>Supplier&lt;T&gt;</code>를 사용해 객체의 생성을 사용 시점까지 늦추고 스코프를 제한시켜보자.<br>
<strong>초기화 지연(<em>Lazy initialization</em>)</strong> 기법을 적용하자는 것이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">VirtualWorkbook</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">builder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">WorkbookType</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">SXSSF</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">sheets</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">VirtualSheet</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">builder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">title</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"title"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">rows</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">            </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">VirtualRow</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">of</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">VirtualCell</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">from</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"value"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">VirtualCell</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">empty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">            </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">VirtualRow</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">of</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">VirtualCell</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">builder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"value"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">width</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">height</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">build</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">build</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">build</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">asFile</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Paths</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"C:\\Users\\scott\\Downloads\\test.xlsx"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>하지만 이 방법도 <code>OutOfMemoryError</code>로부터 자유롭다곤 말할 수 없었다.<br>
<!-- -->엑셀의 한 시트에서 가용 가능한 Row의 수는 2<sup>20</sup>개로, 이는 최대 1,048,576개의 <code>Supplier&lt;T&gt;</code>가 메모리에 올라갈 수 있음을 의미한다.<br>
<!-- -->64-bit JVM 기준 <code>Supplier&lt;T&gt;</code>는 하나 당 16bytes(<em>object header 12bytes + padding 4bytes</em>)를 차지하므로, 총 16MB만큼의 여유 메모리가 필요할 것이다.</p><p>나는 결국 빌더라는 개념은 적절하지 않다는 결론을 내렸고, <strong>인라인하게 엑셀 파일을 한 줄씩 작성해 나가는 방식</strong>으로 재설계하였다.<br>
<!-- -->아래 소개할 방식은 <code>Consumer&lt;T&gt;</code>를 통해 상위 객체를 제공해주고 그 객체를 통해 하위 객체를 생성하도록 유도한다.<br>
<!-- -->기존 목적이였던 계층 구조 이해를 위한 들여쓰기도 유지할 수 있었다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">WorkbookWriter</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">from</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">WorkbookType</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">SXSSF</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">add</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">sheet </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> sheet</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">title</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"title"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">add</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">row </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> row</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">            </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">add</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">cell </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> cell</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">value</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"value"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">            </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">add</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Cell</span><span class="token operator" style="color:#d7deea">::</span><span class="token function" style="color:#79b6f2">empty</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">add</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">row </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> row</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">            </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">add</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">cell </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> cell</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">value</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"value"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">width</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">height</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">asFile</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Paths</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"C:\\Users\\scott\\Downloads\\test.xlsx"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>엑셀 파일을 읽는 것도 위와 같은 방식으로 설계해볼 수 있겠다.<br>
<code>OutOfMemoryError</code> 방지를 위해 event-driven 방식인 SAX(<em>Simple API for XML</em>)를 사용하자.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> path </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Paths</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"C:\\Users\\scott\\Downloads\\test.xlsx"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> workbookReader </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">WorkbookReader</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">from</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">path</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> firstSheetReader </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> workbookReader</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  firstSheetReader</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">forEach</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">rowIndex</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> cells</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="java" term="java"/>
        <category label="apache-poi" term="apache-poi"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[SQL 스타일 가이드]]></title>
        <id>/2021/11/25/SQL-스타일-가이드</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/11/25/SQL-스타일-가이드"/>
        <updated>2021-11-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[본 문서는 Mozilla Data Documentation에 게재된 SQL Style Guide를 함축하여 정리한 것임을 밝힌다.]]></summary>
        <content type="html"><![CDATA[<p>본 문서는 Mozilla Data Documentation에 게재된 <a href="https://docs.telemetry.mozilla.org/concepts/sql_style.html" target="_blank" rel="noopener noreferrer">SQL Style Guide</a>를 함축하여 정리한 것임을 밝힌다.</p><hr><p>기본적인 포맷은 다음과 같다.</p><div class="language-sql codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-sql codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">count</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token operator" style="color:#d7deea">*</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">AS</span><span class="token plain"> number_of_purchase_orders</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">FROM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  member </span><span class="token keyword" style="color:#c5a5c5">JOIN</span><span class="token plain"> purchase_order </span><span class="token keyword" style="color:#c5a5c5">ON</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">id </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> purchase_order</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">member_id</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">WHERE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">age </span><span class="token operator" style="color:#d7deea">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">19</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token operator" style="color:#d7deea">AND</span><span class="token plain"> member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">gender </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">BY</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">id</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>예약어는 <strong>UPPERCASE</strong>로 작성한다.</li><li>변수, 함수, 테이블은 <strong>lower_snake_case</strong>로 작성한다.</li><li>별칭을 지정할 때는 항상 <code>AS</code> 키워드를 명시한다.</li><li>카티션 곱 대신 <code>JOIN</code> 키워드를 사용한다.</li><li><code>AND</code>, <code>OR</code>과 같은 논리 연산자는 항상 줄의 시작에 위치한다.</li></ul><p>가독성을 위해 서브 쿼리는 <code>WITH</code>문으로 대체한다.</p><div class="language-sql codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-sql codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">WITH</span><span class="token plain"> sample_member </span><span class="token keyword" style="color:#c5a5c5">AS</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token operator" style="color:#d7deea">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">FROM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    member</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">LIMIT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token number" style="color:#5a9bcf">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token operator" style="color:#d7deea">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">FROM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  sample_member</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>괄호가 위처럼 여러 줄에 걸쳐있는 경우에는 다음 규칙을 따른다.</p><ul><li>여는 괄호는 항상 줄의 끝에 위치해야 한다.</li><li>닫는 괄호는 여는 괄호와 동일한 깊이를 가져야 한다.</li><li>괄호 안의 내용은 한 단계 들여써야 한다.</li></ul>]]></content>
        <category label="sql" term="sql"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[제네릭의 공변성과 PECS 원칙]]></title>
        <id>/2021/11/22/제네릭의-공변성과-PECS-원칙</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/11/22/제네릭의-공변성과-PECS-원칙"/>
        <updated>2021-11-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[공변성(covariant)과 반공변성(contravariant)에 대한 정의는 각각 다음과 같다.]]></summary>
        <content type="html"><![CDATA[<p>공변성(<em>covariant</em>)과 반공변성(<em>contravariant</em>)에 대한 정의는 각각 다음과 같다.</p><ul><li>공변성: <strong><code>T</code>가 <code>U</code>의 상위 타입일 때 <code>C&lt;T&gt;</code>가 <code>C&lt;U&gt;</code>의 상위 타입이면 공변</strong>이라고 한다.</li><li>반공변성: <strong><code>T</code>가 <code>U</code>의 상위 타입일 때 <code>C&lt;T&gt;</code>가 <code>C&lt;U&gt;</code>의 하위 타입이면 반공변</strong>이라고 한다.</li></ul><p><img loading="lazy" src="/assets/images/contravariance-vs-convariance-7e74b4f6d90905378a5cd6628e5f1060.png" width="640" height="683" class="img_E7b_"></p><blockquote><p>이미지 출처: <a href="https://stackoverflow.com/a/48858344" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/a/48858344</a></p></blockquote><p>허나 아래 코드는 컴파일 에러가 발생하며, 자바의 제네릭은 공변을 지원하지 않는 것처럼 보인다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FluentStack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Stack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">pushAll</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Collection</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> items</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">T</span><span class="token plain"> item </span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> items</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token function" style="color:#79b6f2">push</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">FluentStack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Number</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> numberStack </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FluentStack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token class-name" style="color:#FAC863">Collection</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Integer</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> integers </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">List</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">of</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">3</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">numberStack</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">pushAll</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">integers</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// Required type: Collection&lt;Number&gt;, Provided: Collection&lt;Integer&gt;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>대신 <strong>자바는 와일드카드 바운드 지정자인 <code>&lt;? extends T&gt;</code>와 <code>&lt;? super T&gt;</code>를 통해 제네릭의 공변성과 반공변성을 표현한다.</strong><br>
<!-- -->예시로, <code>&lt;? extends Number&gt;</code>는 <code>&lt;Integer&gt;</code>의 상위 타입이며, <code>&lt;? super Number&gt;</code>는 <code>&lt;Integer&gt;</code>의 하위 타입이라 할 수 있다.</p><p>제목의 PECS(<em>Producer Extends Consumer Super</em>)는 이펙티브 자바의 저자로 잘 알려진 조슈아 블로치가 제시하는 와일드카드 바운드 원칙으로, <code>&lt;? extends T&gt;</code>와 <code>&lt;? super T&gt;</code>를 어느 때 사용해야 적절한지에 대해 제시해준다.<br>
<!-- -->이펙티브 자바 <strong>"ITEM31. 한정적 와일드카드를 사용해 API 유연성을 높여라"</strong>에 이에 관한 내용이 실려있으니 참고하면 좋을 것이다.</p><p>이제 PE(<em>Producer Extends</em>)와 CS(<em>Consumer Super</em>)를 하나씩 살펴보자.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="producer-extends">Producer Extends<a class="hash-link" href="#producer-extends" title="Direct link to heading">​</a></h2><p>Producer Extends는 <strong>매개변수가 <code>T</code>를 내보내는 생산자라면 <code>&lt;? extends T&gt;</code>로 작성</strong>하라는 원칙이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FluentStack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Stack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">pushAll</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Collection</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics operator" style="color:#d7deea">?</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">extends</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> items</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">T</span><span class="token plain"> item </span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> items</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token function" style="color:#79b6f2">push</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">FluentStack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Number</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> numberStack </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FluentStack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token class-name" style="color:#FAC863">Collection</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Integer</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> integers </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">List</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">of</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">3</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">numberStack</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">pushAll</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">integers</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>FluentStack&lt;Number&gt;</code>에 <code>Collection&lt;Integer&gt;</code>의 <code>Integer</code>를 하나씩 넣고 있다.<br>
<code>Number</code>는 <code>Integer</code>의 상위 타입이므로, <code>FluentStack&lt;Number&gt;</code>에 <code>Integer</code>를 넣을 수 있는 것이다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="consumer-super">Consumer Super<a class="hash-link" href="#consumer-super" title="Direct link to heading">​</a></h2><p>Consumer Super는 <strong>매개변수가 <code>T</code>를 들이는 소비자라면 <code>&lt;? super T&gt;</code>로 작성</strong>하라는 원칙이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FluentStack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Stack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">popAll</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Collection</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics operator" style="color:#d7deea">?</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">super</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> items</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token operator" style="color:#d7deea">!</span><span class="token function" style="color:#79b6f2">isEmpty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      items</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">add</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token function" style="color:#79b6f2">pop</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">FluentStack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Number</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> numberStack </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FluentStack</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token class-name" style="color:#FAC863">Collection</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Object</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> objects </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">List</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">of</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">numberStack</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">popAll</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">objects</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>FluentStack&lt;Number&gt;</code>의 <code>Number</code>를 하나씩 꺼내 <code>Collection&lt;Object&gt;</code>에 담고 있다.<br>
<code>Object</code>는 <code>Number</code>의 상위 타입이므로, <code>Collection&lt;Object&gt;</code>에 <code>Number</code>를 담을 수 있는 것이다.</p><hr><p>참고로, 코틀린에서는 보다 직관적인 키워드인 <code>in</code>과 <code>out</code>을 통해 공변성을 표현한다.</p><ul><li><code>&lt;out T&gt;</code>: <code>T</code>를 내보내는 생산자를 나타낸다.</li><li><code>&lt;in T&gt;</code>: <code>T</code>를 들이는 소비자를 나타낸다.</li></ul>]]></content>
        <category label="java" term="java"/>
        <category label="generic" term="generic"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTTP 의미 체계를 준수하는 Restful API]]></title>
        <id>/2021/11/15/HTTP-의미-체계를-준수하는-Restful-API</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/11/15/HTTP-의미-체계를-준수하는-Restful-API"/>
        <updated>2021-11-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[본 문서는 마이크로소프트 Restful API 가이드의 'HTTP 의미 체계 준수' 섹션을 정리한 것임을 밝힌다.]]></summary>
        <content type="html"><![CDATA[<p>본 문서는 마이크로소프트 Restful API 가이드의 'HTTP 의미 체계 준수' 섹션을 정리한 것임을 밝힌다.<br>
<!-- -->한글로 잘 번역되어있으니 시간이 나면 읽어보길 추천한다.</p><blockquote><p><a href="https://docs.microsoft.com/ko-kr/azure/architecture/best-practices/api-design#conform-to-http-semantics" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/ko-kr/azure/architecture/best-practices/api-design#conform-to-http-semantics</a></p></blockquote><p>여기엔 담지 않았지만 아래 가이드들도 읽어두면 분명 도움이 될 것이다.</p><blockquote><p><a href="https://cloud.google.com/apis/design?hl=ko" target="_blank" rel="noopener noreferrer">Google: API 디자인 가이드</a><br>
<a href="https://github.com/yoondo/http-api-design/blob/master/ko/README.md" target="_blank" rel="noopener noreferrer">Heroku: HTTP API 디자인 가이드</a></p></blockquote><hr><p>각 HTTP 메서드의 동작은 리소스가 컬렉션인지 개별 항목인지에 따라 달라진다.<br>
<!-- -->다음 표는 대부분의 Restful API 구현에서 적용되는 일반적인 규칙을 요약한다.</p><table><thead><tr><th align="left">리소스</th><th align="left">GET</th><th align="left">POST</th><th align="left">PUT</th><th align="left">PATCH</th><th align="left">DELETE</th></tr></thead><tbody><tr><td align="left"><code>/customers</code></td><td align="left">모든 고객 조회</td><td align="left">새 고객 생성</td><td align="left">고객 대량 생성 또는 갱신</td><td align="left">고객 대량 부분 갱신</td><td align="left">모든 고객 제거</td></tr><tr><td align="left"><code>/customers/1</code></td><td align="left">고객 1의 정보 조회</td><td align="left">-</td><td align="left">고객 1의 생성 또는 갱신</td><td align="left">고객 1의 부분 갱신</td><td align="left">고객 1 제거</td></tr><tr><td align="left"><code>/customers/1/orders</code></td><td align="left">고객 1의 모든 주문 조회</td><td align="left">고객 1의 새 주문 생성</td><td align="left">고객 1의 주문 대량 생성 또는 갱신</td><td align="left">고객 1의 주문 대량 부분 갱신</td><td align="left">고객 1의 모든 주문 제거</td></tr></tbody></table><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="get">GET<a class="hash-link" href="#get" title="Direct link to heading">​</a></h2><p>리소스를 찾는데 성공한 GET 메서드는 <code>200 OK</code>로 응답해야 한다.</p><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token request-line method property" style="color:#5a9bcf">GET</span><span class="token request-line"> </span><span class="token request-line request-target url" style="color:#d7deea">https://adventure-works.com/customers/1</span><span class="token request-line"> </span><span class="token request-line http-version property" style="color:#5a9bcf">HTTP/1.1</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token response-status http-version property" style="color:#5a9bcf">HTTP/1.1</span><span class="token response-status"> </span><span class="token response-status status-code number" style="color:#5a9bcf">200</span><span class="token response-status"> </span><span class="token response-status reason-phrase string" style="color:#8dc891">OK</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">{</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  "name": "scott",</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  "age": 20</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>캐시된 리소스인 경우 <code>304 Not Modified</code>를 반환한다.<br>
<!-- -->리소스를 찾을 수 없는 경우에는 <code>404 Not Found</code>를 반환한다.  </p><p>요청이 처리되었지만 응답 본문이 없는 경우에는 <code>204 No Content</code>를 반환한다.<br>
<!-- -->일치하는 항목을 찾지 못한 검색 작업이 이에 해당한다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="post">POST<a class="hash-link" href="#post" title="Direct link to heading">​</a></h2><p>POST 메서드는 새 리소스가 만들어진 경우 <code>201 Created</code>를 반환해야 한다.<br>
<!-- -->이때 만들어진 리소스의 URI는 응답의 Location 헤더에 포함시킨다.</p><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token request-line method property" style="color:#5a9bcf">POST</span><span class="token request-line"> </span><span class="token request-line request-target url" style="color:#d7deea">https://adventure-works.com/customers</span><span class="token request-line"> </span><span class="token request-line http-version property" style="color:#5a9bcf">HTTP/1.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">{</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  "name": "michael",</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  "age": 30</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token response-status http-version property" style="color:#5a9bcf">HTTP/1.1</span><span class="token response-status"> </span><span class="token response-status status-code number" style="color:#5a9bcf">201</span><span class="token response-status"> </span><span class="token response-status reason-phrase string" style="color:#8dc891">Created</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token header header-name keyword" style="color:#c5a5c5">Location</span><span class="token header punctuation" style="color:#8dc891">:</span><span class="token header"> </span><span class="token header header-value">/customers/2</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>작업을 수행하지만 새 리소스를 만들지는 않는 POST 메서드의 경우 <code>200 OK</code>를 반환하고 작업의 결과를 응답 본문에 포함시킬 수 있다.<br>
<!-- -->만약 반환할 결과가 없다면 응답 본문 없이 <code>204 No Content</code>를 반환하면 된다.</p><p>클라이언트가 잘못된 파라미터를 배치하였다면 <code>400 Bad Request</code>를 반환한다.<br>
<!-- -->이때 응답 본문에는 오류에 대한 추가 정보 또는 자세한 정보를 제공하는 URI 링크가 포함될 수 있다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="put">PUT<a class="hash-link" href="#put" title="Direct link to heading">​</a></h2><p>PUT 메서드는 POST 메서드와 마찬가지로 새 리소스를 만들어진 경우 <code>201 Created</code>로 응답해야 한다.<br>
<!-- -->그렇지 않고 기존 리소스를 갱신한 경우에는 <code>200 OK</code> 또는 <code>204 No Content</code>를 반환한다.</p><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token request-line method property" style="color:#5a9bcf">PUT</span><span class="token request-line"> </span><span class="token request-line request-target url" style="color:#d7deea">https://adventure-works.com/customers/2</span><span class="token request-line"> </span><span class="token request-line http-version property" style="color:#5a9bcf">HTTP/1.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">{</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  "name": "holden",</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  "age": 40</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token response-status http-version property" style="color:#5a9bcf">HTTP/1.1</span><span class="token response-status"> </span><span class="token response-status status-code number" style="color:#5a9bcf">204</span><span class="token response-status"> </span><span class="token response-status reason-phrase string" style="color:#8dc891">No Content</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>상황에 따라 기존 리소스를 업데이트할 수 없는 경우도 있다.<br>
<!-- -->이 경우에는 <code>409 Conflict</code>를 반환하는 방안을 고려해보자.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="patch">PATCH<a class="hash-link" href="#patch" title="Direct link to heading">​</a></h2><p>PATCH 메서드는 리소스 전체가 아닌 변경할 내용만을 요청으로서 전달한다.</p><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token request-line method property" style="color:#5a9bcf">PATCH</span><span class="token request-line"> </span><span class="token request-line request-target url" style="color:#d7deea">https://adventure-works.com/customers/2</span><span class="token request-line"> </span><span class="token request-line http-version property" style="color:#5a9bcf">HTTP/1.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">{</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  "age": 20</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token response-status http-version property" style="color:#5a9bcf">HTTP/1.1</span><span class="token response-status"> </span><span class="token response-status status-code number" style="color:#5a9bcf">204</span><span class="token response-status"> </span><span class="token response-status reason-phrase string" style="color:#8dc891">No Content</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>PATCH 메서드에 대한 사양을 명시한 <a href="https://tools.ietf.org/html/rfc5789" target="_blank" rel="noopener noreferrer">RFC 5789</a>에서는 PATCH에 대한 특정한 형식을 정의하지 않았다.<br>
<!-- -->보통 JSON에 기반한 패치 형식인 <a href="https://datatracker.ietf.org/doc/html/rfc7396" target="_blank" rel="noopener noreferrer">JSON Merge Patch</a> 또는 <a href="https://datatracker.ietf.org/doc/html/rfc6902" target="_blank" rel="noopener noreferrer">JSON Patch</a>를 사용한다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="delete">DELETE<a class="hash-link" href="#delete" title="Direct link to heading">​</a></h2><p>삭제 작업에 성공하면 프로세스가 성공적으로 처리되었지만 응답 본문에 실어줄 정보는 없음을 나타내는 <code>204 No Content</code>로 응답해야 한다.</p><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token request-line method property" style="color:#5a9bcf">DELETE</span><span class="token request-line"> </span><span class="token request-line request-target url" style="color:#d7deea">https://adventure-works.com/customers/2</span><span class="token request-line"> </span><span class="token request-line http-version property" style="color:#5a9bcf">HTTP/1.1</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token response-status http-version property" style="color:#5a9bcf">HTTP/1.1</span><span class="token response-status"> </span><span class="token response-status status-code number" style="color:#5a9bcf">204</span><span class="token response-status"> </span><span class="token response-status reason-phrase string" style="color:#8dc891">No Content</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>삭제하려는 리소스를 찾을 수 없는 경우에는 <code>404 Not Found</code>를 반환할 수 있다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="비동기-작업">비동기 작업<a class="hash-link" href="#비동기-작업" title="Direct link to heading">​</a></h2><p>때로는 작업을 완료하는데 시간이 걸리는 처리가 필요할 수 있고, 작업이 완료될때까지 기다렸다가 클라이언트에게 응답을 보내는 경우 허용되지 않는 수준의 대기 시간이 발생할 수 있다.<br>
<!-- -->이 경우 비동기 작업을 수행하는 방안을 고려해 보아야 한다.</p><p>요청 처리가 수락되었지만 아직 완료되지 않았음을 나타내는 <code>202 Accepted</code>를 반환한다.<br>
<!-- -->그리고 클라이언트가 폴링(<em>polling</em>)하며 상태를 모니터링할 수 있도록 비동기 요청의 상태를 반환하는 엔드포인트의 URI를 응답의 Location 헤더에 포함해야 한다.</p><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token response-status http-version property" style="color:#5a9bcf">HTTP/1.1</span><span class="token response-status"> </span><span class="token response-status status-code number" style="color:#5a9bcf">202</span><span class="token response-status"> </span><span class="token response-status reason-phrase string" style="color:#8dc891">Accepted</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token header header-name keyword" style="color:#c5a5c5">Location</span><span class="token header punctuation" style="color:#8dc891">:</span><span class="token header"> </span><span class="token header header-value">/api/status/1</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>클라이언트가 이 엔드포인트에 GET 요청을 보내면 작업의 상태를 반환해준다.<br>
<!-- -->필요에 따라 예상 완료 시간 또는 작업 취소 링크를 포함할 수 있다.</p><div class="language-http codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-http codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token response-status http-version property" style="color:#5a9bcf">HTTP/1.1</span><span class="token response-status"> </span><span class="token response-status status-code number" style="color:#5a9bcf">200</span><span class="token response-status"> </span><span class="token response-status reason-phrase string" style="color:#8dc891">OK</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">{</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  "status":"In progress",</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  "link": {</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    "rel":"cancel",</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    "method":"delete",</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    "href":"/api/status/1"</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이에 대한 자세한 내용은 <a href="https://docs.microsoft.com/ko-kr/azure/architecture/patterns/async-request-reply" target="_blank" rel="noopener noreferrer">비동기 Request-Reply 패턴</a>에서 확인해볼 수 있다.</p>]]></content>
        <category label="http" term="http"/>
        <category label="rest-api" term="rest-api"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[구글 구아바가 빈 문자열에 대한 precondition을 제공하지 않는 이유]]></title>
        <id>/2021/11/08/구글-구아바가-빈-문자열에-대한-precondition을-제공하지-않는-이유</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/11/08/구글-구아바가-빈-문자열에-대한-precondition을-제공하지-않는-이유"/>
        <updated>2021-11-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[구글 구아바의 Preconditions는 여러 전제조건을 검사하는데 쓰이는 유틸리티 클래스다.]]></summary>
        <content type="html"><![CDATA[<p>구글 구아바의 <code>Preconditions</code>는 여러 전제조건을 검사하는데 쓰이는 유틸리티 클래스다.<br>
<!-- -->그 중 <code>T checkNotNull(T)</code>는 <code>T</code>가 null이 아닌지 검증한 후 <code>T</code>를 그대로 반환하는 메서드로, 선언과 동시에 검증을 인라인하게 수행할 수 있어 유용하게 쓰이곤 한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> name </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Preconditions</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">checkNotNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>그러나 나는 아래 예처럼 특정 문자열이 null이나 빈 문자열이 아닌지 검증한 후 그 문자열을 그대로 반환하는 메서드를 원했다. (<em>인라인하게 작성할 수 있는</em>)</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> name </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Preconditions</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">checkNotNullOrEmpty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>하지만 이런 바램은 이미 이전에 반려된 적이 있었다.</p><blockquote><p><a href="https://github.com/google/guava/issues/2053" target="_blank" rel="noopener noreferrer">https://github.com/google/guava/issues/2053</a></p></blockquote><p>반려 사유는 다음과 같다.</p><ul><li><strong><code>Preconditions</code>는 최소주의 원칙으로 설계되었다.</strong><br><code>void checkArgument(!Strings.isNullOrEmpty(arg[0]))</code>으로도 충분히 같은 기능을 수행할 수 있다.</li><li><strong>null이나 빈 문자열이 아닌지 검증하는 전제조건은 어떤 예외를 발생시킬지 모호하다.</strong><br>반면 <code>void checkArgument(boolean)</code>은 <code>IllegalArgumentException</code>을 발생시킬 것이라 쉽게 예상할 수 있다.</li><li>빈 값을 null과 같이 처리하려면 빈 값을 null로 변환하는 전처리 작업을 해주면 된다.<br>그 후 <code>T checkNotNull(T)</code>를 사용한다면 인라인하게 작성할 수 있을 것이다.</li></ul><p>즉, 이렇게 작성하라는 이야기다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> name </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Preconditions</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">checkNotNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Strings</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">emptyToNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>중첩된 괄호가 마음에 들지 않는다면 이런식으로 만들어 써도 나쁘지 않을 것 같다.<br>
<!-- -->(<em>구아바의 <code>Preconditions</code>는 final 클래스라 확장하지 못한다.</em>)</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@NoArgsConstructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">access </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AccessLevel</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">PRIVATE</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">StringPreconditions</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@SuppressWarnings</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"UnusedReturnValue"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">checkNotNullOrEmpty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> string</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Strings</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">isNullOrEmpty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">string</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IllegalArgumentException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> string</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@SuppressWarnings</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"UnusedReturnValue"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">checkNotNullOrEmpty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> string</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> errorMessage</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"errorMessage must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Strings</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">isNullOrEmpty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">string</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IllegalArgumentException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> string</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@SuppressWarnings</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"UnusedReturnValue"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">checkNotNullOrEmpty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> string</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> errorMessageTemplate</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Object</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> errorMessageArgs</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">errorMessageTemplate</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"errorMessageTemplate must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">errorMessageArgs</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"errorMessageArgs must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Strings</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">isNullOrEmpty</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">string</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">IllegalArgumentException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Strings</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">lenientFormat</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">errorMessageTemplate</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> errorMessageArgs</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> string</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>만약 스프링 프레임워크를 사용한다면 <code>Assert</code>를 확장하여 사용하는 것이 대안이 될 수 있을 것이다.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>스프링 프레임워크의 <code>Assert</code>에는 문자열이 null이나 빈 문자열이 아닌지 검사한 후 <code>IllegalArgumentException</code>을 발생시키는 <code>hasText(String)</code>라는 메서드가 있긴 하지만 반환 값이 없어 인라인하게 작성할 순 없다.<br>
<!-- -->반환 타입이 달라 오버라이딩하진 못하기 때문에 <code>hasText(String)</code>와 혼동되지 않으면서도 동작을 유추할 수 있는 네이밍을 생각해내야 할 것이다.</p></div></div>]]></content>
        <category label="java" term="java"/>
        <category label="guava" term="guava"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[springdoc-openapi (swagger-ui) 적용하기]]></title>
        <id>/2021/11/06/springdoc-openapi-적용하기</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/11/06/springdoc-openapi-적용하기"/>
        <updated>2021-11-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[springdoc-openapi는 OAS(Open Api Specification)와 swagger-ui를 지원하는 API 문서 생성 자동화 도구다. (OAS란 Restful API 문서에 대한 표준 명세로, 이전에는 API 문서 생성 도구인 swagger-ui의 일부였지만 2016년부터 별도의 프로젝트로 분리되었다.)]]></summary>
        <content type="html"><![CDATA[<p><a href="https://springdoc.org/" target="_blank" rel="noopener noreferrer">springdoc-openapi</a>는 OAS(<em>Open Api Specification</em>)와 swagger-ui를 지원하는 <strong>API 문서 생성 자동화 도구</strong>다. (<em>OAS란 Restful API 문서에 대한 표준 명세로, 이전에는 API 문서 생성 도구인 swagger-ui의 일부였지만 2016년부터 별도의 프로젝트로 분리되었다.</em>)</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p><a href="https://springfox.github.io/springfox/" target="_blank" rel="noopener noreferrer">springfox</a>라는 것도 있긴 한데 springdoc에 비해 업데이트가 뜸한 편이다.<br>
<!-- -->일단 둘 다 스프링 팀에서 관리하지 않는 커뮤니티 기반 프로젝트라 그나마 꾸준히 관리되는 것을 선택하는게 낫겠다고 판단했다.</p></div></div><p>springdoc-openapi 종속성을 추가하면 swagger-ui도 컴파일 종속성으로 따라온다.</p><div class="tabs-container tabList_uSqn"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LplD tabs__item--active">maven</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LplD">gradle</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_OmH5"><div class="language-xml codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-xml codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">dependency</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">groupId</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain">org.springdoc</span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">groupId</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">artifactId</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain">springdoc-openapi-ui</span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">artifactId</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">version</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain">${org.springdoc.version}</span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">version</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">dependency</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_OmH5" hidden=""><div class="language-groovy codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-groovy codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token plain">implementation </span><span class="token interpolation-string string" style="color:#8dc891">"org.springdoc:springdoc-openapi-ui:</span><span class="token interpolation-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token interpolation-string interpolation expression">org</span><span class="token interpolation-string interpolation expression punctuation" style="color:#8dc891">.</span><span class="token interpolation-string interpolation expression">springdoc</span><span class="token interpolation-string interpolation expression punctuation" style="color:#8dc891">.</span><span class="token interpolation-string interpolation expression">version</span><span class="token interpolation-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token interpolation-string string" style="color:#8dc891">"</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div><blockquote><p><a href="https://search.maven.org/artifact/org.springdoc/springdoc-openapi-ui" target="_blank" rel="noopener noreferrer">Maven Central Repository: springdoc-openapi-ui</a></p></blockquote><p>종속성을 추가한 뒤 프로젝트를 빌드하면 <code>/swagger-ui.html</code> 경로로 API 문서 페이지가 생성된다.</p><p><img loading="lazy" src="/assets/images/swagger-399ca8fc6e6fff1dea93a1b99ab42c9a.png" width="1762" height="816" class="img_E7b_"></p><p>swagger-ui는 클래스 구조 및 어노테이션을 런타임에 분석하여 문서를 생성해낸다.<br>
<!-- -->위 스크린샷에서 파싱한 API의 소스 코드를 확인해보고 싶다면 아래 링크를 참조하자.</p><blockquote><p><a href="https://github.com/springdoc/springdoc-openapi-demos/blob/master/springdoc-openapi-spring-boot-2-webmvc/src/main/java/org/springdoc/demo/app2/api/PetApi.java" target="_blank" rel="noopener noreferrer">Github: PetApi.java</a></p></blockquote>]]></content>
        <category label="java" term="java"/>
        <category label="spring-boot" term="spring-boot"/>
        <category label="open-api-specification" term="open-api-specification"/>
        <category label="swagger-ui" term="swagger-ui"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Step Builder Pattern 예제]]></title>
        <id>/2021/10/31/Step-Builder-Pattern-예제</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/10/31/Step-Builder-Pattern-예제"/>
        <updated>2021-10-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[JDK 9의 resource references문을 흉내내고 싶어 다음과 같은 클래스를 설계하고 싶다고 가정해보자.]]></summary>
        <content type="html"><![CDATA[<p>JDK 9의 <a href="https://www.baeldung.com/java-try-with-resources#java-9---effectively-finalvariables" target="_blank" rel="noopener noreferrer">resource references</a>문을 흉내내고 싶어 다음과 같은 클래스를 설계하고 싶다고 가정해보자.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">Closeable</span><span class="token plain"> resource </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token class-name" style="color:#FAC863">Try</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">with</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">onRun</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">onException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">SomeException</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">onException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">AnotherException</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">onFinish</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">run</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>설계 요건만 정리해보자면 이렇다.</p><ul><li><code>with(Closeable)</code>을 호출한 후에는 <code>onRun(Runnable)</code>만 호출할 수 있다.</li><li><code>onRun(Runnable)</code>을 호출한 후에는 <code>onException(Class&lt;Exception&gt;, Runnable)</code>, <code>onFinal(Runnable)</code>, <code>run()</code> 중 하나를 호출할 수 있다.</li><li><code>onException(Class&lt;Exception&gt;, Runnable)</code>을 호출한 후에는 <code>onException(Class&lt;Exception&gt;, Runnable)</code>, <code>onFinal(Runnable)</code>, <code>run()</code> 중 하나를 호출할 수 있다. (<em><code>onException(Class&lt;Exception&gt;, Runnable)</code>은 여러 번 호출될 수 있다.</em>)</li><li><code>onFinal(Runnable)</code>을 호출한 후에는 <code>run()</code>만 호출할 수 있다.</li><li><code>run()</code>을 호출하면 <code>onRun(Runnable)</code>으로 지정한 핸들러가 실행된다.<br>실행 중 예외가 발생한다면 <code>onException(Class&lt;Exception&gt;, Runnable)</code>으로 지정한 핸들러가 호출되며, 마지막엔 <code>onFinal(Runnable)</code>로 지정한 핸들러가 호출된다.</li></ul><div></div><p>이를 매끄럽게 풀어내는데에는 <strong>스텝 빌더 패턴(<em>step builder pattern</em>)</strong>이 제격이다.<br>
<!-- -->step-by-step으로 빌드한다고 해서 붙여진 이름이다.</p><blockquote><p><a href="https://www.svlada.com/step-builder-pattern/" target="_blank" rel="noopener noreferrer">토막글: Step builder pattern</a></p></blockquote><p>스텝 빌더 패턴은 <strong>스텝별로 인터페이스를 각기 다르게 노출하는 방법을 사용해 필드의 세팅 순서를 강제한다.</strong></p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@NoArgsConstructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">access </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AccessLevel</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">PRIVATE</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Try</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">RunHandlerStep</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">with</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Closeable</span><span class="token plain"> resource</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"resource must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Trier</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">resource</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">RunHandlerStep</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">OptionalHandlerStep</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">onRun</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Runnable</span><span class="token plain"> runHandler</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">OptionalHandlerStep</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">RunStep</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">OptionalHandlerStep</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">onException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Class</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics operator" style="color:#d7deea">?</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">extends</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">Exception</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> exceptionClass</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Runnable</span><span class="token plain"> exceptionHandler</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">RunStep</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">onFinish</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Runnable</span><span class="token plain"> runnable</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">RunStep</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">run</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Trier</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">RunHandlerStep</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">OptionalHandlerStep</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Closeable</span><span class="token plain"> resource</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">List</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">ExceptionHandlerPair</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> exceptionHandlerPairs</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Runnable</span><span class="token plain"> runHandler</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Runnable</span><span class="token plain"> finishHandler</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Trier</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Closeable</span><span class="token plain"> resource</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">resource </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> resource</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">exceptionHandlerPairs </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ArrayList</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">OptionalHandlerStep</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">onRun</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Runnable</span><span class="token plain"> runHandler</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">runHandler</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"runHandler must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">runHandler </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> runHandler</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">OptionalHandlerStep</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">onException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Class</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics operator" style="color:#d7deea">?</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">extends</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">Exception</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> exceptionClass</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Runnable</span><span class="token plain"> exceptionHandler</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">exceptionClass</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"exceptionClass must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">exceptionHandler</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"exceptionHandler must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">exceptionHandlerPairs</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">add</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ExceptionHandlerPair</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">exceptionClass</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> exceptionHandler</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">RunStep</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">onFinish</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Runnable</span><span class="token plain"> finishHandler</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">finishHandler</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"finishHandler must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">finishHandler </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> finishHandler</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#8dc891">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">run</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">record</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ExceptionHandlerPair</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Class</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics operator" style="color:#d7deea">?</span><span class="token generics"> </span><span class="token generics keyword" style="color:#c5a5c5">extends</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">Exception</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> exceptionClass</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Runnable</span><span class="token plain"> exceptionHandler</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>각 메서드가 어떤 인터페이스를 노출하고 있는지에 대해 주목해보면 복잡할 것도 없다.</p><hr><p>스텝 빌더 패턴을 응용해 <code>javax.crypto.Cipher</code> 래핑 클래스 및 빌더를 설계해보기도 했다.</p><div class="language-kotlin codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-kotlin codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">val</span><span class="token plain"> cryptographer </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> Cryptographer</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">aes</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">cbc</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">iv</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">pkcs5Padding</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">val</span><span class="token plain"> plainText </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:#8dc891">"plain text"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">val</span><span class="token plain"> plainBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> plainText</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">toByteArray</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">Charsets</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">UTF_8</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">val</span><span class="token plain"> encryptedBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> cryptographer</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">encrypt</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">plainBytes</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">val</span><span class="token plain"> decryptedBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> cryptographer</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">decrypt</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">encryptedBytes</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">val</span><span class="token plain"> decryptedText </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> decryptedBytes</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">toUtf8</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">assertEquals</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">plainText</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> decryptedText</span><span class="token punctuation" style="color:#8dc891">)</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>전체 소스 코드는 <a href="https://github.com/ssogon/cryptographer" target="_blank" rel="noopener noreferrer">여기</a>에서 확인해볼 수 있다. (<em>코틀린으로 작성되어 있다.</em>)</p>]]></content>
        <category label="java" term="java"/>
        <category label="design-pattern" term="design-pattern"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[알아두면 유용한 Window Function]]></title>
        <id>/2021/10/29/알아두면-유용한-Window-Function</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/10/29/알아두면-유용한-Window-Function"/>
        <updated>2021-10-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[월별로 그 당시의 총 회원 수를 조회해달라는 요청이 있었다.]]></summary>
        <content type="html"><![CDATA[<p>월별로 그 당시의 총 회원 수를 조회해달라는 요청이 있었다.<br>
<!-- -->이를 배치로 기록해두고 있진 않았기 때문에 회원 테이블의 가입일자를 년월로 그룹핑해 구해야했다.</p><div class="language-sql codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-sql codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  SUBSTRING</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">register_date</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">6</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">AS</span><span class="token plain"> year_and_month</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">COUNT</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">FROM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  member</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">BY</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  year_and_month</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><table><thead><tr><th align="left">년월</th><th align="left">신규 가입자 수</th></tr></thead><tbody><tr><td align="left">202101</td><td align="left">1000</td></tr><tr><td align="left">202102</td><td align="left">2000</td></tr><tr><td align="left">202103</td><td align="left">3000</td></tr></tbody></table><p>여기서 월별 회원 수는 다음 점화식으로 구할 수 있다.</p><p><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi>n</mi><mtext>월의&nbsp;회원&nbsp;수</mtext></mrow><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mi>i</mi><mtext>월의&nbsp;신규&nbsp;가입자&nbsp;수</mtext></mrow></mstyle></mrow><annotation encoding="application/x-tex">{n월의\ 회원\ 수} = \displaystyle\sum_{i=1}^n {i월의\ 신규\ 가입자\ 수}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mord hangul_fallback">월</span><span class="mord hangul_fallback">의</span><span class="mspace">&nbsp;</span><span class="mord hangul_fallback">회</span><span class="mord hangul_fallback">원</span><span class="mspace">&nbsp;</span><span class="mord hangul_fallback">수</span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em"><span style="top:-1.872331em;margin-left:0em"><span class="pstrut" style="height:3.05em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em"><span class="pstrut" style="height:3.05em"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em"><span class="pstrut" style="height:3.05em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mord hangul_fallback">월</span><span class="mord hangul_fallback">의</span><span class="mspace">&nbsp;</span><span class="mord hangul_fallback">신</span><span class="mord hangul_fallback">규</span><span class="mspace">&nbsp;</span><span class="mord hangul_fallback">가</span><span class="mord hangul_fallback">입</span><span class="mord hangul_fallback">자</span><span class="mspace">&nbsp;</span><span class="mord hangul_fallback">수</span></span></span></span></span></span></p><p>이전 행들에 대한 정보만 참조할 수 있다면 쉽게 풀 수 있는 문제란 것을 알 수 있다.</p><p>이제 <a href="https://en.wikipedia.org/wiki/Window_function_(SQL)" target="_blank" rel="noopener noreferrer">윈도우 함수(<em>Window Function</em>)</a>의 힘을 사용해야 할 때다.<br>
<strong>윈도우 함수는 여러 행의 값을 참조해 각 행에 대한 값을 반환하는 함수</strong>로, 스칼라 값을 반환하는 집계(<em>Aggregation Function</em>) 함수와 대비되어 설명되곤 하는 함수다.</p><p><img loading="lazy" src="/assets/images/aggregation-function-vs-window-function-f036c1b5cd77c1f17ff9cc2fe4fdede1.png" width="1400" height="411" class="img_E7b_"></p><blockquote><p>이미지 출처: <a href="https://towardsdatascience.com/a-guide-to-advanced-sql-window-functions-f63f2642cbf9" target="_blank" rel="noopener noreferrer">https://towardsdatascience.com/a-guide-to-advanced-sql-window-functions-f63f2642cbf9</a></p></blockquote><p>처음의 쿼리를 서브 쿼리로 만든 뒤 윈도우 함수를 적용시켜보자.</p><div class="language-sql codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-sql codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">WITH</span><span class="token plain"> monthly_new_member </span><span class="token keyword" style="color:#c5a5c5">AS</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    substring</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">register_date</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">6</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">AS</span><span class="token plain"> year_and_month</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token function" style="color:#79b6f2">count</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">AS</span><span class="token plain"> cnt</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">FROM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    member</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">BY</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    year_and_month</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  year_and_month</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  cnt</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">SUM</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">cnt</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">OVER</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">BY</span><span class="token plain"> year_and_month </span><span class="token keyword" style="color:#c5a5c5">ROWS</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">BETWEEN</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">UNBOUNDED</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">PRECEDING</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">AND</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">CURRENT</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">ROW</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">FROM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  monthly_new_member</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><table><thead><tr><th align="left">년월</th><th align="left">신규 가입자 수</th><th align="left">회원 수</th></tr></thead><tbody><tr><td align="left">202101</td><td align="left">1000</td><td align="left">1000</td></tr><tr><td align="left">202102</td><td align="left">2000</td><td align="left">3000</td></tr><tr><td align="left">202103</td><td align="left">3000</td><td align="left">6000</td></tr></tbody></table><p><code>SUM(cnt) OVER (ORDER BY year_and_month ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)</code>는 <code>UNBOUNDED PRECEDING</code>(<em>첫 행</em>)부터 <code>CURRENT_ROW</code>(<em>현재 행</em>)까지의 합계를 계산하는 윈도우 함수다.</p>]]></content>
        <category label="sql" term="sql"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[반디집 압축 및 파일 전송 자동화]]></title>
        <id>/2021/10/24/반디집-압축-및-파일-전송-자동화</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/10/24/반디집-압축-및-파일-전송-자동화"/>
        <updated>2021-10-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[특정 경로의 파일을 반디집으로 압축한 후 이를 이메일로 전송하는 작업을 자동화하고자 한다.]]></summary>
        <content type="html"><![CDATA[<p>특정 경로의 파일을 반디집으로 압축한 후 이를 이메일로 전송하는 작업을 자동화하고자 한다.<br>
<!-- -->Node.js로 인스턴스를 띄운 후 스케줄링 라이브러리를 통해 배치화해보자.</p><p>먼저 종속성을 추가한다. (<em>타입스크립트를 사용할 것이기 때문에 타입 정의도 가져와준다.</em>)</p><div class="language-shell codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-shell codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> child-process</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> date-fns</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> dotenv</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> nodemailer</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> node-cron</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> -D @types/date-fns</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> -D @types/node</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> -D @types/nodemailer</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">npm</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">install</span><span class="token plain"> -D @types/node-cron</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>child-process</code>: 자식 프로세스 생성 라이브러리</li><li><code>date-fns</code>: 날짜 관련 유틸리티 라이브러리</li><li><code>dotenv</code>: .env 파일 로드 라이브러리</li><li><code>nodemailer</code>: 메일 전송 라이브러리</li><li><code>node-cron</code>: crontab 기반 스케줄링 라이브러리</li></ul><p>가장 처음할 작업은 파일을 반디집으로 압축하는 것이다.<br>
<a href="https://kr.bandisoft.com/bandizip/help/parameter/" target="_blank" rel="noopener noreferrer">반디집 커맨드 라인 파라미터</a>를 참고하여 작성해보자.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>반디집 문서에 나와있는 <code>-email</code> 옵션은 자체적인 이메일 발송 기능은 아니며, 작업 후 시스템의 이메일 클라이언트를 실행하고자 할 때 사용되는 기능이다.</p></div></div><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports operator" style="color:#d7deea">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:#c5a5c5">as</span><span class="token imports"> dotenv</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'dotenv'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#8dc891">{</span><span class="token imports"> format </span><span class="token imports keyword module" style="color:#c5a5c5">as</span><span class="token imports"> formatDate </span><span class="token imports punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'date-fns'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#8dc891">{</span><span class="token imports"> execSync </span><span class="token imports punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'child_process'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">dotenv</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">config</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token constant" style="color:#5a9bcf">BANDIZIP_PATH</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token constant" style="color:#5a9bcf">BANDIZIP_PASSWORD</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token constant" style="color:#5a9bcf">SOURCE_PATH</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token constant" style="color:#5a9bcf">TARGET_PATH</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token constant" style="color:#5a9bcf">OAUTH_USER</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token constant" style="color:#5a9bcf">OAUTH_CLIENT_ID</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token constant" style="color:#5a9bcf">OAUTH_CLIENT_SECRET</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token constant" style="color:#5a9bcf">OAUTH_REFRESH_TOKEN</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token constant" style="color:#5a9bcf">RECEIVER_EMAIL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">any</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> process</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access">env</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> zipFileName</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token builtin" style="color:#D8DEE9">string</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation function" style="color:#79b6f2">formatDate</span><span class="token template-string interpolation punctuation" style="color:#8dc891">(</span><span class="token template-string interpolation keyword" style="color:#c5a5c5">new</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation class-name known-class-name class-name" style="color:#FAC863">Date</span><span class="token template-string interpolation punctuation" style="color:#8dc891">(</span><span class="token template-string interpolation punctuation" style="color:#8dc891">)</span><span class="token template-string interpolation punctuation" style="color:#8dc891">,</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:#8dc891">'yyyy-MM-dd'</span><span class="token template-string interpolation punctuation" style="color:#8dc891">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string string" style="color:#8dc891">.zip</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">execSync</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token template-string string" style="color:#8dc891">"</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation constant" style="color:#5a9bcf">BANDIZIP_PATH</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string string" style="color:#8dc891">" c -p:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation constant" style="color:#5a9bcf">BANDIZIP_PASSWORD</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string string" style="color:#8dc891"> </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation constant" style="color:#5a9bcf">TARGET_PATH</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string string" style="color:#8dc891">/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation">zipFileName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string string" style="color:#8dc891"> </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation constant" style="color:#5a9bcf">SOURCE_PATH</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> stdio</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'ignore'</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>마지막 줄의 <code>execSync</code> 함수를 보면 옵션으로 <strong><code>{stdio: 'ignore'}</code></strong>가 붙어있는 것을 볼 수 있는데, 이는 <strong>반디집 콘솔 프로그램이 출력하는 stdout이 최대 버퍼(<em>default: 1024 <!-- -->*<!-- --> 1024 bytes</em>)를 초과해버리는 것을 방지하기 위함</strong>이다. (<em>최대 버퍼가 초과될 경우 프로세스가 강제로 종료되어버린다.</em>)</p><blockquote><p><a href="https://nodejs.org/api/child_process.html#child_processexecsynccommand-options" target="_blank" rel="noopener noreferrer">Node.js: child_process.execSync</a></p></blockquote><p>이제 만들어진 압축 파일을 <code>nodemailer</code>로 전송해보자.</p><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#8dc891">{</span><span class="token imports"> createTransport</span><span class="token imports punctuation" style="color:#8dc891">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Transporter</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'nodemailer'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Mail</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'nodemailer/lib/mailer'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token spread operator" style="color:#d7deea">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> transporter</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">Transporter</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">createTransport</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  service</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'gmail'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  host</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'smtp.google.com'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  port</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">465</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  auth</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    type</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'oauth2'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    user</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token constant" style="color:#5a9bcf">OAUTH_USER</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    clientId</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token constant" style="color:#5a9bcf">OAUTH_CLIENT_ID</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    clientSecret</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token constant" style="color:#5a9bcf">OAUTH_CLIENT_SECRET</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    refreshToken</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token constant" style="color:#5a9bcf">OAUTH_REFRESH_TOKEN</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> mailOptions</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">Mail</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access maybe-class-name">Options</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token constant" style="color:#5a9bcf">OAUTH_USER</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  to</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token constant" style="color:#5a9bcf">RECEIVER_EMAIL</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  subject</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> zipFileName</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  attachments</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    path</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation constant" style="color:#5a9bcf">TARGET_PATH</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string string" style="color:#8dc891">/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">${</span><span class="token template-string interpolation">zipFileName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#8dc891">}</span><span class="token template-string template-punctuation string" style="color:#8dc891">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">transporter</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">sendMail</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">mailOptions</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">error</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#FAC863">Error</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">|</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#c5a5c5">null</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token console class-name" style="color:#FAC863">console</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">dir</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>2022년 5월 30일부터 보안 수준이 낮은 앱 및 Google 계정의 로그인 시도를 차단한다</strong>는 소식이 있어 plain 암호를 통한 로그인 대신 OAuth2 방식을 사용해 gmail을 전송했다.</p><blockquote><p><a href="https://support.google.com/accounts/answer/6010255?hl=ko" target="_blank" rel="noopener noreferrer">Google: 보안 수준이 낮은 앱 및 Google 계정</a><br>
<a href="https://nodemailer.com/smtp/oauth2/" target="_blank" rel="noopener noreferrer">Nodemailer: OAuth2</a></p></blockquote><p>위 로직을 <code>node-cron</code>으로 감싸주면 배치화시킬 수 있겠다.</p><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#8dc891">{</span><span class="token imports"> schedule </span><span class="token imports punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'node-cron'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token spread operator" style="color:#d7deea">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token method function property-access" style="color:#79b6f2">schedule</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'0 0 18 * * *'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token spread operator" style="color:#d7deea">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="javascript" term="javascript"/>
        <category label="typescript" term="typescript"/>
        <category label="node-js" term="node-js"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[제네릭의 타입 소거와 가변 인자]]></title>
        <id>/2021/10/23/제네릭의-타입-소거와-가변-인자</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/10/23/제네릭의-타입-소거와-가변-인자"/>
        <updated>2021-10-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[다음은 제네릭 타입의 가변 인자를 가지는 메서드다.]]></summary>
        <content type="html"><![CDATA[<p>다음은 제네릭 타입의 가변 인자를 가지는 메서드다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">printAll</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">T</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> items</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">T</span><span class="token plain"> item </span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> items</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">System</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">out</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">println</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>위 코드를 작성하게 되면 <strong>"Possible heap pollution from parameterized vararg type"</strong>라는 경고와 함께 <strong>"Make final and annotate as @SafeVarargs"</strong>라는 quick fix⚡가 제시된다.  </p><p>해당 경고는 <strong>타입 소거(<em>type erasure</em>)로 인해 컴파일러가 발견할 수 없는 힙 오염(<em>heap pollution</em>)이 발생할 여지가 있으니 개발자 스스로 점검할 수 있도록 유도하기 위한 것</strong>이다.<br>
<!-- -->그 후 안전하다 판단되면 <code>@SafeVarargs</code>로 경고를 억제하고 final 제어자를 통해 오버라이딩을 방지할 것을 권고해준다.</p><p>여기서 타입 소거란 런타임시 제네릭 타입에 대한 정보를 지워버리는 프로세스를 말한다.<br>
<!-- -->이는 제네릭이 도입되기 전인 JDK 1.5 이전 코드와의 호환성 유지를 위해 꼭 필요한 작업이다.<br>
<!-- -->(<em>제네릭은 컴파일시 타입 안정성을 보장해주는 역할만 하고 사라진다.</em>)</p><blockquote><p><a href="https://www.baeldung.com/java-type-erasure" target="_blank" rel="noopener noreferrer">Baeldung: Type Erasure in Java Explained</a></p></blockquote><p>타입 소거로 인해 위 코드는 런타임시 아래와 같이 변경된다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">printAll</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Object</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> items</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Object</span><span class="token plain"> item </span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> items</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">System</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">out</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">println</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이는 컴파일 타임에 unchecked assignment를 잡지 못하면 힙 오염에 노출될 수 있음을 뜻한다.<br>
<!-- -->힙 오염으로 부터 안전한 제네릭 가변 인자 메서드의 조건은 다음과 같다.</p><ul><li>제네릭 가변 인자의 요소를 추가하거나 갱신하지 않는다.</li><li>제네릭 가변 인자 또는 복사본을 신뢰할 수 없는 모듈에 노출시키지 않는다.</li></ul><blockquote><p>이펙티브 자바 ITEM32. 제네릭과 가변인수를 함께 쓸 때는 신중하라</p></blockquote>]]></content>
        <category label="java" term="java"/>
        <category label="generic" term="generic"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[타입 추론 메커니즘의 허점]]></title>
        <id>/2021/10/20/타입-추론-메커니즘의-허점</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/10/20/타입-추론-메커니즘의-허점"/>
        <updated>2021-10-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[레거시 API를 다루다 아래와 같은 코드를 작성한 적이 있었다.]]></summary>
        <content type="html"><![CDATA[<p>레거시 API를 다루다 아래와 같은 코드를 작성한 적이 있었다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> members </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> memberService</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">findAll</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// returned List&lt;Map&lt;String, String&gt;&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> sortedMembers </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> members</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">stream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">sorted</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Comparator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">comparing</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">member </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"NAME"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">reversed</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">collect</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Collectors</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">toList</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>정상적으로 동작할 것 같지만 실제로는 <code>get()</code>쪽에서 <strong>"Cannot resolve method 'get' in 'Object'"</strong>라는 컴파일 에러가 발생하게 된다.<br>
<!-- -->람다식의 member가 <code>Map&lt;String, String&gt;</code>이 아닌 <code>Object</code>로 추론된 것이다.</p><p>컴파일러가 어떻게 구문을 해석하는지는 잘 알지 못해 구글링을 해봤고, 다행히 나와 비슷한 사례를 찾을 수 있었다.<br>
<!-- -->아래 stackoverflow 링크에서 Stuart Marks(<em>Oracle JDK 개발자</em>)와 herman이 작성한 답변을 비교하며 보도록 하자.</p><blockquote><p><a href="https://stackoverflow.com/questions/25172595/comparator-reversed-does-not-compile-using-lambda" target="_blank" rel="noopener noreferrer">Stack Overflow: Comparator.reversed() does not compile using lambda</a></p></blockquote><p>요점은 <strong>컴파일러의 타입 추론이 한 번에 여러 단계를 고려할 만큼 강력하지 않다</strong>는 것이다.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>만약 전체 체인을 고려하며 제네릭 타입을 추론한다면 꽤나 복잡해진다고 한다.<br>
<!-- -->이에 관한 내용은 <a href="https://stackoverflow.com/a/66093768" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/a/66093768</a>를 참고하자.</p></div></div><p>다른 예도 살펴보자.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">Comparator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">LocalDate</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> comparator </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Comparator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">naturalOrder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">reversed</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>위 코드는 <strong>"Incompatible types. Found: 'java.util.Comparator&lt;T<!-- -->&gt;<!-- -->', required: 'java.util.Comparator\&lt;java.time.LocalDate<!-- -->&gt;<!-- -->'"</strong>라는 컴파일 에러가 발생한다.<br>
<!-- -->확실히 두 단계에 걸쳐 암시적 타입을 사용하자 추론에 실패한 모습을 볼 수 있다.</p><p>이를 <strong>해결하는 방법은 명시적으로 제네릭 타입을 알려주는 것이다.</strong></p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">Comparator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">LocalDate</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> comparator </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Comparator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">LocalDate</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token function" style="color:#79b6f2">naturalOrder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">reversed</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>처음 예시로 들었던 코드의 경우 아래 중 하나의 방법으로 해결할 수 있겠다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> sortedMembers </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> members</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">stream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">sorted</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Comparator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Map</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">String</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">String</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">String</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token function" style="color:#79b6f2">comparing</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">member </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"NAME"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">reversed</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">collect</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Collectors</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">toList</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> sortedMembers </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> members</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">stream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">sorted</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Comparator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">comparing</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Map</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">String</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">String</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> member</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"NAME"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">reversed</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">collect</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Collectors</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">toList</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> sortedMembers </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> members</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">stream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">sorted</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Comparator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">comparing</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">member </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"NAME"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Collections</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">reverseOrder</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">collect</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Collectors</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">toList</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>인라인 스타일을 포기하는 것도 하나의 방법이라면 방법이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">Comparator</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Map</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">String</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">String</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> orderByName </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Comparator</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">comparing</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">member </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> member</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">get</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"NAME"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> sortedMembers </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> members</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">stream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">sorted</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">orderByName</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">reversed</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">collect</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Collectors</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">toList</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>그리 명쾌하진 않아 보이는 방법들이지만 별다른 수가 없다.<br>
<!-- -->상위 JDK 버전에서 개선되기를 기다리자. (<em>Oracle OpenJDK 17에서도 여전히 안된다!</em>)</p>]]></content>
        <category label="java" term="java"/>
        <category label="generic" term="generic"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ES2015의 destructuring import는 언제 사용하는 것이 적절한가]]></title>
        <id>/2021/10/13/ES2015의-destructuring-import는-언제-사용하는-것이-적절한가</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/10/13/ES2015의-destructuring-import는-언제-사용하는-것이-적절한가"/>
        <updated>2021-10-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[destructuring import란 특정 모듈 내의 필요한 객체만 불러올 수 있는 방법이다.]]></summary>
        <content type="html"><![CDATA[<p>destructuring import란 특정 모듈 내의 필요한 객체만 불러올 수 있는 방법이다.</p><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#8dc891">{</span><span class="token imports"> execSync </span><span class="token imports punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'child_process'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">execSync</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'echo hello'</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>하지만 자바에 너무 익숙해서일까 이 방법은 왠지 주어가 없다는 느낌을 지울 수 없었다.<br>
<!-- -->적어도 나에게는 와일드 카드와 별칭을 통한 import가 더 거리낌 없이 느껴졌다.</p><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports operator" style="color:#d7deea">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:#c5a5c5">as</span><span class="token imports"> childProcess</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'child_process'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">childProcess</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">execSync</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'echo hello'</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>그래서 destructuring import를 언제 사용하는 것이 적절한가를 검색해봤고, 관련된 내용을 구글의 Typescript Style Guide에서 찾을 수 있었다.</p><blockquote><p><a href="https://google.github.io/styleguide/tsguide.html#module-versus-destructuring-imports" target="_blank" rel="noopener noreferrer">Google Typescript Style Guide: Module versus destructuring imports</a></p></blockquote><p>Typescript Style Guide에서 제시하는 방향은 이렇다.</p><ol><li><strong>destructuring import으로 가져올 항목이 많다면 모듈을 통한 namespacing을 고려</strong>해봐야 한다.</li></ol><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token comment" style="color:#999999">// Bad: overlong import statement of needlessly namespaced names.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#8dc891">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">TableViewItem</span><span class="token imports punctuation" style="color:#8dc891">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">TableViewHeader</span><span class="token imports punctuation" style="color:#8dc891">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">TableViewRow</span><span class="token imports punctuation" style="color:#8dc891">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">TableViewModel</span><span class="token imports punctuation" style="color:#8dc891">,</span><span class="token imports"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token imports">  </span><span class="token imports maybe-class-name">TableViewRenderer</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'./tableview'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">let</span><span class="token plain"> item</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> </span><span class="token maybe-class-name">TableViewItem</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token spread operator" style="color:#d7deea">...</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token comment" style="color:#999999">// Better: use the module for namespacing.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports operator" style="color:#d7deea">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:#c5a5c5">as</span><span class="token imports"> tableview</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'./tableview'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">let</span><span class="token plain"> item</span><span class="token operator" style="color:#d7deea">:</span><span class="token plain"> tableview</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token property-access maybe-class-name">Item</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token spread operator" style="color:#d7deea">...</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li><strong>자주 사용되는 항목을 가져오는 경우에는 모듈 전체를 import하기 보다는 destructuring import를 통한 local naming을 고려</strong>해보자.<br>아래와 같은 <a href="https://ko.wikipedia.org/wiki/%ED%94%8C%EB%A3%A8%EC%96%B8%ED%8A%B8_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4" target="_blank" rel="noopener noreferrer">Fluent Interface</a>를 다루는 경우 가독성을 높일 수 있다.</li></ol><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports operator" style="color:#d7deea">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:#c5a5c5">as</span><span class="token imports"> testing</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'./testing'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token comment" style="color:#999999">// All tests will use the same three functions repeatedly.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token comment" style="color:#999999">// When importing only a few symbols that are used very frequently, also</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token comment" style="color:#999999">// consider importing the symbols directly (see below).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">testing</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">describe</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'foo'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  testing</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">it</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'bar'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    testing</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">expect</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token spread operator" style="color:#d7deea">...</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    testing</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">expect</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token spread operator" style="color:#d7deea">...</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-ts codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-ts codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token comment" style="color:#999999">// Better: give local names for these common functions.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword module" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#8dc891">{</span><span class="token imports"> describe</span><span class="token imports punctuation" style="color:#8dc891">,</span><span class="token imports"> it</span><span class="token imports punctuation" style="color:#8dc891">,</span><span class="token imports"> expect </span><span class="token imports punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#c5a5c5">from</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">'./testing'</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">describe</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'foo'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">it</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'bar'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token function" style="color:#79b6f2">expect</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token spread operator" style="color:#d7deea">...</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token function" style="color:#79b6f2">expect</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token spread operator" style="color:#d7deea">...</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>사실 자바의 static import문을 언제 사용하는가를 생각해보면 비슷한 이야기란 걸 알 수 있다.<br>
<!-- -->반복되는 <code>Map.entry</code>를 <code>entry</code>로 줄여쓰기 위해 static import를 쓰곤 하지 않는가.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">import</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token import static namespace" style="opacity:0.7">java</span><span class="token import static namespace punctuation" style="opacity:0.7;color:#8dc891">.</span><span class="token import static namespace" style="opacity:0.7">util</span><span class="token import static namespace punctuation" style="opacity:0.7;color:#8dc891">.</span><span class="token import static class-name" style="color:#FAC863">Map</span><span class="token import static punctuation" style="color:#8dc891">.</span><span class="token import static">entry</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">HangulRomanizator</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Map</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">Character</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">String</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> ROMANIZATION_BY_INITIAL_CONSONANTS </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Map</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">ofEntries</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token function" style="color:#79b6f2">entry</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token char" style="color:#D8DEE9">'ㄱ'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"g"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token function" style="color:#79b6f2">entry</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token char" style="color:#D8DEE9">'ㄲ'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"kk"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token function" style="color:#79b6f2">entry</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token char" style="color:#D8DEE9">'ㄴ'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"n"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token function" style="color:#79b6f2">entry</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token char" style="color:#D8DEE9">'ㄷ'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"d"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token function" style="color:#79b6f2">entry</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token char" style="color:#D8DEE9">'ㄸ'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"tt"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>어찌됐든 각 객체가 어느 모듈에서 온 것인지 혼동되지 않을 정도로만 적절히 destructuring import를 사용해준다면 문제될 것은 없어 보인다.</p>]]></content>
        <category label="javascript" term="javascript"/>
        <category label="es2015" term="es2015"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HashMap은 어떻게 해시 충돌을 회피하는가]]></title>
        <id>/2021/10/08/HashMap은-어떻게-해시-충돌을-회피하는가</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/10/08/HashMap은-어떻게-해시-충돌을-회피하는가"/>
        <updated>2021-10-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[자바의 HashMap이 버킷을 이용해 해시 충돌을 회피한다는 것은 익히 들어 알고 있었는데 구체적으로 어떻게 동작하는지 궁금해서 디버깅해봤다.]]></summary>
        <content type="html"><![CDATA[<p>자바의 <code>HashMap&lt;K, V&gt;</code>이 버킷을 이용해 해시 충돌을 회피한다는 것은 익히 들어 알고 있었는데 구체적으로 어떻게 동작하는지 궁금해서 디버깅해봤다.</p><div class="admonition admonition-caution alert alert--warning"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</h5></div><div class="admonition-content"><p>아래 예제로 들 <code>HashMap&lt;K, V&gt;</code> 코드는 가독성을 위해 일부 코드를 생략하거나 재구성하기도 하였기 때문에 실제 JDK 구현과는 상이할 수 있다.</p></div></div><hr><p><code>HashMap&lt;K, V&gt;</code>의 key-value가 실질적으로 보관되는 곳은 <code>Node&lt;K, V&gt;[] table</code> 필드다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">HashMap</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">K</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">V</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AbstractMap</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">K</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">V</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Map</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">K</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">V</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Cloneable</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Serializable</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">transient</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Node</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">K</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">V</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> table</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>Node&lt;k, V&gt;</code>는 key-value를 나타내는 클래스로, hashcode 및 다음 노드에 대한 정보도 가지고 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Node</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">K</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">V</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Map</span><span class="token class-name punctuation" style="color:#8dc891">.</span><span class="token class-name" style="color:#FAC863">Entry</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">K</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">V</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> hashcode</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">K</span><span class="token plain"> key</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">V</span><span class="token plain"> value</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">Node</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">K</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics class-name" style="color:#FAC863">V</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> next</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>HashMap&lt;K, V&gt;</code>의 <code>put(K, V)</code>이 호출되면 우선 <code>table</code>에 동일한 hashcode로 기등록된 노드가 있는지 확인하고, 기등록된 노드가 없다면 새로운 노드를 생성해 <code>table</code>에 등록한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">Node</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">K</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">V</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> node </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> table</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">table</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">length </span><span class="token operator" style="color:#d7deea">-</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">&amp;</span><span class="token plain"> hashcode</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">node </span><span class="token operator" style="color:#d7deea">==</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">null</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  node </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">newNode</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">hashcode</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> key</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">null</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>기등록된 노드가 있다면 해당 노드의 key와 삽입하려는 key의 동일성 및 동등성을 비교한다.<br>
<!-- -->둘 중 하나라도 만족한다면 기등록된 노드의 value를 삽입하려는 value로 갱신한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">node</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">key </span><span class="token operator" style="color:#d7deea">==</span><span class="token plain"> key </span><span class="token operator" style="color:#d7deea">||</span><span class="token plain"> node</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">key</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">equals</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  node</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">value </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> value</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>동일성이나 동등성을 만족하지 못한 경우에는 버킷을 순회하며 만족하는 노드를 찾아본다.<br>
<!-- -->찾은 경우에는 해당 노드를 갱신하고, 찾지 못한 경우에는 새로운 노드를 생성해 버킷에 추가한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token boolean" style="color:#ff8b50">true</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">Node</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">K</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">V</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> nextNode </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> node</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">next</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">nextNode </span><span class="token operator" style="color:#d7deea">==</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">null</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    nextNode </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">newNode</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">hashcode</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> key</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">null</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">break</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">nextNode</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">key </span><span class="token operator" style="color:#d7deea">==</span><span class="token plain"> key </span><span class="token operator" style="color:#d7deea">||</span><span class="token plain"> nextNode</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">key</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">equals</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    nextNode</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">value </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> value</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">break</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>JDK 8부터는 키 충돌로 인해 버킷이 너무 커질 경우 트리 맵을 사용하는 코드가 추가되어 있다.</p></div></div><hr><p>만약 흐름을 직접 살펴보고 싶다면 아래 코드를 디버깅해보길 바란다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">Map</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">String</span><span class="token generics punctuation" style="color:#8dc891">,</span><span class="token generics"> </span><span class="token generics class-name" style="color:#FAC863">Object</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> map </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">HashMap</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">map</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">put</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"Ea"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">map</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">put</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"FB"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>문자열 <code>"Ea"</code>와 <code>"FB"</code>는 동일한 hashcode를 가지기 때문에 해시 충돌이 발생할 것이다.</p><blockquote><p><a href="https://stackoverflow.com/a/25799246" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/a/25799246</a></p></blockquote>]]></content>
        <category label="java" term="java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[자바 예제로 배우는 암복호화 개론]]></title>
        <id>/2021/10/04/자바-예제로-배우는-암복호화-개론</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/10/04/자바-예제로-배우는-암복호화-개론"/>
        <updated>2021-10-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[암복호화에 대해 갈피를 못잡는 이들을 많이 봐와서 대략적인 내용만 쉽게 정리해보고자 한다.]]></summary>
        <content type="html"><![CDATA[<p>암복호화에 대해 갈피를 못잡는 이들을 많이 봐와서 대략적인 내용만 쉽게 정리해보고자 한다.
(<em>특정 암복호화 알고리즘에 대해서는 다루지 않는다.</em>)</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="암호화">암호화<a class="hash-link" href="#암호화" title="Direct link to heading">​</a></h2><p><strong>암호화(<em>encryption</em>)</strong>란 평문 <code>byte[]</code>를 암호화된 <code>byte[]</code>로 변환하는 것을 일컫는다. </p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">byte</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> plainBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token class-name" style="color:#FAC863">Cipher</span><span class="token plain"> cipher </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getInstance</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"AES/CBC/PKCS5Padding"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">init</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">ENCRYPT_MODE</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> key</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> iv</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">byte</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> encryptedBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">doFinal</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">plainBytes</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>만약 <code>String</code>을 암호화하고자 한다면 해당 <code>String</code>을 <code>byte[]</code>로 변환하는 작업이 선행되어야 한다.<br>
<code>String</code>을 특정 <code>Charset</code> 규칙에 따라 <code>byte[]</code>로 매핑시키는 작업을 <strong>인코딩(<em>encoding</em>)</strong>이라고 한다.</p><div></div><p>다음은 <code>String</code>을 인코딩한 후 암호화를 하는 예이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> plainText </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"평문"</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">byte</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> plainBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> plainText</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getBytes</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">StandardCharsets</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">UTF_8</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token class-name" style="color:#FAC863">Cipher</span><span class="token plain"> cipher </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getInstance</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"AES/CBC/PKCS5Padding"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">init</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">ENCRYPT_MODE</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> key</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> iv</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">byte</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> encryptedBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">doFinal</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">plainBytes</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>암호화된 <code>byte[]</code>를 읽을 수 있는 형태로 나타내기 위해선 <code>String</code>으로 변환해주어야 한다.<br>
<code>byte[]</code>를 특정 <code>Charset</code> 규칙에 따라 <code>String</code>으로 매핑시키는 작업을 <strong>디코딩(<em>decoding</em>)</strong>이라고 한다.</p><div class="admonition admonition-caution alert alert--warning"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</h5></div><div class="admonition-content"><p>decoding을 복호화로 번역해버리면 decryption과 구분이 안되기 때문에 여기서는 영어 발음을 한글로 그대로 표기한 '디코딩'을 사용했다.<br>
<!-- -->실제 decoding은 복호화로 많이들 번역되고 있어 입문자들에게 혼동을 주곤 한다.</p></div></div><p>이때 암호화된 <code>byte[]</code>를 유니코드 문자열로 디코딩하면 알아보기 힘든 외계어가 나오기 때문에 영숫자로 표현되는 <a href="https://ko.wikipedia.org/wiki/%EC%8B%AD%EC%9C%A1%EC%A7%84%EB%B2%95" target="_blank" rel="noopener noreferrer">hex값</a>이나 <a href="https://ko.wikipedia.org/wiki/%EB%B2%A0%EC%9D%B4%EC%8A%A464" target="_blank" rel="noopener noreferrer">Base64</a>로 디코딩하는 것이 일반적이다.</p><p>지금까지의 내용을 순서도로 정리하자면 이렇다.</p><div></div><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="복호화">복호화<a class="hash-link" href="#복호화" title="Direct link to heading">​</a></h2><p><strong>복호화(<em>decryption</em>)</strong>는 암호화된 <code>byte[]</code>를 평문 <code>byte[]</code>로 변환하는 것을 일컫는다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">byte</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> encryptedBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">byte</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token class-name" style="color:#FAC863">Cipher</span><span class="token plain"> cipher </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getInstance</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"AES/CBC/PKCS5Padding"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">init</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">Cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">DECRYPT_MODE</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> key</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> iv</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">byte</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> decryptedBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> cipher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">doFinal</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">encryptedBytes</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>암호화 스텝이 복호화로 바뀌었다는 것을 제외하면 크게 다를게 없다.</p><div></div><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="해싱">해싱<a class="hash-link" href="#해싱" title="Direct link to heading">​</a></h2><p><strong>해싱(<em>hashing</em>)</strong>이란 평문 <code>byte[]</code>를 복호화가 불가능한 <code>byte[]</code>로 변환하는 것을 일컫는다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">byte</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> plainBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token class-name" style="color:#FAC863">MessageDigest</span><span class="token plain"> digest </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">MessageDigest</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">getInstance</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"SHA-256"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">byte</span><span class="token punctuation" style="color:#8dc891">[</span><span class="token punctuation" style="color:#8dc891">]</span><span class="token plain"> hashedBytes </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> digest</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">digest</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">plainBytes</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>복호화가 불가능하더라도 해시 값끼리 비교하여 동일한 평문으로부터 생성된 것인지는 판단할 수 있다.<br>
<!-- -->해싱은 이렇게 평문 노출의 위험 없이 데이터가 동일한지 검증하고자 할 때 유용하다.</p><div></div><p>해싱은 암호화와 달리 항상 일정한 길이의 결과를 가지기 때문에 해시 값이 겹칠 수 있다.<br>
<!-- -->입력의 가짓수는 무한한 반면, 출력은 유한하기 때문에 이는 당연한 결과다. (<em><a href="https://ko.wikipedia.org/wiki/%EB%B9%84%EB%91%98%EA%B8%B0%EC%A7%91_%EC%9B%90%EB%A6%AC" target="_blank" rel="noopener noreferrer">비둘기집 원리</a></em>)</p><p>그러나 아직까지 SHA-256(<em>2의 256승 가지의 출력</em>)에서 충돌 취약점이 발견된 사례는 없다.</p>]]></content>
        <category label="java" term="java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[java.io 필터 스트림의 이해]]></title>
        <id>/2021/10/02/java.io-필터-스트림의-이해</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/10/02/java.io-필터-스트림의-이해"/>
        <updated>2021-10-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[필터 스트림이란 InputStream 및 OutputStream에 부가적인 기능을 부여하기 위해 사용되는 스트림으로, FilterInputStream, FilterOutputStream이 이에 해당한다.]]></summary>
        <content type="html"><![CDATA[<p>필터 스트림이란 <strong><code>InputStream</code> 및 <code>OutputStream</code>에 부가적인 기능을 부여하기 위해 사용되는 스트림</strong>으로, <code>FilterInputStream</code>, <code>FilterOutputStream</code>이 이에 해당한다.  </p><div class="language-md codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-md codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token plain">InputStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── ByteArrayInputStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── FileInputStream</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">├── FilterInputStream</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    ├── BufferedInputStream</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    ├── DataInputStream</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    ├── LineNumberInputStream</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    └── PushbackInputStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── ObjectInputStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── PipedInputStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── SequenceInputStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">└── StringBufferInputStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">OutputStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── ByteArrayOutputStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── FileOutputStream</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">├── FilterOutputStream</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    ├── BufferedOutputStream</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    ├── DataOutputStream</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    └── PrintStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── ObjectOutputStream</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">└── PipedOutputStream</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>위 계층도에서 하이라이팅되지 않은 일반적인 스트림들은 읽거나 쓸 source를 직접적으로 명시한다.<br>
<strong>필터가 아닌 스트림은 source를 알고 있는 스트림의 도입부(<em>head</em>)</strong>라 할 수 있겠다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> fileInputStream </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FileInputStream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"data.txt"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>반면 <strong>필터 스트림은 <a href="https://en.wikipedia.org/wiki/Decorator_pattern" target="_blank" rel="noopener noreferrer">데코레이터 패턴</a>을 통해 다른 스트림에 연결된다.</strong><br>
<!-- -->다음은 data.txt 파일을 버퍼링(<em>buffering</em>)하여 읽어들이기 위해 필터를 추가하는 예이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> fileInputStream </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FileInputStream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"data.txt"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> bufferedInputStream </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">BufferedInputStream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">fileInputStream</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>여기서 <code>fileInputStream</code>과 <code>bufferedInputStream</code>은 둘 다 <code>read()</code>를 통해 data.txt 파일로 부터 데이터를 읽어들일 수 있다.<br>
<!-- -->그러나 같은 source에 여러 스트림을 교차하여 호출할 경우 필터 스트림의 내부 규칙을 위반할 수도 있기 때문에 필터 체인의 마지막 필터만을 사용하는 것이 암묵적인 규칙이다.</p><p>내부 스트림 사용을 원천적으로 방지하기 위해 선언을 아예 생략하기도 한다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> bufferedInputStream </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">BufferedInputStream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FileInputStream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"data.txt"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>필터 체인이 길어지는 경우 들여쓰기가 깊어질 순 있겠다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">var</span><span class="token plain"> inputStreamReader </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">InputStreamReader</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">GZIPInputStream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">CipherInputStream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">            </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">BufferedInputStream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">                </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">FileInputStream</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"data"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">            cipher</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain">     </span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p>바이트 대신 문자를 읽고 쓰는 <code>Reader</code>와 <code>Writer</code>에도 필터가 별도로 존재한다.</p><div class="language-md codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-md codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token plain">Reader</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">├── BufferedReader</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    └── LineNumberReader</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── CharArrayReader</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">├── FilterReader</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    └── PushbackReader</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── InputStreamReader</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    └── FileReader</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── PipedReader</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">└── StringReader</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">Writer</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">├── BufferedWriter</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── CharArrayWriter</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">├── FileterWriter</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── OutputStreamWriter</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    └── FileWriter</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── PipedWriter</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">├── PrintWriter</span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">└── StringWriter</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>다만 <code>InputStream</code>의 경우 필터링에 관한 클래스가 <code>FilterInputStream</code>으로 분류되었지만 <strong><code>Reader</code>는 생성자로 다른 <code>Reader</code>를 주입받는가 주입받지 않는가를 기준으로 필터가 분류된다.</strong> (<em><code>Writer</code>도 동일</em>)</p><p>아래 링크에서 <code>Reader</code> 및 <code>Writer</code> 구현체들의 생성자를 비교해보면 이해하는데 도움이 될 것이다.</p><blockquote><p><a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/package-tree.html" target="_blank" rel="noopener noreferrer">JavaDoc: Hierarchy For Package java.io</a></p></blockquote>]]></content>
        <category label="java" term="java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Execution Context와 Lexical Context]]></title>
        <id>/2021/09/30/Execution-Context와-Lexical-Context</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/09/30/Execution-Context와-Lexical-Context"/>
        <updated>2021-09-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[익히 알다시피 자바스크립트에서의 this는 함수를 호출한 방법에 따라 결정된다.]]></summary>
        <content type="html"><![CDATA[<p>익히 알다시피 자바스크립트에서의 <code>this</code>는 함수를 호출한 방법에 따라 결정된다.<br>
<!-- -->그리고 이를 <strong>실행 문맥(<em>execution context</em>)</strong>안의 <code>this</code>를 가리킨다라고도 표현한다.</p><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">function</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">whatsThis</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token console class-name" style="color:#FAC863">console</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">dir</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">const</span><span class="token plain"> object </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token function" style="color:#79b6f2">whatsThis</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// Window</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">whatsThis</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">call</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// Object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">whatsThis</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">apply</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// Object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token dom variable" style="color:#d7deea">document</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">addEventListener</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'click'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> whatsThis</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// #document</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>자바를 비롯한 대다수의 객체지향 언어는 플라톤의 이데아론을 따르는 반면, 자바스크립트는 엘리노어 로쉬의 프로토타입 이론에 기반하고 있기에 <code>this</code>가 가지는 의미가 다를 수 밖에 없다.</p><blockquote><p><a href="https://medium.com/@limsungmook/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%8A%94-%EC%99%9C-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85%EC%9D%84-%EC%84%A0%ED%83%9D%ED%96%88%EC%9D%84%EA%B9%8C-997f985adb42" target="_blank" rel="noopener noreferrer">토막글: 자바스크립트는 왜 프로토타입을 선택했을까</a></p></blockquote></div></div><p>ES5에 들어서는 함수를 어떻게 호출했는지에 대해 구애받지 않고 <code>this</code>를 직접 설정할 수 있는 <code>bind(thisArg)</code> 메서드를 도입했다.<br>
<!-- -->이 함수는 인자로 받은 함수를 변경하지 않고 새로운 함수를 만들어 반환하는 식으로 동작한다.</p><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token plain">whatsThis</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">bind</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// Object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token dom variable" style="color:#d7deea">document</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">addEventListener</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'click'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> whatsThis</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">bind</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// Object</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ES6(<em>ECMAScript2015</em>)에서는 현재 스코프를 곧 바로 bind하는 화살표 함수(<em>arrow function</em>)를 도입했다.</p><div class="language-js codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-js codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">class</span><span class="token plain"> </span><span class="token maybe-class-name">App</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token function" style="color:#79b6f2">constructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token dom variable" style="color:#d7deea">document</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">addEventListener</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'click'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token console class-name" style="color:#FAC863">console</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">dir</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// App</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token dom variable" style="color:#d7deea">document</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">addEventListener</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">'click'</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#d7deea">=&gt;</span><span class="token plain"> </span><span class="token console class-name" style="color:#FAC863">console</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token method function property-access" style="color:#79b6f2">dir</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"> </span><span class="token comment" style="color:#999999">// Window</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이처럼 생성 시점에 따라 <code>this</code>가 결정되는 것을 <strong>어휘 문맥(<em>lexical context</em>)</strong>을 따른다고도 표현한다.</p><blockquote><p><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/this" target="_blank" rel="noopener noreferrer">MDN Web Docs: this</a><br>
<a href="https://web.dev/javascript-this/" target="_blank" rel="noopener noreferrer">토막글: What is the meaning of this?</a><br>
<a href="https://caniuse.com/arrow-functions" target="_blank" rel="noopener noreferrer">Can I use: Arrow functions</a></p></blockquote>]]></content>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[사내 방화벽 때문에 HTTPS repository를 이용하지 못하는 경우]]></title>
        <id>/2021/09/28/사내-방화벽-때문에-HTTPS-repository를-이용하지-못하는-경우</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/09/28/사내-방화벽-때문에-HTTPS-repository를-이용하지-못하는-경우"/>
        <updated>2021-09-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[사내 외부망 PC에서 메이븐으로 빌드 시 Could not transfer artifact XXX from/to central (https://repo.maven.apache.org/maven2)라는 에러가 뜨며 실패했다.]]></summary>
        <content type="html"><![CDATA[<p>사내 외부망 PC에서 메이븐으로 빌드 시 <strong>Could not transfer artifact XXX from/to central (<a href="https://repo.maven.apache.org/maven2" target="_blank" rel="noopener noreferrer">https://repo.maven.apache.org/maven2</a>)</strong>라는 에러가 뜨며 실패했다.<br>
<!-- -->그레이들은 <strong>"The server may not support the client's requested TLS protocol versions: (TLSv1.2, TLSv1.3)."</strong>라는 에러가 발생한다.</p><p>그렇다고 repository 프로토콜을 HTTPS에서 HTTP로 바꾸면 501 HTTPS Required이 반환된다.<br>
<strong>Central Repository가 2020년 1월 15일부로 HTTP 지원을 중단</strong>했기 때문이다.</p><blockquote><p><a href="https://support.sonatype.com/hc/en-us/articles/360041287334" target="_blank" rel="noopener noreferrer">https://support.sonatype.com/hc/en-us/articles/360041287334</a></p></blockquote><p>HTTPS를 사용할 수 없는 환경이라면 <a href="http://insecure.repo1.maven.org/maven2/" target="_blank" rel="noopener noreferrer">http://insecure.repo1.maven.org/maven2/</a>를 사용하라고 한다.</p><div class="tabs-container tabList_uSqn"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LplD tabs__item--active">maven</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LplD">gradle</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_OmH5"><div class="language-xml codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-xml codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">repositories</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">repository</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">id</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain">central</span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">id</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token tag punctuation" style="color:#8dc891">&lt;</span><span class="token tag" style="color:#fc929e">url</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain">http://insecure.repo1.maven.org/maven2</span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">url</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">repository</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token tag punctuation" style="color:#8dc891">&lt;/</span><span class="token tag" style="color:#fc929e">repositories</span><span class="token tag punctuation" style="color:#8dc891">&gt;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_OmH5" hidden=""><div class="language-groovy codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-groovy codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token plain">repositories </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  maven </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token comment" style="color:#999999">//noinspection HttpUrlsUsage</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    url </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">uri</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token interpolation-string string" style="color:#8dc891">"http://insecure.repo1.maven.org/maven2"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    allowInsecureProtocol </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div><p>참고로 메이븐의 경우 <code>pom.xml</code>에 central이라는 id로 repository를 설정하면 <code>settings.xml</code>에 선언되어 있던 central에 의해 오버라이딩될 수 있으니 유의하자.<br>
<!-- -->이 경우 <code>settings.xml</code>을 수정하거나 repository의 id를 insecure-central처럼 다르게 주면 된다.</p>]]></content>
        <category label="build-tool" term="build-tool"/>
        <category label="maven" term="maven"/>
        <category label="gradle" term="gradle"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[예외 처리의 기본기]]></title>
        <id>/2021/09/26/예외-처리의-기본기</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/09/26/예외-처리의-기본기"/>
        <updated>2021-09-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[예시로 들 소스 코드는 Apache Parquet MR의 SemanticVersion으로, 시맨틱 버전(semantic version)을 나타내는 간단한 도메인 클래스다.]]></summary>
        <content type="html"><![CDATA[<p>예시로 들 소스 코드는 Apache Parquet MR의 <code>SemanticVersion</code>으로, <a href="https://semver.org/lang/ko/" target="_blank" rel="noopener noreferrer">시맨틱 버전(<em>semantic version</em>)</a>을 나타내는 간단한 도메인 클래스다.<br>
<!-- -->(<em>별 다른 이유 없이 전제조건 검사 및 커스텀 예외 핸들링이 포함되어 있어 선택했다.</em>)</p><blockquote><p><a href="https://github.com/apache/parquet-mr/blob/master/parquet-common/src/main/java/org/apache/parquet/SemanticVersion.java" target="_blank" rel="noopener noreferrer">Github: SemanticVersion.java</a></p></blockquote><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">SemanticVersion</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">implements</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Comparable</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">SemanticVersion</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> FORMAT </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token string" style="color:#8dc891">"^(\\d+)\\.(\\d+)\\.(\\d+)([^-+]*)?(?:-([^+]*))?(?:\\+(.*))?$"</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Pattern</span><span class="token plain"> PATTERN </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Pattern</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">compile</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">FORMAT</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> major</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> minor</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> patch</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>먼저 생성자를 살펴보자.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">SemanticVersion</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> major</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> minor</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> patch</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">Preconditions</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">checkArgument</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">major </span><span class="token operator" style="color:#d7deea">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"major must be &gt;= 0"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">Preconditions</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">checkArgument</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">minor </span><span class="token operator" style="color:#d7deea">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"minor must be &gt;= 0"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">Preconditions</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">checkArgument</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">patch </span><span class="token operator" style="color:#d7deea">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"patch must be &gt;= 0"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">major </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> major</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">minor </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> minor</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">patch </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> patch</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>도입부의 <code>Preconditions</code>은 전제조건이 참이 아니라면 예외를 발생시키는 역할을 한다.<br>
<!-- -->이렇게 <strong>잠재적 위험을 초기에 진단하고 빠르게 실패시키는 방식</strong>을 <strong>Fail-fast</strong>라고 한다.  </p><blockquote><p><a href="https://en.wikipedia.org/wiki/Fail-fast" target="_blank" rel="noopener noreferrer">Wikipedia: Fail-fast</a><br>
<a href="https://blog.oio.de/2012/04/20/failing-fast-with-guavas-preconditions/" target="_blank" rel="noopener noreferrer">토막글: Failing Fast With Guava’s Preconditions</a></p></blockquote><p>여기에 파라미터 정보도 메시지에 같이 포함시켜준다면 디버깅을 훨씬 수월하게끔 만들 수 있다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">Preconditions</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">checkArgument</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">major </span><span class="token operator" style="color:#d7deea">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#5a9bcf">0</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"major(%s) must be &gt;= 0"</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> major</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>다음은 문자열을 파싱해서 <code>SemanticVersion</code>을 생성하는 정적 메서드 <code>parse(String)</code>다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">SemanticVersion</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">parse</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> version</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">throws</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">SemanticVersionParseException</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token class-name" style="color:#FAC863">Matcher</span><span class="token plain"> matcher </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> PATTERN</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">matcher</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">version</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token operator" style="color:#d7deea">!</span><span class="token plain">matcher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">matches</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">SemanticVersionParseException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">""</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">+</span><span class="token plain"> version </span><span class="token operator" style="color:#d7deea">+</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">" does not match format "</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">+</span><span class="token plain"> FORMAT</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> major</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> minor</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">int</span><span class="token plain"> patch</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    major </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Integer</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">valueOf</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">matcher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">group</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">1</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    minor </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Integer</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">valueOf</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">matcher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">group</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">2</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    patch </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Integer</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">valueOf</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">matcher</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">group</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token number" style="color:#5a9bcf">3</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">NumberFormatException</span><span class="token plain"> e</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">SemanticVersionParseException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>매개변수로 넘어온 문자열 <code>version</code>이 패턴 <code>PATTERN</code>과 일치하지 않는다면 커스텀 예외 클래스인 <code>SemanticVersionParseException</code>을 발생시키고 있다.<br>
<!-- -->이러한 <strong>커스텀 예외 클래스를 쓰는 가장 큰 이유는 예외를 좀 더 구체화하여 호출자에게 더 많은 정보를 주기 위해서</strong>다.</p><p><code>Matcher</code>에 의해 그룹핑된 문자열들을 정수형으로 변환할 때 발생할 수 있는 <code>NumberFormatException</code>(<em>runtime exception</em>)을 굳이 잡아서 <code>SemanticVersionParseException</code>으로 래핑하여 던지는 것도 같은 이유에서다.</p>]]></content>
        <category label="java" term="java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[내부 클래스에서 외부 클래스 this 접근하기]]></title>
        <id>/2021/09/19/내부-클래스에서-외부-클래스-this-접근하기</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/09/19/내부-클래스에서-외부-클래스-this-접근하기"/>
        <updated>2021-09-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[내부 클래스에서 외부 클래스의 this를 참조하려면 클래스명.this를 사용하면 된다고 한다.]]></summary>
        <content type="html"><![CDATA[<p><strong>내부 클래스에서 외부 클래스의 <code>this</code>를 참조하려면 <code>클래스명.this</code>를 사용</strong>하면 된다고 한다.  </p><blockquote><p><a href="https://docs.oracle.com/javase/specs/jls/se9/html/jls-15.html#jls-15.8.4" target="_blank" rel="noopener noreferrer">Oracle JLS 15.8.4: Qualified this</a><br>
<a href="https://stackoverflow.com/questions/11276994/what-does-qualified-this-construct-mean-in-java" target="_blank" rel="noopener noreferrer">Stack Overflow: What does "qualified this" construct mean in java?</a></p></blockquote><p>외부 클래스에 대해 몰라도 되는 내부 <code>static</code> 클래스만 만들다 보니 이런 syntax는 처음 써봤다.<br>
<!-- -->(<em>나중에 돌아보니 이펙티브 자바의 <strong>'ITEM24. 멤버 클래스는 되도록 static으로 만들라'</strong>에 이에 관한 내용이 실려 있었다.</em>)</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@AllArgsConstructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">access </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AccessLevel</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">PRIVATE</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">TypeSwitch</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">T</span><span class="token plain"> object</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">boolean</span><span class="token plain"> isExpired</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">static</span><span class="token plain"> </span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">TypeSwitch</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">on</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">T</span><span class="token plain"> object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"object must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">TypeSwitch</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">false</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">U</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Branch</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">U</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">when</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Class</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">U</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> expectedType</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">expectedType</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"expectedType must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Branch</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">expectedType</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">void</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">otherwise</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Consumer</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> handler</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">handler</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"handler must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token operator" style="color:#d7deea">!</span><span class="token plain">isExpired</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      handler</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">accept</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      isExpired </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">true</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token annotation punctuation" style="color:#8dc891">@RequiredArgsConstructor</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">access </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">AccessLevel</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">PRIVATE</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Branch</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">U</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">private</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">final</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Class</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">U</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> expectedType</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">TypeSwitch</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">T</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">then</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@Nonnull</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">Consumer</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">U</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> handler</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token class-name" style="color:#FAC863">Objects</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">requireNonNull</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">handler</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"handler must not be null"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">(</span><span class="token operator" style="color:#d7deea">!</span><span class="token plain">isExpired </span><span class="token operator" style="color:#d7deea">&amp;&amp;</span><span class="token plain"> expectedType</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">isInstance</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        handler</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">accept</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">expectedType</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">cast</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">object</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">        isExpired </span><span class="token operator" style="color:#d7deea">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ff8b50">true</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">TypeSwitch</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">this</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>외부 클래스 <code>TypeSwitch&lt;T&gt;</code>의 <code>T object</code>를 내부 클래스 <code>Branch&lt;U&gt;</code>에서 참조할 수 있도록 하기 위해 내부 클래스를 <code>static</code>으로 선언하지 않았다.<br>
<!-- -->(<em>내부 클래스가 <code>static</code> 클래스일 경우에는 외부 클래스에 대한 상태를 저장하지 않는 독립적인 객체로 다루어지기 때문에 외부 클래스를 참조할 수 없다.</em>)</p><p>예제의 <code>TypeSwitch&lt;T&gt;</code>는 JDK 17에서 선행 공개된 <a href="https://www.baeldung.com/java-switch-pattern-matching" target="_blank" rel="noopener noreferrer">Pattern Matching for Switch</a>를 흉내내본 것이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token class-name" style="color:#FAC863">TypeSwitch</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">from</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">exception</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">when</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">IllegalArgumentException</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">then</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">illegalArgumentException </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">when</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">IllegalStateException</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token keyword" style="color:#c5a5c5">class</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">then</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">illegalStateException </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">    </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">otherwise</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">exception </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">}</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="java" term="java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[empty data에 대한 적절한 응답 코드는 무엇인가]]></title>
        <id>/2021/09/11/empty-data에-대한-적절한-응답-코드는-무엇인가</id>
        <link href="https://your-docusaurus-test-site.com/blog/2021/09/11/empty-data에-대한-적절한-응답-코드는-무엇인가"/>
        <updated>2021-09-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[요청받은 리소스가 없을 때 가장 적절한 HTTP 상태 코드는 무엇인가에 대한 질문이다.]]></summary>
        <content type="html"><![CDATA[<p><strong>요청받은 리소스가 없을 때 가장 적절한 HTTP 상태 코드는 무엇인가</strong>에 대한 질문이다.</p><div class="language-java codeBlockContainer_MPoW theme-code-block" style="--prism-background-color:#282c34;--prism-color:#ffffff"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-java codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#ffffff"><span class="token annotation punctuation" style="color:#8dc891">@GetMapping</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token string" style="color:#8dc891">"/{id}"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token keyword" style="color:#c5a5c5">public</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ResponseEntity</span><span class="token generics punctuation" style="color:#8dc891">&lt;</span><span class="token generics class-name" style="color:#FAC863">MemberDto</span><span class="token generics punctuation" style="color:#8dc891">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#79b6f2">findById</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token annotation punctuation" style="color:#8dc891">@PathVariable</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">String</span><span class="token plain"> id</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#8dc891">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">  </span><span class="token keyword" style="color:#c5a5c5">return</span><span class="token plain"> memberService</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">findById</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">map</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">memberEntity </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ResponseEntity</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">ok</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain">          </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">body</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">MemberDto</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">from</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token plain">memberEntity</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#ffffff"><span class="token plain">      </span><span class="token punctuation" style="color:#8dc891">.</span><span class="token function" style="color:#79b6f2">orElseThrow</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token plain"> </span><span class="token operator" style="color:#d7deea">-&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#c5a5c5">new</span><span class="token plain"> </span><span class="token class-name" style="color:#FAC863">ResponseStatusException</span><span class="token punctuation" style="color:#8dc891">(</span><span class="token class-name" style="color:#FAC863">HttpStatus</span><span class="token punctuation" style="color:#8dc891">.</span><span class="token plain">?</span><span class="token operator" style="color:#d7deea">?</span><span class="token operator" style="color:#d7deea">?</span><span class="token punctuation" style="color:#8dc891">,</span><span class="token plain"> </span><span class="token string" style="color:#8dc891">"no such member"</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">)</span><span class="token punctuation" style="color:#8dc891">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#ffffff"><span class="token plain"></span><span class="token punctuation" style="color:#8dc891">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>예를 들어, <code>/members/1</code>에 대해 GET 요청을 받았으나 이에 해당하는 member가 없다면 어떤 HTTP 상태 코드를 내려주어야 할까?  </p><p>구글링을 해보니 이에 관한 많은 논쟁이 있었고, 이들의 의견은 크게 두 가지로 나뉘었다.</p><ul><li>200 OK를 내려주어야 한다.<br>요청받은 리소스를 찾지 못했더라도 클라이언트의 요청이 잘못된 것은 아니므로 404 Not Found를 내려주는 것은 옳지 않다.<br>클라이언트가 올바르지 않은 URL로 요청했다고 오해할 여지가 있을 것이다.</li><li>404 Not Found를 내려주어야 한다.<br>찾으려는 리소스가 없으면 404 Not Found를 내려주는 것이 200 OK와 빈 값을 내려주는 것보다 의미상 명확하다.<br>만약 200 OK를 사용한다면 클라이언트는 매번 빈 값인지 확인하거나 별도의 상태 코드 또는 플래그를 두어야 할 것이다.</li></ul><p>저마다의 이유로 의견이 분분했지만 나는 아래 stackoverflow 링크에서 Justus Romijn이 작성한 답변이 비교적 최근에 작성된 것이기도 하고 가장 이치에 맞다 생각되어 받아들이는데 거리낌이 없었다.</p><blockquote><p><a href="https://stackoverflow.com/questions/11746894/what-is-the-proper-rest-response-code-for-a-valid-request-but-an-empty-data/48746789#48746789" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/questions/11746894/what-is-the-proper-rest-response-code-for-a-valid-request-but-an-empty-data/48746789#48746789</a></p></blockquote><p>그의 주장에 설명을 조금 덧붙여 정리해보자면 이렇다.</p><ul><li><code>/members/1</code>처럼 식별자를 통해 명확한 리소스를 요청하는 경우는 404 Not Found를 내려주어야 한다.<br><a href="https://datatracker.ietf.org/doc/html/rfc2616#section-10.4.5" target="_blank" rel="noopener noreferrer">RFC 2616</a>에 따르면 <strong>404 Not Found는 서버가 일치하는 항목을 찾지 못했다는 의미이며, 상태가 일시적인지 영구적인지에 대한 표시는 제공하지 않는다.</strong><br>따라서 클라이언트가 존재하지 않는 리소스라고 식별하여도 문제되지 않는다.</li><li><code>/members</code>나 <code>/members?name=kyle</code>처럼 다건이 될 수 있는 리소스를 검색하는 경우에는 200 OK와 빈 리스트를 내려주어야 한다.<br><strong>검색의 결과는 빈 리스트가 되어도 인지적으로 거슬리지 않는다.</strong></li></ul><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>마이크로소프트의 Restful API 가이드에서는 일치하는 항목이 없는 검색 작업의 경우 204 No Content로 반환될 수 있다고 설명하고 있다.</p><blockquote><p><a href="https://docs.microsoft.com/ko-kr/azure/architecture/best-practices/api-design#get-methods" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/ko-kr/azure/architecture/best-practices/api-design#get-methods</a></p></blockquote></div></div><p>어쨌거나 요점은 <strong>식별자를 통해 명확한 리소스를 요청하는 경우와 검색을 하는 경우를 달리 생각해야 한다</strong>는 것이다.<br>
<!-- -->아마 많은 사람들이 이 부분에 대해 짚고 넘어가지 않아 혼란이 빚어진게 아닐까.</p>]]></content>
        <category label="http" term="http"/>
        <category label="rest-api" term="rest-api"/>
    </entry>
</feed>