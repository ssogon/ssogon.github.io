"use strict";(self.webpackChunkmatdomabaem_blog=self.webpackChunkmatdomabaem_blog||[]).push([[5198],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return u}});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=m(a),u=l,s=d["".concat(p,".").concat(u)]||d[u]||k[u]||r;return a?n.createElement(s,o(o({ref:t},c),{},{components:a})):n.createElement(s,o({ref:t},c))}));function u(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var m=2;m<r;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},90124:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return k}});var n=a(87462),l=a(63366),r=(a(67294),a(3905)),o=["components"],i={title:"\uc2a4\ud2b8\ub9bc API"},p=void 0,m={unversionedId:"\uc790\ubc14-8-\ud504\ub85c\uadf8\ub798\ubc0d/\uc2a4\ud2b8\ub9bc-API",id:"\uc790\ubc14-8-\ud504\ub85c\uadf8\ub798\ubc0d/\uc2a4\ud2b8\ub9bc-API",title:"\uc2a4\ud2b8\ub9bc API",description:"Stream API\ub294 \uc694\uc18c\uc758 \uc2dc\ud000\uc2a4\ub97c functional\ud558\uac8c \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud55c\ub2e4.",source:"@site/docs\\02-\uc790\ubc14-8-\ud504\ub85c\uadf8\ub798\ubc0d\\04-\uc2a4\ud2b8\ub9bc-API.md",sourceDirName:"02-\uc790\ubc14-8-\ud504\ub85c\uadf8\ub798\ubc0d",slug:"/\uc790\ubc14-8-\ud504\ub85c\uadf8\ub798\ubc0d/\uc2a4\ud2b8\ub9bc-API",permalink:"/docs/\uc790\ubc14-8-\ud504\ub85c\uadf8\ub798\ubc0d/\uc2a4\ud2b8\ub9bc-API",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"\uc2a4\ud2b8\ub9bc API"},sidebar:"tutorialSidebar",previous:{title:"\ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d",permalink:"/docs/\uc790\ubc14-8-\ud504\ub85c\uadf8\ub798\ubc0d/\ud568\uc218\ud615-\ud504\ub85c\uadf8\ub798\ubc0d"},next:{title:"Optional API",permalink:"/docs/\uc790\ubc14-8-\ud504\ub85c\uadf8\ub798\ubc0d/Optional-API"}},c={},k=[{value:"\uc2a4\ud2b8\ub9bc \uc778\uc2a4\ud134\uc2a4",id:"\uc2a4\ud2b8\ub9bc-\uc778\uc2a4\ud134\uc2a4",level:2},{value:"\uc7ac\uc0ac\uc6a9 \ubd88\uac00",id:"\uc7ac\uc0ac\uc6a9-\ubd88\uac00",level:2},{value:"\uc911\uac1c \uc5f0\uc0b0\uc790",id:"\uc911\uac1c-\uc5f0\uc0b0\uc790",level:2},{value:"filter",id:"filter",level:3},{value:"map",id:"map",level:3},{value:"flatMap",id:"flatmap",level:3},{value:"sorted",id:"sorted",level:3},{value:"distinct",id:"distinct",level:3},{value:"peek",id:"peek",level:3},{value:"limit",id:"limit",level:3},{value:"skip",id:"skip",level:3},{value:"\uc885\ub8cc \uc5f0\uc0b0\uc790",id:"\uc885\ub8cc-\uc5f0\uc0b0\uc790",level:2},{value:"forEach",id:"foreach",level:3},{value:"anyMatch",id:"anymatch",level:3},{value:"allMatch",id:"allmatch",level:3},{value:"noneMatch",id:"nonematch",level:3},{value:"findFirst",id:"findfirst",level:3},{value:"findAny",id:"findany",level:3},{value:"reduce",id:"reduce",level:3},{value:"count",id:"count",level:3},{value:"max",id:"max",level:3},{value:"min",id:"min",level:3},{value:"toArray",id:"toarray",level:3},{value:"collect",id:"collect",level:3},{value:"toList",id:"tolist",level:4},{value:"toSet",id:"toset",level:4},{value:"toMap",id:"tomap",level:4},{value:"toCollection",id:"tocollection",level:4},{value:"joining",id:"joining",level:4},{value:"groupingBy",id:"groupingby",level:4},{value:"partitioningBy",id:"partitioningby",level:4},{value:"primitive \ud0c0\uc785 \uc2a4\ud2b8\ub9bc",id:"primitive-\ud0c0\uc785-\uc2a4\ud2b8\ub9bc",level:2},{value:"of",id:"of",level:3},{value:"range",id:"range",level:3},{value:"rangeClosed",id:"rangeclosed",level:3},{value:"\ubcd1\ub82c \uc2a4\ud2b8\ub9bc",id:"\ubcd1\ub82c-\uc2a4\ud2b8\ub9bc",level:2},{value:"ForkJoinPool",id:"forkjoinpool",level:3},{value:"\ub85c\uceec ForkJoinPool",id:"\ub85c\uceec-forkjoinpool",level:3}],d={toc:k};function u(e){var t=e.components,a=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Stream API\ub294 \uc694\uc18c\uc758 \uc2dc\ud000\uc2a4\ub97c functional\ud558\uac8c \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc2a4\ud2b8\ub9bc\uc740 \ubcf4\ud1b5 ",(0,r.kt)("inlineCode",{parentName:"p"},"Collection")," \uc778\ud130\ud398\uc774\uc2a4\uc758 ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," \uba54\uc11c\ub4dc\uc778 ",(0,r.kt)("inlineCode",{parentName:"p"},"stream()"),"\uc744 \ud1b5\ud574 \uc0dd\uc131\ub41c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> names = Arrays.asList("scott", "michael", "holden");\nStream<String> nameStream = names.stream();\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Stream.of(T...)")," \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0dd\uc131\ud560 \uc218\ub3c4 \uc788\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream<String> nameStream = Stream.of("scott", "michael", "holden");\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\uc2a4\ud2b8\ub9bc-\uc778\uc2a4\ud134\uc2a4"},"\uc2a4\ud2b8\ub9bc \uc778\uc2a4\ud134\uc2a4"),(0,r.kt)("p",null,"\uc0dd\uc131\ub41c \uc2a4\ud2b8\ub9bc\uc740 \ucc98\ub9ac\ud558\ub294 \uc6d0\ubcf8 \ub370\uc774\ud130\ub97c \ubcc0\uacbd\ud558\uc9c0 \uc54a\uc73c\uba70 \ubcc4\ub3c4\uc758 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub41c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"names.stream()\n    .map(String::toUpperCase)\n    .forEach(System.out::println); // SCOTT MICHAEL HOLDEN\n\nnames.forEach(System.out::println); // scott michael holden\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\uc7ac\uc0ac\uc6a9-\ubd88\uac00"},"\uc7ac\uc0ac\uc6a9 \ubd88\uac00"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc740 \uc911\uac1c \uc5f0\uc0b0\uc790\uc640 \uc885\ub8cc \uc5f0\uc0b0\uc790\ub97c \uacb0\ud569\ud558\uc5ec \ud30c\uc774\ud504\ub77c\uc778\uc744 \ud615\uc131\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc885\ub8cc \uc5f0\uc0b0\uc774 \uc218\ud589\ub41c \ud6c4\uc758 \uc2a4\ud2b8\ub9bc \ud30c\uc774\ud504\ub77c\uc778\uc740 \uc7ac\uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Stream<Widget> pipeline = widgets.stream().filter(b -> b.getColor() == RED);\nint sum1 = pipeline.sum();\nint sum2 = pipeline.mapToInt(b -> b.getWeight()).sum(); // stream has already been operated upon or closed\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\uc911\uac1c-\uc5f0\uc0b0\uc790"},"\uc911\uac1c \uc5f0\uc0b0\uc790"),(0,r.kt)("p",null,"\uba54\uc11c\ub4dc \uccb4\uc774\ub2dd\uc744 \uc704\ud574 ",(0,r.kt)("inlineCode",{parentName:"p"},"Stream<T>"),"\uc744 \ubc18\ud658\ud558\ub294 \uba54\uc11c\ub4dc\ub97c \uc911\uac1c \uc5f0\uc0b0\uc790\ub77c \ub9d0\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc911\uac1c \uc5f0\uc0b0\uc790\ub294 \uc885\ub8cc \uc5f0\uc0b0\uc790\uac00 \ud638\ucd9c\ub418\uae30 \uc804\uae4c\uc9c0 \uc2e4\ud589\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \ud2b9\uc9d5\uc774 \uc788\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc774\ub97c \uc9c0\uc5f0 \uc2e4\ud589(",(0,r.kt)("em",{parentName:"p"},"lazy evaluation"),")\uc774\ub77c\uace0\ub3c4 \ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .map(System.out::println); // \uc2e4\ud589\ub418\uc9c0 \uc54a\uae30\uc5d0 \ucd9c\ub825\ub418\ub294 \uac12 \ub610\ud55c \uc5c6\uc74c\n')),(0,r.kt)("h3",{id:"filter"},"filter"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4 \uc911 ",(0,r.kt)("inlineCode",{parentName:"p"},"Predicate<T>"),"\ub97c \ub9cc\uc871\ud558\ub294 \uc694\uc18c\ub9cc \ub0a8\uae34\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .filter(name -> name.startWith("s"))\n    .forEach(System.out::println); // scott\n')),(0,r.kt)("h3",{id:"map"},"map"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"\ub97c ",(0,r.kt)("inlineCode",{parentName:"p"},"Function<T, R>"),"\uc744 \uc774\uc6a9\ud574 ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"\ub85c \ubcc0\uacbd\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .map(String::toUpperCase)\n    .forEach(System.out::println); // SCOTT MICHAEL HOLDEN\n')),(0,r.kt)("h3",{id:"flatmap"},"flatMap"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"\ub97c ",(0,r.kt)("inlineCode",{parentName:"p"},"Function<T, Stream<R>>"),"\uc744 \uc774\uc6a9\ud574 ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"\ub85c \ubcc0\uacbd\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc5ec\ub7ec \uc2dc\ud000\uc2a4\ub97c \ud558\ub098\uc758 \ub2e8\uc77c \uc6d0\uc18c \uc2a4\ud2b8\ub9bc\uc73c\ub85c \ucc98\ub9ac\ud558\uace0\uc790 \ud560 \ub54c \uc720\uc6a9\ud558\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Stream.of(Arrays.asList(1, 2, 3), Arrays.asList(4, 5, 6))\n    .flatMap(Collection::stream)\n    .forEach(System.out::println); // 1 2 3 4 5 6\n")),(0,r.kt)("h3",{id:"sorted"},"sorted"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Comparable")," \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud55c \uc694\uc18c\ub4e4\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"compareTo(T)")," \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 \uc815\ub82c\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ub9cc\uc57d \uc694\uc18c\ub4e4\uc774 ",(0,r.kt)("inlineCode",{parentName:"p"},"Comparable"),"\uc744 \uad6c\ud604\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 ",(0,r.kt)("inlineCode",{parentName:"p"},"ClassCastException"),"\uc774 \ubc1c\uc0dd\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .sorted()\n    .forEach(System.out::println); // holden michael scott\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Comparator<T>"),"\ub97c \ub9e4\uac1c\ubcc0\uc218\ub85c \ub118\uaca8 \uc815\ub82c \ubc29\ubc95\uc744 \uc9c1\uc811 \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Stream.of(memberA, memberB, memberC)\n    .sorted(Comparator.comparing(member -> member.getName()))\n    .forEach(System.out::println);\n")),(0,r.kt)("p",null,"\ucc38\uace0\ub85c, ",(0,r.kt)("inlineCode",{parentName:"p"},"Comparator"),"\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"comparing(Function<T, R>)")," \uc774\uc678\uc5d0\ub3c4 \ub2e4\uc591\ud55c \ud329\ud130\ub9ac \uba54\uc11c\ub4dc\ub4e4\uc744 \uc81c\uacf5\ud55c\ub2e4."),(0,r.kt)("h3",{id:"distinct"},"distinct"),(0,r.kt)("p",null,"\uc911\ubcf5\ub418\ub294 \uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"equals(Object)")," \uba54\uc11c\ub4dc\ub97c \uc774\uc6a9\ud574 \uc81c\uac70\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream.of(1, 2, 2, 3, 4, 4, 5)\n    .distinct()\n    .forEach(System.out::println); // 1 2 3 4 5\n")),(0,r.kt)("h3",{id:"peek"},"peek"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"Consumer<T>"),"\ub97c \ud1b5\ud574 \uc21c\ud68c\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream.rangeClosed(1, 5)\n    .peek(System.out::println) // 1 2 3 4 5\n    .forEach(i -> {});\n")),(0,r.kt)("h3",{id:"limit"},"limit"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4\uc744 \ud2b9\uc815 \uac1c\uc218\ub9cc\ud07c \uc81c\ud55c\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream.rangeClosed(1, 100)\n    .limit(5)\n    .forEach(System.out::println); // 1 2 3 4 5\n")),(0,r.kt)("h3",{id:"skip"},"skip"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4\uc744 \ud2b9\uc815 \uac1c\uc218\ub9cc\ud07c \uac74\ub108\ub6f4\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream.rangeClosed(1, 100)\n    .skip(95)\n    .forEach(System.out::println); // 96 97 98 99 100\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\uc885\ub8cc-\uc5f0\uc0b0\uc790"},"\uc885\ub8cc \uc5f0\uc0b0\uc790"),(0,r.kt)("p",null,"\ub354 \uc774\uc0c1 ",(0,r.kt)("inlineCode",{parentName:"p"},"Stream<T>"),"\uc744 \ubc18\ud658\ud558\uc9c0 \uc54a\uace0 \ucd5c\uc885 \uacb0\uacfc\ub97c \ubc18\ud658\ud558\ub294 \uba54\uc11c\ub4dc\ub97c \uc885\ub8cc \uc5f0\uc0b0\uc790\ub77c \ub9d0\ud55c\ub2e4."),(0,r.kt)("h3",{id:"foreach"},"forEach"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"Consumer<T>"),"\ub97c \ud1b5\ud574 \uc21c\ud68c\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .forEach(System.out::println); // scott michael holden\n')),(0,r.kt)("h3",{id:"anymatch"},"anyMatch"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4 \uc911 ",(0,r.kt)("inlineCode",{parentName:"p"},"Predicate<T>"),"\ub97c \ub9cc\uc871\ud558\ub294 \uc694\uc18c\uac00 \ud558\ub098\ub77c\ub3c4 \uc788\ub2e4\uba74 ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"\ub97c \ubc18\ud658\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .anyMatch(name -> name.startsWith("s")); // true\n')),(0,r.kt)("h3",{id:"allmatch"},"allMatch"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \ubaa8\ub4e0 \uc694\uc18c\uac00 ",(0,r.kt)("inlineCode",{parentName:"p"},"Predicate<T>"),"\ub97c \ub9cc\uc871\ud55c\ub2e4\uba74 ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"\ub97c \ubc18\ud658\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .allMatch(name -> name.startsWith("s")); // false\n')),(0,r.kt)("h3",{id:"nonematch"},"noneMatch"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \ubaa8\ub4e0 \uc694\uc18c\uac00 ",(0,r.kt)("inlineCode",{parentName:"p"},"Predicate<T>"),"\ub97c \ub9cc\uc871\ud558\uc9c0 \ubabb\ud55c\ub2e4\uba74 ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"\ub97c \ubc18\ud658\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .noneMatch(name -> name.startsWith("s")); // false\n')),(0,r.kt)("h3",{id:"findfirst"},"findFirst"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uccab \ubc88\uc9f8 \uc694\uc18c\ub97c ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional<T>")," \ud615\ud0dc\ub85c \ubc18\ud658\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .findFirst()\n    .get(); // scott\n')),(0,r.kt)("h3",{id:"findany"},"findAny"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc544\ubb34 \uc694\uc18c\ub97c ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional<T>")," \ud615\ud0dc\ub85c \ubc18\ud658\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ubcd1\ub82c\uc73c\ub85c \ucc98\ub9ac\ud558\uc9c0 \uc54a\ub294 \uc774\uc0c1 \uccab \ubc88\uc9f8 \uc694\uc18c\uac00 \ubc18\ud658\ub420 \uac00\ub2a5\uc131\uc774 \ub192\uc9c0\ub9cc \uc774\ub97c \ubcf4\uc7a5\ud558\uc9c0\ub294 \uc54a\ub294\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .findAny()\n    .get(); // \uc608\uc0c1\ud560 \uc218 \uc5c6\uc74c\n')),(0,r.kt)("h3",{id:"reduce"},"reduce"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"BinaryOperator<T>"),"\ub97c \uc774\uc6a9\ud574 \ud558\ub098\ub85c \ubb49\uccd0 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional<T>")," \ud615\ud0dc\ub85c \ubc18\ud658\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream.rangeClosed(1, 10)\n    .reduce(Integer::sum)\n    .getAsInt(); // 55\n")),(0,r.kt)("h3",{id:"count"},"count"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc5d0 \ud3ec\ud568\ub41c \uc694\uc18c\ub4e4\uc758 \uac1c\uc218\ub97c \ubc18\ud658\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .count(); // 3\n')),(0,r.kt)("h3",{id:"max"},"max"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4 \uc911 \uac00\uc7a5 \ud070 \uc694\uc18c\ub97c ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional<T>")," \ud615\ud0dc\ub85c \ubc18\ud658\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ube44\uad50\uc5d0 \uc0ac\uc6a9\ud560 ",(0,r.kt)("inlineCode",{parentName:"p"},"Comparator<T>"),"\ub97c \ud544\uc694\ub85c \ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .max(Comparator.comparing(name -> name))\n    .get(); // scott\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"IntStream"),"\ucc98\ub7fc primitive \ud0c0\uc785\uc744 \uc704\ud55c \uc2a4\ud2b8\ub9bc\uc740 \ubcc4\ub3c4\uc758 ",(0,r.kt)("inlineCode",{parentName:"p"},"Comparator<T>"),"\ub97c \ud544\uc694\ub85c \ud558\uc9c0 \uc54a\ub294\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","primitive \ud0c0\uc785\uc774\uae30 \ub54c\ubb38\uc5d0 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional<T>")," \ud615\ud0dc\ub85c \ubc18\ud658\ud558\uc9c0\ub3c4 \uc54a\ub294\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream.rangeClosed(1, 5)\n    .max(); // 5\n")),(0,r.kt)("h3",{id:"min"},"min"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4 \uc911 \uac00\uc7a5 \uc791\uc740 \uc694\uc18c\ub97c ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional<T>")," \ud615\ud0dc\ub85c \ubc18\ud658\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ube44\uad50\uc5d0 \uc0ac\uc6a9\ud560 ",(0,r.kt)("inlineCode",{parentName:"p"},"Comparator<T>"),"\ub97c \ud544\uc694\ub85c \ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .min(Comparator.comparing(name -> name))\n    .get(); // holden\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"IntStream"),"\uacfc \uac19\uc740 primitive \ud0c0\uc785\uc744 \uc704\ud55c \uc2a4\ud2b8\ub9bc\uc740 ",(0,r.kt)("inlineCode",{parentName:"p"},"Comparator<T>"),"\ub97c \ud544\uc694\ub85c \ud558\uc9c0\ub3c4 \uc54a\uace0 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional<T>")," \ud615\ud0dc\ub85c \ubc18\ud658\ud558\uc9c0\ub3c4 \uc54a\ub294\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream.rangeClosed(1, 5)\n    .min(); // 1\n")),(0,r.kt)("h3",{id:"toarray"},"toArray"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc744 \ubc30\uc5f4 \ud615\ud0dc\ub85c \ubcc0\ud658\ud558\uc5ec \ubc18\ud658\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ubc30\uc5f4\uc744 \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 ",(0,r.kt)("inlineCode",{parentName:"p"},"IntFunction<R>"),"\uc744 \uc694\uad6c\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"IntFunction<R>"),"\uc758 \uc778\uc790\ub85c \ub4e4\uc5b4\uc62c ",(0,r.kt)("inlineCode",{parentName:"p"},"int"),"\ub294 \uc2a4\ud2b8\ub9bc \uc694\uc18c\uc758 \uac1c\uc218\uc774\uace0 \ubc18\ud658 \uac12 ",(0,r.kt)("inlineCode",{parentName:"p"},"R"),"\uc740 \ubc30\uc5f4\uc774 \ub418\uc5b4\uc57c \ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String[] names = Stream.of("scott", "michael", "holden")\n    .toArray(String[]::new);\n')),(0,r.kt)("h3",{id:"collect"},"collect"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub4e4\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"Collector<T, A, R>"),"\ub97c \uc774\uc6a9\ud558\uc5ec \uc218\uc9d1\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uceec\ub809\ud130\ub97c \uc9c1\uc811 \uc791\uc131\ud558\ub294 \uacbd\uc6b0\ub294 \ub4dc\ubb3c\uace0 \ubcf4\ud1b5 ",(0,r.kt)("inlineCode",{parentName:"p"},"Collectors"),"\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uceec\ub809\ud130\ub97c \uc0ac\uc6a9\ud55c\ub2e4."),(0,r.kt)("h4",{id:"tolist"},"toList"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"List<T>")," \ud615\ud0dc\ub85c \ubcc0\ud658\ud558\uc5ec \ubc18\ud658\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> names = Stream.of("scott", "michael", "holden")\n    .collect(Collectors.toList());\n')),(0,r.kt)("h4",{id:"toset"},"toSet"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<E>")," \ud615\ud0dc\ub85c \ubcc0\ud658\ud558\uc5ec \ubc18\ud658\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Set<String> names = Stream.of("scott", "michael", "holden")\n    .collect(Collectors.toSet());\n')),(0,r.kt)("h4",{id:"tomap"},"toMap"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<K, V>")," \ud615\ud0dc\ub85c \ubcc0\ud658\ud558\uc5ec \ubc18\ud658\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc694\uc18c \uc911 \uc5b4\ub5a4 \uac83\uc744 \ud0a4\ub85c \ud560 \uac83\uc774\uace0 \uc5b4\ub5a4 \uac83\uc744 \uac12\uc73c\ub85c \ucde8\uae09\ud560 \uac83\uc778\uc9c0\ub97c \uc54c\ub824\uc8fc\uae30 \uc704\ud574 ",(0,r.kt)("inlineCode",{parentName:"p"},"Function<T, K>"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Function<T, V>"),"\uc744 \ub9e4\uac1c\ubcc0\uc218\ub85c \ub118\uaca8\uc57c \ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Map<Integer, String> idToName = ImmutableMap.of(1, "scott", 2, "michael", 3, "holden")\n    .entrySet()\n    .stream()\n    .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n')),(0,r.kt)("p",null,"\ud0a4\uac00 \ucda9\ub3cc\ud560 \uacbd\uc6b0 \uc5b4\ub5a4 \uac12\uc744 \uc0ac\uc6a9\ud560 \uac83\uc778\uc9c0 \uacb0\uc815\ud558\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"BinaryOperator<T>"),"\ub97c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Map<Integer, String> idToName = ImmutableMap.of(1, "scott", 1, "michael", 1, "holden")\n    .entrySet()\n    .stream()\n    .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (left, right) -> left));\n')),(0,r.kt)("h4",{id:"tocollection"},"toCollection"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc744 \ud2b9\uc815 ",(0,r.kt)("inlineCode",{parentName:"p"},"Collection")," \ud615\ud0dc\ub85c \ubcc0\ud658\ud558\uc5ec \ubc18\ud658\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ubc30\uc5f4\uc744 \uc0dd\uc131\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 ",(0,r.kt)("inlineCode",{parentName:"p"},"Supplier<R>"),"\uc744 \ud544\uc694\ub85c \ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> names = Stream.of("scott", "michael", "holden")\n    .collect(Collectors.toCollection(LinkedList::new));\n')),(0,r.kt)("h4",{id:"joining"},"joining"),(0,r.kt)("p",null,"\ubb38\uc790\uc5f4 \uc2a4\ud2b8\ub9bc\uc744 \ud558\ub098\uc758 \ubb38\uc790\uc5f4\ub85c \uacb0\ud569\ud558\uc5ec \ubc18\ud658\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc774 \uceec\ub809\ud130\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"\uac00 ",(0,r.kt)("inlineCode",{parentName:"p"},"CharSequence")," \ud0c0\uc785\uc774\uc5b4\uc57c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Stream.of("scott", "michael", "holden")\n    .collect(Collectors.joining("\\n")); // scott michael holden\n')),(0,r.kt)("h4",{id:"groupingby"},"groupingBy"),(0,r.kt)("p",null,"\uc2a4\ud2b8\ub9bc\uc758 ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"\ub97c \uadf8\ub8f9\ud551\ud558\uc5ec ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<T, List<T>>")," \ud615\ud0dc\ub85c \ubc18\ud658\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc778\uc790\ub85c \ud0a4 \ubd84\ub958\uae30, \ub9f5 \uc0dd\uc131\uc790, \ucd5c\uc885 \uacb0\uacfc ",(0,r.kt)("inlineCode",{parentName:"p"},"Collector"),"\ub97c \ud544\uc694\ub85c \ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Map<String, List<String>> groupByName = Stream.of("scott", "michael", "holden", "scott")\n    .collect(Collectors.groupingBy(name -> name, HashMap::new, Collectors.toList()));\n// {michael=[michael], scott=[scott, scott], holden=[holden]}\n')),(0,r.kt)("h4",{id:"partitioningby"},"partitioningBy"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"groupingBy"),"\uc640 \uc720\uc0ac\ud558\uc9c0\ub9cc ",(0,r.kt)("inlineCode",{parentName:"p"},"Predicate<T>")," \uacb0\uacfc\ub97c \uae30\uc900\uc73c\ub85c \uadf8\ub8f9\ud551\ud55c\ub2e4\ub294 \uc810\uc774 \ub2e4\ub974\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ud55c \ucabd \uacb0\uacfc\ub9cc \ud544\uc694\ud558\ub2e4\uba74 ",(0,r.kt)("inlineCode",{parentName:"p"},"filter"),"\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc744 \uac83\uc774\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Map<Boolean, List<String>> partitionByName = Stream.of("scott", "michael", "holden", "scott")\n    .collect(Collectors.partitioningBy(name -> name.contains("e")));\n// {true=[michael, holden], false=[scott, scott]}\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"primitive-\ud0c0\uc785-\uc2a4\ud2b8\ub9bc"},"primitive \ud0c0\uc785 \uc2a4\ud2b8\ub9bc"),(0,r.kt)("p",null,"primitive \ud0c0\uc785\uc744 \uc2a4\ud2b8\ub9bc\uc758 \uc694\uc18c\ub85c \uc0ac\uc6a9\ud558\uac8c \ub418\uba74 \uc624\ud1a0 \ubc15\uc2f1\uc774 \uc77c\uc5b4\ub0a0 \uc218 \ubc16\uc5d0 \uc5c6\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Stream<Integer> stream = Stream.of(1, 2, 3); // auto boxing\n")),(0,r.kt)("p",null,"\uc774\ub7ec\ud55c \ubc15\uc2f1 \uc624\ubc84\ud5e4\ub4dc\ub97c \uc5c6\uc560\uace0\uc790 primitive \ud0c0\uc785\uc744 \uc704\ud55c \uc2a4\ud2b8\ub9bc\uc744 \ub530\ub85c \uc81c\uacf5\ud558\uace0 \uc788\ub2e4."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"primitive \ud0c0\uc785 \uc2a4\ud2b8\ub9bc"),(0,r.kt)("th",{parentName:"tr",align:"left"},"primitive \ud0c0\uc785"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"IntStream")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"int"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LongStream")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"long"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DoubleStream")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"double"))))),(0,r.kt)("h3",{id:"of"},"of"),(0,r.kt)("p",null,"\uac00\ubcc0 \uc778\uc790\ub97c \uc694\uc18c\ub85c \uac16\ub294 primitive \ud0c0\uc785 \uc2a4\ud2b8\ub9bc\uc744 \uc0dd\uc131\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream stream = IntStream.of(1, 2, 3);\n")),(0,r.kt)("h3",{id:"range"},"range"),(0,r.kt)("p",null,"\ud2b9\uc815 \ubc94\uc704\ub85c primitive \ud0c0\uc785 \uc2a4\ud2b8\ub9bc\uc744 \uc0dd\uc131\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ub9c8\uc9c0\ub9c9 \uc22b\uc790\ub97c \ud3ec\ud568\ud558\uc9c0 \uc54a\ub294 \ubc94\uc704\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream stream = IntStream.range(1, 5); // [1, 2, 3, 4]\n")),(0,r.kt)("h3",{id:"rangeclosed"},"rangeClosed"),(0,r.kt)("p",null,"\ud2b9\uc815 \ubc94\uc704\ub85c primitive \ud0c0\uc785 \uc2a4\ud2b8\ub9bc\uc744 \uc0dd\uc131\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ub9c8\uc9c0\ub9c9 \uc22b\uc790\ub97c \ud3ec\ud568\ud558\ub294 \ubc94\uc704\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream stream = IntStream.rangeClosed(1, 5); // [1, 2, 3, 4, 5]\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\ubcd1\ub82c-\uc2a4\ud2b8\ub9bc"},"\ubcd1\ub82c \uc2a4\ud2b8\ub9bc"),(0,r.kt)("p",null,"\ubcd1\ub82c \ucc98\ub9ac\ub97c \uc218\ud589\ud558\ub294 \uc2a4\ud2b8\ub9bc\uc740 ",(0,r.kt)("inlineCode",{parentName:"p"},"Collection")," \uc778\ud130\ud398\uc774\uc2a4\uc758 ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," \uba54\uc11c\ub4dc\uc778 ",(0,r.kt)("inlineCode",{parentName:"p"},"parallelStream()"),"\uc744 \ud1b5\ud574 \uc0dd\uc131\ub41c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Arrays.asList("scott", "michael", "holden")\n    .parallelStream()\n    .forEach(System.out::println); // \uc608\uc0c1\ud560 \uc218 \uc5c6\uc74c\n')),(0,r.kt)("p",null,"\uc2a4\ub808\ub4dc \uc0dd\uc131, \ubcd1\ub82c \ucc98\ub9ac \ud6c4 \uc218\uc9d1 \ube44\uc6a9, \ucee8\ud14d\uc2a4\ud2b8 \uc2a4\uc704\uce6d \ub4f1 \ubcd1\ub82c \ucc98\ub9ac\ub77c\uace0 \ub9c8\ub0e5 \uc88b\uc740 \uac83\uc740 \uc544\ub2c8\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ubc29\ub300\ud55c \uc591\uc758 \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud574\uc57c\ud560 \uacbd\uc6b0\uc5d0\ub9cc \ubcd1\ub82c \ucc98\ub9ac\ub97c \uace0\ub824\ud574\ubcfc \uc218 \uc788\uaca0\ub2e4."),(0,r.kt)("h3",{id:"forkjoinpool"},"ForkJoinPool"),(0,r.kt)("p",null,"\ubcd1\ub82c \uc2a4\ud2b8\ub9bc\uc740 Fork/Join \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud558\uba70, \ud558\ub098\uc758 \ud0dc\uc2a4\ud06c\ub97c \uc5ec\ub7ec \uc2a4\ub808\ub4dc\ub85c \ubd84\ud560(",(0,r.kt)("em",{parentName:"p"},"fork"),")\ud558\uace0 \uacb0\uacfc\ub97c \ud569\uce58\ub294(",(0,r.kt)("em",{parentName:"p"},"join"),") \uacfc\uc815\uc744 \ud1b5\ud574 \ucd5c\uc885 \uacb0\uacfc\ubb3c\uc744 \ub9cc\ub4e4\uc5b4 \ub0b8\ub2e4.  "),(0,r.kt)("p",null,"\ubb38\uc81c\ub294 \uc774 Fork/Join \ud504\ub808\uc784\uc6cc\ud06c\uac00 \ud558\ub098\uc758 \uc804\uc5ed \uc2a4\ub808\ub4dc\ud480\ub9cc\uc744 \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uac83\uc774\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ForkJoinPool.commonPool(); // global\n")),(0,r.kt)("p",null,"\uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub418\ub294 \uc2a4\ub808\ub4dc \ud480\uc758 \ud06c\uae30\ub294 CPU \ucf54\uc5b4 \uc218\uc640 \uac19\uc73c\uba70, \ub9cc\uc57d \ud604\uc7ac PC\uc758 CPU \ucf54\uc5b4 \uc218\uac00 4\uac1c\ub77c\uba74 \ucd1d 4\uac1c\uae4c\uc9c0\uc758 \uc2a4\ub808\ub4dc\ub9cc \ub3d9\uc2dc\uc5d0 \ucc98\ub9ac\ud560 \uc218 \uc788\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ub9cc\uc57d \ucd94\uac00\uc801\uc778 \ubcd1\ub82c \uc2a4\ud2b8\ub9bc \uc694\uccad\uc774 \ub4e4\uc5b4\uc628\ub2e4\uba74 \ub2e4\ub978 \uc2a4\ub808\ub4dc\uac00 \uc885\ub8cc\ub420 \ub54c\uae4c\uc9c0 \ub300\uae30\ud574\uc57c \ud558\ub294 \uc0c1\ud669\uc5d0 \ub193\uc5ec\uc9c0\uac8c \ub420 \uac83\uc774\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc2a4\ub808\ub4dc \ud480\uc758 \ud06c\uae30\ub294 \uc2dc\uc2a4\ud15c \ud504\ub85c\ud37c\ud2f0\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\uc9c0\ub9cc \uadfc\ubcf8\uc801\uc778 \ud574\uacb0\ucc45\uc740 \ub418\uc9c0 \ubabb\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'System.setProperty("java.util.concurrent.ForkJoinPool.common.parallelism", "20");\n')),(0,r.kt)("h3",{id:"\ub85c\uceec-forkjoinpool"},"\ub85c\uceec ForkJoinPool"),(0,r.kt)("p",null,"\uc704\uc5d0\uc11c \uc0b4\ud3b4\ubcf8 \uc804\uc5ed ForkJoinPool\uc758 \ubb38\uc81c\uc810\uc740 \ub85c\uceec ForkJoinPool\uc744 \uc0dd\uc131\ud568\uc73c\ub85c\uc368 \ud574\uacb0\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'ForkJoinPool forkJoinPool = new ForkJoinPool(4);\nforkJoinPool.submit(() ->\n    Arrays.asList("scott", "michael", "holden")\n        .parallelStream()\n        .forEach(System.out::println)\n).get();\n')),(0,r.kt)("hr",null),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://www.inflearn.com/course/the-java-java8"},"Inflearn: The Java 8"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.baeldung.com/java-8-streams-introduction"},"Baeldung: Introduction to Java 8 Streams"))))}u.isMDXComponent=!0}}]);